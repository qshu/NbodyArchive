binout.f:              if(rank.eq.0)
binout.f:              if(rank.eq.0)
binout.f:      if(rank.eq.0)
binout.f:      if(rank.eq.0)
binpop_pk.f:      if(rank.eq.0)
binpop_pk.f:             if(rank.eq.0)
binpop_pk.f:         if(rank.eq.0)
binpop_pk.f:        if(rank.eq.0)
brake.f:            if(rank.eq.0)
chain.f:          if(rank.eq.0)
chain.f:*         if(rank.eq.0)
chain.f:              if(rank.eq.0)
chaos2.f:              if(rank.eq.0)
chaos2.f:              if(rank.eq.0)
chaos2.f:          if(rank.eq.0)
chaos2.f:          if(rank.eq.0)
chaos2.f:          if(rank.eq.0)
chaos2.f:              if(rank.eq.0)
chaos2.f:                      if(rank.eq.0)
check.f:              if(rank.eq.0)
check.f:          if(rank.eq.0)
check.f:      if(rank.eq.0)
check.f:          IF (ETACOR.LT.0.99.and.rank.eq.0)
check.f:              IF (rank.eq.0.and.ETACOR.GT.1.01) 
chlist.f:*     if(rank.eq.0)
chmod.f:              if(rank.eq.0)
chmod.f:                  if(rank.eq.0)
chmod.f:              if(rank.eq.0)
chmod.f:              if(rank.eq.0)
chmod.f:                  if(rank.eq.0)
chmod.f:                  if(rank.eq.0)
chmod.f:                          if(rank.eq.0)
chmod.f:                  if(rank.eq.0)
chmod.f:              if(rank.eq.0)
chstab.f:          if(rank.eq.0)
chstab.f:          if(rank.eq.0)
chstab.f:              if(rank.eq.0)
cmbody.f:                  if(rank.eq.0)
cmbody.f:                  if(rank.eq.0)
cmbody.f:              if(rank.eq.0)
cmbody.f:                          if(rank.eq.0)
cmbody.f:              if(rank.eq.0)
cmbody.f:              if(rank.eq.0)
cmbody.f:          if(rank.eq.0)
cmbody.f:      if(rank.eq.0)
cstab2.f:          if(rank.eq.0)
cstab3.f:                  if(rank.eq.0)
cstab3.f:          if(rank.eq.0)
cstab3.f:          if(rank.eq.0)
cstab4.f:          if(rank.eq.0)
cstab4.f:          if(rank.eq.0)
cstab5.f:*         if(rank.eq.0)
cstab5.f:          if(rank.eq.0)
ellan.f:          if(rank.eq.0)
energy_mpi.f:      if(irank.eq.0)irank=isize
escape.f:      if(rank.eq.0)
escape.f:              if(rank.eq.0)
escape.f:          if(rank.eq.0)
escape.f:          if(rank.eq.0)
evolve.f:          if(rank.eq.0)
evolve.f:          if(rank.eq.0)
evolve.f:              if(rank.eq.0)
evolve.f:          if(rank.eq.0)
evolve.f:              if(rank.eq.0)
evolve.f:              if(rank.eq.0)
evolve.f:              if(rank.eq.0)
evolve.f:              if(rank.eq.0)
expel2.f:*         if(rank.eq.0)
expel2.f:                      if(rank.eq.0)
expel2.f:              if(rank.eq.0)
extend.f:*     if(rank.eq.0)
findj.f:              if(rank.eq.0)
findj.f:          if(rank.eq.0)
flyby.f:*     if(rank.eq.0)
fpoly1_mpi.f:      if(irank.eq.0)irank=isize
fpoly2_mpi.f:      if(irank.eq.0)irank=isize
giant2.f:          if(rank.eq.0)
giant2.f:*     if(rank.eq.0)
hcorr.f:              if(rank.eq.0)
hiarch.f:          if(rank.eq.0)
hidat.f:          if(rank.eq.0)
hidat.f:                  if(rank.eq.0)
hidat.f:          if(rank.eq.0)
hivel.f:              if(rank.eq.0)
hivel.f:              if(rank.eq.0)
hmdot.f:          if(rank.eq.0)
hmdot.f:              if(rank.eq.0)
hmdot2.f:              if(rank.eq.0)
hmdot2.f:          if(rank.eq.0)
hrplot.f:      if(rank.eq.0)
hrplot.f:      if(rank.eq.0)
hrplot.f:                  if(rank.eq.0)
hrplot.f:              if(rank.eq.0)
hrplot.f:              if(rank.eq.0)
imf.f:      if(rank.eq.0)
imf2.f:      if(rank.eq.0)
imf2.f:      if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:                  if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:                  if(rank.eq.0)
impact.f:*             if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:                  if(rank.eq.0)
impact.f:                  if(rank.eq.0)
impact.f:                  if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:              if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:          if(rank.eq.0)
impact.f:          if(rank.eq.0)
instar.f:      if(rank.eq.0)
instar.f:      if(rank.eq.0)
kick.f:          if(rank.eq.0)
kick.f:          if(rank.eq.0)
kick.f:          if(rank.eq.0)
ksapo.f:*     if(rank.eq.0)
ksin2.f:          if(rank.eq.0)
ksin2.f:          if(rank.eq.0)
ksinit.f:*         if(rank.eq.0)
ksinit.f:          if(rank.eq.0)
ksinit.f:              if(rank.eq.0)
ksinit.f:          if(rank.eq.0)
ksint.f:                      if(rank.eq.0)
ksint.f:*         if(rank.eq.0)
ksint.f:                      if(rank.eq.0)
ksint.f:                      if(rank.eq.0)
ksint.f:*                     if(rank.eq.0)
ksint.f:          if(rank.eq.0)
ksrect.f:          if(rank.eq.0)
ksrect.f:          if(rank.eq.0)
ksrect.f:          if(rank.eq.0)
ksrect.f:*     if(rank.eq.0)
ksterm.f:          if(rank.eq.0)
ksterm.f:          if(rank.eq.0)
ksterm.f:*     if(rank.eq.0)
kstide.f:              if(rank.eq.0)
kstide.f:              if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:                  if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:          if(rank.eq.0)
kstide.f:          if(rank.eq.0)
levels.f:      if(rank.eq.0)
mdot.f:                 if(rank.eq.0)
mdot.f:                  if(rank.eq.0)
mdot.f:            if(rank.eq.0)
mdot.f:*        if(rank.eq.0)
mdot.f:               if(rank.eq.0)
mdot.f:               if(rank.eq.0)
mdot.f:               if(rank.eq.0)
mdot.f:            if(rank.eq.0)
mdot.f:            if(rank.eq.0)
mdot.f:            if(rank.eq.0)
mdot.f:                  if(rank.eq.0)
mdot.f:            if(rank.eq.0)
mdot.f:         if(rank.eq.0)
mdot.f:                  if(rank.eq.0)
mdot.f:              if(rank.eq.0)
mdot.f:                  if(rank.eq.0)
mdot.f:            if(rank.eq.0)
merge2.f:          if(rank.eq.0)
merge2.f:              if(rank.eq.0)
merge2.f:          if(rank.eq.0)
mloss.f:      if(rank.eq.0)
mloss.f:      if(rank.eq.0)
nbhist.f:      if(rank.eq.0)
nbint.f:*                     if(rank.eq.0)
nbtide.f:      if(rank.eq.0)
nbtide.f:      if(rank.eq.0)
proto_star.f:        if(rank.eq.0)
qpmod3.f:          if(rank.eq.0)
qpmod4.f:          if(rank.eq.0)
quad.f:          if(rank.eq.0)
quad.f:          if(rank.eq.0)
rchain.f:      if(rank.eq.0)
rchain.f:      if(rank.eq.0)
recoil.f:          if(rank.eq.0)
recoil.f:          if(rank.eq.0)
recoil.f:          if(rank.eq.0)
recoil.f:          if(rank.eq.0)
reduce.f:              IF (rank.eq.0.and.BODY(J).GT.0.0D0) 
reset.f:              if(rank.eq.0)
reset2.f:          if(rank.eq.0)
reset2.f:              if(rank.eq.0)
reset2.f:              if(rank.eq.0)
reset2.f:          if(rank.eq.0)
reset2.f:          if(rank.eq.0)
roche.f:*         if(rank.eq.0)
roche.f:              if(rank.eq.0)
roche.f:                 if(rank.eq.0)
roche.f:         if(rank.eq.0)
roche.f:         if(rank.eq.0)
roche.f:            if(rank.eq.0)
roche.f:            if(rank.eq.0)
roche.f:            IF (rank.eq.0.and.MOD(IGR,10).EQ.0) 
roche.f:                  if(rank.eq.0)
roche.f:                  if(rank.eq.0)
roche.f:*        if(rank.eq.0)
roche.f:               if(rank.eq.0)
roche.f:          if(rank.eq.0)
roche.f:*        if(rank.eq.0)
roche.f:         if(rank.eq.0)
roche.f:         if(rank.eq.0)
roche.f:               if(rank.eq.0)
roche.f:                  if(rank.eq.0)
roche.f:            if(rank.eq.0)
roche.f:            if(rank.eq.0)
roche.f:            if(rank.eq.0)
roche.f:                  if(rank.eq.0)
roche.f:          if(rank.eq.0)
roche.f:          if(rank.eq.0)
roche.f:              if(rank.eq.0)
roche.f:          if(rank.eq.0)
roche.f:          if(rank.eq.0)
scale.f:      if(rank.eq.0)
scale.f:      if(rank.eq.0)PRINT*,' RTIDE =',RTIDE,' ETID=',ZMASS/RTIDE
scale.f:       if(rank.eq.0)
setsys.f:              if(rank.eq.0)
setsys.f:              if(rank.eq.0)
setup.f:          if(rank.eq.0)
setup.f:          if(rank.eq.0)
setup.f:          if(rank.eq.0)
setup.f:          if(rank.eq.0)
shrink.f:                  if(rank.eq.0)
stabl3.f:          if(rank.eq.0)
stabl4.f:              if(rank.eq.0)
stabl4.f:              if(rank.eq.0)
stablz.f:          if(rank.eq.0)
steps.f:                  if(rank.eq.0)
tcirc.f:              if(rank.eq.0)
triple.f:          if(rank.eq.0)
units.f:      if(rank.eq.0)
units.f:          if(rank.eq.0)
unpert.f:*             if(rank.eq.0)
unpert.f:                      if(rank.eq.0)
update.f:              if(rank.eq.0)
verify.f:          if(rank.eq.0)
verify.f:          if(rank.eq.0)
verify.f:          if(rank.eq.0)
verify.f:          if(rank.eq.0)
verify.f:          if(rank.eq.0)
verify.f:          if(rank.eq.0)
zare.f:          if(rank.eq.0)
