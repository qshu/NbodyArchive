8c8,9
< C      REAL*8  A(3)
---
>       REAL*8  A(3)
> 
10,41c11,41
< *
< *       Check option for printing single bodies.
< C      IF (KZ(9).LE.1) GO TO 20
< C      IBODY = MIN(5**KZ(9),NTOT)
< *
< C      DO 10 I = 1,IBODY
< C          FIRR = SQRT(FI(1,I)**2 + FI(2,I)**2 + FI(3,I)**2)
< C          FREG = SQRT(FR(1,I)**2 + FR(2,I)**2 + FR(3,I)**2)
< C          EI = 0.5*(XDOT(1,I)**2 + XDOT(2,I)**2 + XDOT(3,I)**2)
< C          DO 4 J = 1,N
< C              IF (J.EQ.I) GO TO 4
< C              IF (I.GT.N.AND.J.LT.IFIRST) GO TO 4
< C              RIJ2 = (X(1,I) - X(1,J))**2 + (X(2,I) - X(2,J))**2 +
< C     &                                      (X(3,I) - X(3,J))**2
< C              EI = EI - BODY(J)/SQRT(RIJ2)
< C    4     CONTINUE
< C          IF (KZ(14).GT.0) THEN
< C              CALL XTRNLV(I,I)
< C              EI = EI + HT
< C          END IF
< C          DO 5 K = 1,3
< C              A(K) = X(K,I) - RDENS(K)
< C    5     CONTINUE
< C          RI = SQRT(A(1)**2 + A(2)**2 + A(3)**2)
< C          if(rank.eq.0)
< C     &    WRITE (6,6)  I, NAME(I), BODY(I), STEP(I), STEPR(I), EI, RI,
< C     &                 LIST(1,I), (A(K),K=1,3), (XDOT(K,I),K=1,3), FIRR,
< C     &                 FREG, RS(I)
< C    6     FORMAT ('BODIES I',I8,'NAME',I8,'MASS',F8.4,'STEP',F8.4,
< C     &         'STEPR',F7.3,'E',F7.1,'R',F7.2,'NNB',I6,3X,'X',3F7.2,
< C     &         3X,'XDOT',3F6.2,3X,'FIRR',F7.1,'FREG',F6.1,'RS',F7.2)
< C   10 CONTINUE
---
> *c       Check option for printing single bodies.
> *      IF (KZ(9).LE.1) GO TO 20
> *      IBODY = MIN(5**KZ(9),NTOT)
> *
> *      DO 10 I = 1,IBODY
> *          FIRR = SQRT(FI(1,I)**2 + FI(2,I)**2 + FI(3,I)**2)
> *          FREG = SQRT(FR(1,I)**2 + FR(2,I)**2 + FR(3,I)**2)
> *          EI = 0.5*(XDOT(1,I)**2 + XDOT(2,I)**2 + XDOT(3,I)**2)
> *          DO 4 J = 1,N
> *              IF (J.EQ.I) GO TO 4
> *              IF (I.GT.N.AND.J.LT.IFIRST) GO TO 4
> *              RIJ2 = (X(1,I) - X(1,J))**2 + (X(2,I) - X(2,J))**2 +
> *     &                                      (X(3,I) - X(3,J))**2
> *              EI = EI - BODY(J)/SQRT(RIJ2)
> *    4     CONTINUE
> *          IF (KZ(14).GT.0) THEN
> *              CALL XTRNLV(I,I)
> *              EI = EI + HT
> *          END IF
> *          DO 5 K = 1,3
> *              A(K) = X(K,I) - RDENS(K)
> *    5     CONTINUE
> *          RI = SQRT(A(1)**2 + A(2)**2 + A(3)**2)
> *          if(rank.eq.0)
> *     &    WRITE (6,6)  I, NAME(I), BODY(I), STEP(I), STEPR(I), EI, RI,
> *     &                 LIST(1,I), (A(K),K=1,3), (XDOT(K,I),K=1,3), FIRR,
> *     &                 FREG, RS(I)
> *    6     FORMAT ('BODIES I',I8,'NAME',I8,'MASS',F8.4,'STEP',F8.4,
> *     &         'STEPR',F7.3,'E',F7.1,'R',F7.2,'NNB',I6,3X,'X',3F7.2,
> *     &         3X,'XDOT',3F6.2,3X,'FIRR',F7.1,'FREG',F6.1,'RS',F7.2)
> *   10 CONTINUE
44c44
<       IF (KZ(6).EQ.0) GO TO 70
---
>    20 IF (KZ(6).EQ.0) GO TO 70
51c51
<           IF (STEP(I).GT.SIMAX) GO TO 40
---
>           IF (nomass(i).eq.1.or.STEP(I).GT.SIMAX) GO TO 40
56a57
>               if (J .eq. 0) go to 30
67c68,69
<           IF (JMIN.LE.I) GO TO 40
---
>           IF (JMIN.EQ.0) GO TO 40
>           IF (nomass(jmin).eq.0.AND.JMIN.LE.I) GO TO 40
72a75
> c          print *, EREL
74c77,79
<           IF (EREL.GT.-0.1*ECLOSE) GO TO 40
---
>           IF (nomass(jmin).eq.0.AND.EREL.GT.-0.1*ECLOSE) GO TO 40
> c          IF (nomass(jmin).eq.1.AND.EREL.GT.-0.1*ECLOSE) GO TO 40
>           IF (nomass(jmin).eq.1.AND.EREL.GT.0) GO TO 40
85,88c90,94
<           if(rank.eq.0)
<      &    WRITE (6,35)  NAME(I), NAME(JMIN), 0, BODY(I), BODY(JMIN),
<      &                  EREL, SEMI, ZN, RIJMIN, RI, ECC, LIST(1,I)
<    35     FORMAT ('   BINARY ',3I8,1P,8E12.5,2I5,2E12.5,I5)
---
>           if(rank.eq.0.AND.nomass(jmin).eq.1)
>      &    WRITE (6,36)  TIME, NAME(I), NAME(JMIN), BODY(I), BODY(JMIN),
>      &  EREL, SEMI, ZN, RIJMIN, RI, ECC, LIST(1,I)
>    36     FORMAT ('significant binaries ',E18.5,2I8,2E12.4,
>      &                  1P5E13.4,1PE13.4, 2I8, 1PE14.4,1PE14.4,I9)
97c103
<           IF (BODY(I).LE.0.0D0) GO TO 60
---
>           IF (BODY(I).LE.0.0D0.and.nomass(i).eq.0) GO TO 60
112a119
>    35     FORMAT ('regularized binaries ',3I9,1P,8E12.4,2I5,2E12.4,I9)
