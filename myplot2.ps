%!PS-Adobe-2.0
%%Title: myplot2.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Jun 12 18:36:05 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
490 280 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 280 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MRshow
490 1198 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 1198 M
[ [(Helvetica) 140.0 0.0 true true (0.5)]
] -46.7 MRshow
490 2117 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 2117 M
[ [(Helvetica) 140.0 0.0 true true (1)]
] -46.7 MRshow
490 3035 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 3035 M
[ [(Helvetica) 140.0 0.0 true true (1.5)]
] -46.7 MRshow
490 3954 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 3954 M
[ [(Helvetica) 140.0 0.0 true true (2)]
] -46.7 MRshow
490 4872 M
63 0 V
6409 0 R
-63 0 V
 stroke
406 4872 M
[ [(Helvetica) 140.0 0.0 true true (2.5)]
] -46.7 MRshow
490 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
490 140 M
[ [(Helvetica) 140.0 0.0 true true (8)]
] -46.7 MCshow
1784 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
1784 140 M
[ [(Helvetica) 140.0 0.0 true true (10)]
] -46.7 MCshow
3079 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
3079 140 M
[ [(Helvetica) 140.0 0.0 true true (12)]
] -46.7 MCshow
4373 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
4373 140 M
[ [(Helvetica) 140.0 0.0 true true (14)]
] -46.7 MCshow
5668 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
5668 140 M
[ [(Helvetica) 140.0 0.0 true true (16)]
] -46.7 MCshow
6962 280 M
0 63 V
0 4529 R
0 -63 V
 stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true (18)]
] -46.7 MCshow
1.000 UL
LTb
490 280 M
6472 0 V
0 4592 V
-6472 0 V
490 280 L
1.000 UL
LT0
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true ('fort.56' u 1:4)]
] -46.7 MRshow
6395 4739 M
399 0 V
490 1751 M
40 136 V
41 81 V
40 83 V
41 86 V
40 134 V
41 43 V
81 137 V
40 -31 V
41 -24 V
40 -35 V
40 -69 V
41 -8 V
40 26 V
41 -12 V
40 -1 V
41 2 V
20 -6 V
20 -23 V
41 -26 V
40 -13 V
40 -58 V
41 -77 V
40 -83 V
41 -87 V
40 -65 V
41 -62 V
40 -63 V
41 -94 V
40 -86 V
41 -52 V
20 -31 V
20 -21 V
40 -38 V
41 -67 V
40 -60 V
81 -116 V
41 -48 V
40 -36 V
81 -9 V
40 -53 V
41 -28 V
81 -31 V
81 -51 V
81 -44 V
81 -29 V
80 -36 V
81 -34 V
81 -29 V
81 -32 V
81 -21 V
81 -15 V
81 -12 V
81 0 V
81 -26 V
81 5 V
80 10 V
81 3 V
81 -6 V
81 7 V
81 -11 V
81 14 V
81 -3 V
81 15 V
40 23 V
41 19 V
81 33 V
80 23 V
81 26 V
81 29 V
81 11 V
81 28 V
81 33 V
81 38 V
81 48 V
81 50 V
81 63 V
40 43 V
40 19 V
81 36 V
81 78 V
41 58 V
40 45 V
41 58 V
40 99 V
81 151 V
40 35 V
41 58 V
81 205 V
40 85 V
41 47 V
40 157 V
41 21 V
40 80 V
40 61 V
41 80 V
40 59 V
41 17 V
40 2 V
20 -51 V
21 -14 V
40 -78 V
41 19 V
40 -50 V
40 -1 V
41 -92 V
40 -71 V
41 -98 V
40 3 V
41 -81 V
40 -38 V
41 -92 V
20 -45 V
20 -32 V
41 -78 V
20 -59 V
20 6 V
40 -68 V
41 -54 V
40 -72 V
41 -53 V
40 -79 V
81 -85 V
81 -84 V
1.000 UL
LT1
6311 4599 M
[ [(Helvetica) 140.0 0.0 true true ('fort.56' u 1:3)]
] -46.7 MRshow
6395 4599 M
399 0 V
490 1134 M
40 -33 V
41 -3 V
40 -1 V
41 12 V
40 47 V
41 67 V
81 69 V
40 -18 V
41 -100 V
40 -25 V
40 18 V
41 47 V
40 -61 V
41 87 V
40 112 V
41 133 V
20 -15 V
20 -24 V
41 -12 V
40 12 V
40 -54 V
41 -126 V
40 -88 V
41 -27 V
40 -65 V
41 -82 V
40 -34 V
41 15 V
40 20 V
41 11 V
20 3 V
20 4 V
40 3 V
41 -23 V
40 -24 V
81 -28 V
41 -18 V
40 -5 V
81 -26 V
40 117 V
41 -153 V
81 -2 V
81 0 V
81 6 V
81 25 V
80 8 V
81 1 V
81 6 V
81 28 V
81 32 V
81 -31 V
81 -10 V
81 47 V
81 21 V
81 27 V
80 -2 V
81 -13 V
81 7 V
81 10 V
81 -1 V
81 -12 V
81 -14 V
81 9 V
40 35 V
41 6 V
81 -11 V
80 -11 V
81 -3 V
81 15 V
81 17 V
81 -55 V
81 -20 V
81 -7 V
81 -11 V
81 -9 V
81 -7 V
40 -2 V
40 -1 V
81 3 V
81 8 V
41 -3 V
40 2 V
41 9 V
40 20 V
81 31 V
40 2 V
41 -49 V
81 -40 V
40 141 V
41 98 V
40 129 V
41 -9 V
40 -2 V
40 39 V
41 69 V
40 -122 V
41 -165 V
40 360 V
20 159 V
21 -20 V
40 -90 V
41 4 V
40 -10 V
40 -76 V
41 -70 V
40 -85 V
41 -113 V
40 -9 V
41 2 V
40 46 V
41 103 V
20 60 V
20 -18 V
41 -45 V
20 -48 V
20 -44 V
40 -55 V
41 -27 V
40 5 V
41 8 V
40 8 V
81 3 V
81 -30 V
1.000 UL
LT2
6311 4459 M
[ [(Helvetica) 140.0 0.0 true true ('fort.56' u 1:3)]
] -46.7 MRshow
6395 4459 M
399 0 V
490 1134 M
40 -33 V
41 -3 V
40 -1 V
41 12 V
40 47 V
41 67 V
81 69 V
40 -18 V
41 -100 V
40 -25 V
40 18 V
41 47 V
40 -61 V
41 87 V
40 112 V
41 133 V
20 -15 V
20 -24 V
41 -12 V
40 12 V
40 -54 V
41 -126 V
40 -88 V
41 -27 V
40 -65 V
41 -82 V
40 -34 V
41 15 V
40 20 V
41 11 V
20 3 V
20 4 V
40 3 V
41 -23 V
40 -24 V
81 -28 V
41 -18 V
40 -5 V
81 -26 V
40 117 V
41 -153 V
81 -2 V
81 0 V
81 6 V
81 25 V
80 8 V
81 1 V
81 6 V
81 28 V
81 32 V
81 -31 V
81 -10 V
81 47 V
81 21 V
81 27 V
80 -2 V
81 -13 V
81 7 V
81 10 V
81 -1 V
81 -12 V
81 -14 V
81 9 V
40 35 V
41 6 V
81 -11 V
80 -11 V
81 -3 V
81 15 V
81 17 V
81 -55 V
81 -20 V
81 -7 V
81 -11 V
81 -9 V
81 -7 V
40 -2 V
40 -1 V
81 3 V
81 8 V
41 -3 V
40 2 V
41 9 V
40 20 V
81 31 V
40 2 V
41 -49 V
81 -40 V
40 141 V
41 98 V
40 129 V
41 -9 V
40 -2 V
40 39 V
41 69 V
40 -122 V
41 -165 V
40 360 V
20 159 V
21 -20 V
40 -90 V
41 4 V
40 -10 V
40 -76 V
41 -70 V
40 -85 V
41 -113 V
40 -9 V
41 2 V
40 46 V
41 103 V
20 60 V
20 -18 V
41 -45 V
20 -48 V
20 -44 V
40 -55 V
41 -27 V
40 5 V
41 8 V
40 8 V
81 3 V
81 -30 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
