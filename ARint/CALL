absorb.f:          CALL STEPK(DT2,DTN2)
absorb.f:          CALL STEPK(DT2,DTN2)
absorb.f:      CALL SETSYS
absorb.f:      CALL XVPRED(ICH,-1)
absorb.f:          CALL GHOST(J)
absorb.f:      CALL REINIT(ISUB)
absorb.f:*     CALL CONST(XCH,VCH,M,NCH,ENER1,G0,ALAG)
absorb.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
absorb.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
absorb.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
absorb.f:*     CALL FLUSH(6)
absorb.f:*     CALL FindChainIndices
absorb.f:*     CALL INITIALIZE XC and WC
bhstab.f:              CALL FLUSH(77)
bhstat.f:              CALL XTRNLV(I,I)
bhstat.f:              CALL FLUSH(91)
bhstat.f:              CALL FLUSH(92)
bhstat.f:              CALL FLUSH(93)
bhstat.f:              CALL FLUSH(94)
bhstat.f:              CALL FLUSH(91)
bhstat.f:              CALL FLUSH(92)
bhstat.f:              CALL FLUSH(93)
bhstat.f:              CALL FLUSH(94)
bhstat.f:          CALL FLUSH(95)
chfind.f:*             CALL CMLIST
chfind.f:              CALL CHLIST(ICH)
chfind.f:              CALL XCPRED(0)
chfirr.f:*         CALL CHLIST(ICH)
chfirr.f:*             CALL CHLIST(ICH)
chfirr.f:          CALL JPRED(J)
chfirr.f:          CALL KSRES2(JP,J1,J2,RIJ2)
chinit.f:      CALL SETSYS
chinit.f:*         CALL FLUSH(6)
chinit.f:      CALL CONST(XCH,VCH,M,NCH,ENERGY,ANG,GAM)
chinit.f:      CALL SUBSYS(NCH,CM)
chinit.f:      CALL NBREM(ICH,NCH,NNB)
chinit.f:      CALL CHLIST(ICH)
chinit.f:      CALL XCPRED(0)   ! original bug 05/15. 
chinit.f:      CALL CHFIRR(ICH,2,X(1,ICH),XDOT(1,ICH),FIRR,FD)
chinit.f:      CALL TCHAIN(NSUB,TSMIN)
chmod.f:              CALL CPERTJ(IT,GX)
chmod.f:          CALL CPERTX(JCLOSE,3,GAMX,GAMY)
chmod.f:              CALL FLUSH(6)
chmod.f:                  CALL ABSORB(ISUB)
chmod.f:          IF (KZ(30).NE.0) CALL ABSORB(ISUB)
chmod.f:              CALL FLUSH(6)
chmod.f:          IF (KZ(30).GT.2) CALL ABSORB(ISUB)
chmod.f:      CALL HPSORT(NN-1,RINV,ISORT)
chmod.f:          CALL FLUSH(6)
chmod.f:              CALL CPERTJ(IT,GX)
chmod.f:          CALL CPERTJ(IESC,GX)
chmod.f:*                 CALL CHSTAB(ITERM)
chmod.f:              CALL CPERTJ(IESC,GX)
chmod.f:*         CALL REDUCE(IESC,JESC,ISUB)
chmod.f:          CALL HPSORT(NN-1,RINV,ISORT)
chmod.f:          CALL HPSORT(NN-1,RINV,ISORT)
chmod.f:          CALL HPSORT(NN-1,RINV,ISORT)
chmod.f:          CALL FLUSH(6)
chmod.f:*     CALL UpdateXandV
chmod.f:*     CALL InitializeXcandWc
chpert.f:      CALL XCPRED(0)
chpot.f:      CALL XCPRED(0)
chterm2.f:      CALL R2SORT(IJ,R2)
chterm2.f:          CALL FLUSH(6)
chterm2.f:          CALL STEPK(DT2,DTN2)
chterm2.f:          CALL STEPK(DT2,DTN2)
chterm2.f:      CALL XVPRED(ICM,-1)
chterm2.f:          CALL XVPRED(J,-1)
chterm2.f:                  CALL DTCHCK(TIME,STEP(J),DTK(40))
chterm2.f:*         CALL FFDOT(J,ZMS,XS,VS)
chterm2.f:      CALL NBREST(ICM,NCH,NP)
chterm2.f:          CALL NBLIST(I3,RS0)    ! Note NBLIST needed to avoid zero.
chterm2.f:          CALL FPOLY1(I3,I3,0)
chterm2.f:          CALL FPOLY2(I3,I3,0)
chterm2.f:              CALL NBLIST(I4,RS0)    ! Note NBLIST needed to avoid zero.
chterm2.f:              CALL FPOLY1(I4,I4,0)
chterm2.f:              CALL FPOLY2(I4,I4,0)
chterm2.f:                  CALL NBLIST(I5,RS0)
chterm2.f:                  CALL FPOLY1(I5,I5,0)
chterm2.f:                  CALL FPOLY2(I5,I5,0)
chterm2.f:              CALL RENEW(I)
chterm2.f:          CALL NBLIST(I5,RS0)
chterm2.f:          CALL FPOLY1(I5,I5,0)
chterm2.f:          CALL FPOLY2(I5,I5,0)
chterm2.f:          CALL NBLIST(JCOMP,RS0)
chterm2.f:   72     CALL NBLIST(ICOMP,RS0)      ! Note possible switching in KSREG.
chterm2.f:          CALL KSREG
chterm2.f:          CALL NBLIST(JCOMP,RS0)
chterm2.f:          CALL NBLIST(ICOMP,RS0)
chterm2.f:          CALL FPOLY1(JCOMP,JCOMP,0)
chterm2.f:              CALL RENEW(JCOMP)
chterm2.f:              CALL FPOLY1(ICOMP,ICOMP,0)
chterm2.f:              CALL FPOLY2(JCOMP,JCOMP,0)
chterm2.f:              CALL FPOLY2(ICOMP,ICOMP,0)
chterm2.f:          CALL NBLIST(ICOMP,RS0)
chterm2.f:          CALL NBLIST(JCOMP,RS0)    ! In case of switch to JCOMP in KSREG.
chterm2.f:          CALL FPOLY1(ICOMP,ICOMP,0)
chterm2.f:          CALL FPOLY1(JCOMP,JCOMP,0)
chterm2.f:          CALL KSREG
chterm2.f:          CALL FPOLY1(J,J,0)
chterm2.f:              CALL MYDUMP(1,2)
chterm.f:          CALL STEPK(DT2,DTN2)
chterm.f:          CALL STEPK(DT2,DTN2)
chterm.f:          CALL FLUSH(6)
chterm.f:      CALL NBLIST(ICM,RS0)
chterm.f:      CALL FPOLY1(ICM,ICM,0)
chterm.f:      CALL FPOLY2(ICM,ICM,0)
chterm.f:      CALL FLUSH(6)
decorr.f:      CALL FLUSH(17)
expel2.f:      CALL COMENV(M01,M1,MC1,AJ1,JSPIN1,KW1,
expel2.f:      CALL star(KW1,M01,M1,TM,TN,TSCLS,LUMS,GB,ZPARS)
expel2.f:      CALL hrdiag(M01,AJ1,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,
expel2.f:          CALL star(KW2,M02,M2,TM,TN,TSCLS,LUMS,GB,ZPARS)
expel2.f:          CALL hrdiag(M02,AJ2,M2,TM,TN,TSCLS,LUMS,GB,ZPARS,
expel2.f:*         CALL FLUSH(78)
expel2.f:          CALL COAL(IPAIR,KW1,KW2,MI)
expel2.f:          CALL NBPOT(2,NP,POT1)
expel2.f:          CALL NBPOT(2,NP,POT2)
expel2.f:              CALL KICK(I1,1,KW1,DM)
expel2.f:              CALL NBLIST(I1,RS0)
expel2.f:              CALL FPOLY1(I1,I1,0)
expel2.f:              CALL FPOLY2(I1,I1,0)
fchain.f:*         CALL XCPRED(0)
fpolyi.f:      CALL STEPS(I,I)
ghost.f:*     CALL FLUSH(6)
ghost.f:      CALL NBREM(ICH,1,NNB)
infall.f:          CALL FLUSH(24)
infall.f:          CALL FLUSH(24)
infall.f:          CALL FLUSH(6)
infall.f:      CALL GHOST(I)
infall.f:          CALL STEPK(DT2,DTN2)
infall.f:          CALL STEPK(DT2,DTN2)
infall.f:      CALL FPOLY1(ICH,ICH,0)
infall.f:      CALL FPOLY2(ICH,ICH,0)
inject.f:          CALL ABSORB(ISUB)
inject.f:          CALL KSTERM
inject.f:          CALL ABSORB(ISUB)
inject.f:          CALL FINDChainIndices     ! Note these two calls are needed.
inject.f:          CALL INITIALIZE XC and WC
inject.f:          CALL ABSORB(ISUB)
inject.f:          CALL CHLIST(ICH)
inject.f:          CALL FLUSH(6)
inject.f:      CALL FINDChainIndices     ! Note these two calls are needed. (2/17)
inject.f:      CALL INITIALIZE XC and WC
reduce.f:      DATA TCALL /0.0D0/
reduce.f:          CALL GRBIN(M(I1),M(I2),XREL,VREL,SEMI,ECC)
reduce.f:          CALL INCLIN(XX,VV,XCM,VCM,ALPH)
reduce.f:          CALL FLUSH(20)
reduce.f:                  CALL INCLIN(XX,VV,XCM,VCM,ALPH)
reduce.f:              CALL FLUSH(40)
reduce.f:          TCALL = TTOT + 1.0
reduce.f:          CALL BHSTAT
reduce.f:          CALL STEPK(DT2,DTN2)
reduce.f:          CALL STEPK(DT2,DTN2)
reduce.f:          CALL XVPRED(ICH,-1)
reduce.f:      CALL NBREST(I,1,NNB)
reduce.f:      CALL XCPRED(0)
reduce.f:          CALL REINIT(ISUB)
reduce.f:*     CALL CONST(XCH,VCH,M,NCH,ENER1,G,ALAG)
reduce.f:      CALL NBREST(ICH,1,NNB)
reduce.f:      CALL NBLIST(I,RS0)
reduce.f:          CALL FPOLY1(I,I,0)
reduce.f:          CALL FCHAIN(I,0,X(1,I),XDOT(1,I),FIRR,FD)
reduce.f:          CALL FPOLY2(I,I,0)
reduce.f:               CALL HIVEL(I)
reduce.f:          CALL NBLIST(ICOMP,RS0)
reduce.f:          CALL NBLIST(JCOMP,RS0)   ! In case ICOMP & JCOMP not consecutive.
reduce.f:          CALL FPOLY1(ICOMP,ICOMP,0)
reduce.f:          CALL FPOLY1(JCOMP,JCOMP,0)
reduce.f:          CALL KSREG
reduce.f:          CALL CHLIST(ICH)
reduce.f:          CALL RENEW(I)
reduce.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
reduce.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
reduce.f:          CALL FFDOT(I,ZMS,XS,VS,SS)
reduce.f:              CALL CONST(XCH,VCH,M,NCH,ENER1,G,ALAG)
reduce.f:*       Set large time to prevent CALL CHAIN while c.m. is escaping.
reduce.f:              IF (KZ(37).GT.0) CALL HIVEL(ICH)
reduce.f:              CALL CONST(XCH,VCH,M,NCH,ENER1,G,ALAG)
reduce.f:*         CALL RENEW(I)
reduce.f:*      CALL UpdateXandV
reinit.f:      CALL NBLIST(ICH,RS0)
reinit.f:      CALL FindChainIndices
reinit.f:      CALL INITIALIZE XC and WC
reinit.f:      CALL CHLIST(ICH)
reinit.f:*     IF (NCH.GT.2) CALL CHLIST(ICH)   ! avoid large GPERT at the end.
reinit.f:          CALL XVPRED(J,0)
reinit.f:      CALL XVPRED(ICH,-1)
reinit.f:      CALL FPOLY1(ICH,ICH,0)
reinit.f:      CALL CHFIRR(ICH,2,X(1,ICH),XDOT(1,ICH),FIRR,FD)
reinit.f:      CALL FPOLY2(ICH,ICH,0)
reinit.f:      CALL EXTEND(ISUB)
reinit.f:      CALL XCPRED(0)
reinit.f:*       Note: probably done on next CALL CHAIN.
reinit.f:*     CALL CONST(XCH,VCH,M,NN,ECH1,ANG,ALAG)
renew.f:      CALL TPERT(IPAIR,GMIN,DT,JCL)
renew.f:      CALL RESOLV(IPAIR,1)
renew.f:      CALL NBPOT(2,NCH,POT1)
renew.f:      CALL NBPOT(1,NCH,POT2)
renew.f:          CALL KSLIST(IPAIR)
renew.f:          CALL KSPOLY(IPAIR,1)
setsys.f:          CALL KSTERM
setsys.f:   10 CALL XVPRED(JCLOSE,-1)
setsys.f:              CALL RESET
setsys.f:          CALL KSTERM
xtpert2.f:            CALL KSRES(JPAIR,J1,J2,0.0D0)
xtpert2.f:*           CALL KSRES(JPAIR,J1,J2,100.0D0)
xtpert2.f:*     CALL FLUSH(77)
xtpert.f:        CALL XCPRED(1)
xtpert.f:            CALL XTPERT2(JPAIR,ACC)
xtpert.f:*           CALL FLUSH(78)
