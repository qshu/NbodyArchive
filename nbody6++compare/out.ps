%!PS-Adobe-3.0
%%Title: OUT
%%For: Rainer Spurzem
%%Creator: a2ps version 4.13
%%CreationDate: Tue Oct  3 16:16:36 2006
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 110
%%PageOrder: Ascend
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Symbol
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-15Encoding
%%+ font Courier-Bold-Ogonki
%%+ font Courier-BoldOblique-Ogonki
%%+ font Courier-Oblique-Ogonki
%%+ font Courier-Ogonki
%%+ font Helvetica-Bold-Ogonki
%%+ font Helvetica-Ogonki
%%+ font Times-Bold-Ogonki
%%+ font Times-Roman-Ogonki
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-15Encoding
/ISO-8859-15Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /Euro /yen /Scaron /section 
/scaron /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /Zcaron /mu /paragraph /bullet 
/zcaron /onesuperior /ordmasculine /guillemotright /OE /oe /Ydieresis /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
%%BeginResource: font Courier-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Bold-Ogonki
/Courier-Bold /Courier-Bold-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -50 123 27] put
dup /Aring [65 -10 123 31] put
dup /Atilde [65 -30 123 29] put
dup /Ecircumflex [69 0 123 28] put
dup /Egrave [69 0 123 27] put
dup /Gcaron [71 10 123 183] put
dup /Idieresis [73 0 123 168] put
dup /Igrave [73 0 123 27] put
dup /Ntilde [78 0 123 29] put
dup /Ograve [79 0 123 27] put
dup /Otilde [79 0 123 29] put
dup /Ucircumflex [85 0 123 28] put
dup /Ugrave [85 -30 123 27] put
dup /Ydieresis [89 0 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 130 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 130 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 0 130 180] put
dup /ccaron [99 18 0 183] put
dup /Ccaron [67 18 130 183] put
dup /ccircumflex [99 18 0 28] put
dup /Ccircumflex [67 18 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 0 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 130 183] put
dup /dcaron [100 30 195 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 0 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 18 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 18 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 18 130 255] put
dup /hcircumflex [104 -20 195 28] put
dup /Hcircumflex [72 0 130 28] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /Idotaccent [73 0 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 130 30] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 130 29] put
dup /Jcircumflex [74 85 130 28] put
dup /Lacute [76 -100 130 180] put
dup /lacute [108 -20 195 180] put
dup /Lcaron [76 -100 130 183] put
dup /lcaron [108 0 195 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 130 28] put
dup /tcaron [116 0 107 183] put
dup /Tcaron [84 0 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 130 30] put
dup /uogonek [117 109 0 178] put
dup /Uogonek [85 5 23 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-BoldOblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-BoldOblique-Ogonki
/Courier-BoldOblique /Courier-BoldOblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -24 123 27] put
dup /Aring [65 16 123 31] put
dup /Atilde [65 -4 123 29] put
dup /Ecircumflex [69 26 123 28] put
dup /Egrave [69 26 123 27] put
dup /Gcaron [71 36 123 183] put
dup /Idieresis [73 26 123 168] put
dup /Igrave [73 26 123 27] put
dup /Ntilde [78 26 123 29] put
dup /Ograve [79 26 123 27] put
dup /Otilde [79 26 123 29] put
dup /Ucircumflex [85 26 123 28] put
dup /Ugrave [85 -4 123 27] put
dup /Ydieresis [89 26 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /Abreve [65 -18 130 162] put
dup /abreve [97 0 0 162] put
dup /Amacron [65 -15 130 30] put
dup /amacron [97 0 0 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 30 130 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 30 130 183] put
dup /ccircumflex [99 0 0 28] put
dup /Ccircumflex [67 30 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 -12 130 183] put
dup /dcaron [100 35 178 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 30 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 30 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 30 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 30 130 255] put
dup /hcircumflex [104 0 178 28] put
dup /Hcircumflex [72 30 130 28] put
dup /Idotaccent [73 30 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 130 30] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 130 29] put
dup /Jcircumflex [74 95 130 28] put
dup /Lacute [76 -88 130 180] put
dup /lacute [108 0 178 180] put
dup /Lcaron [76 -88 130 183] put
dup /lcaron [108 0 178 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 30 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 30 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 30 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 30 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 30 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 30 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 30 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 30 130 28] put
dup /tcaron [116 -59 106 183] put
dup /Tcaron [84 30 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 30 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 30 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 30 130 30] put
dup /Uogonek [85 0 7 178] put
dup /uogonek [117 108 0 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 30 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 30 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 30 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 30 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Oblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Oblique-Ogonki
/Courier-Oblique /Courier-Oblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -4 121 27] put
dup /Aring [65 12 126 31] put
dup /Atilde [65 27 126 29] put
dup /Ecircumflex [69 26 121 28] put
dup /Egrave [69 26 121 27] put
dup /Gcaron [71 29 136 183] put
dup /Idieresis [73 29 136 168] put
dup /Igrave [73 26 121 27] put
dup /Ntilde [78 27 126 29] put
dup /Ograve [79 26 121 27] put
dup /Otilde [79 27 126 29] put
dup /Ucircumflex [85 26 121 28] put
dup /Ugrave [85 -4 121 27] put
dup /Ydieresis [89 29 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 53 133 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 53 133 183] put
dup /ccircumflex [99 0 2 28] put
dup /Ccircumflex [67 53 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 53 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 20 182 183] put
dup /Dcaron [68 33 133 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 53 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 53 133 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 53 133 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 -10 0 180] put
dup /gbreve [103 -10 0 162] put
dup /Gbreve [71 53 133 162] put
dup /gcircumflex [103 -10 0 28] put
dup /Gcircumflex [71 53 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 53 186 255] put
dup /hcircumflex [104 0 182 28] put
dup /Hcircumflex [72 30 133 28] put
dup /Idotaccent [73 30 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 133 29] put
dup /Jcircumflex [74 98 133 28] put
dup /Lacute [76 -83 133 180] put
dup /lacute [108 0 182 180] put
dup /Lcaron [76 -83 133 183] put
dup /lcaron [108 0 182 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 53 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 53 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 53 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 53 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 53 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 40 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 53 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 53 133 28] put
dup /tcaron [116 -65 118 183] put
dup /Tcaron [84 40 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 53 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 53 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 53 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 15 178] put
dup /uring [117 -30 0 31] put
dup /Uring [85 53 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 53 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 40 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 40 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Ogonki
/Courier /Courier-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -30 121 27] put
dup /Aring [65 -15 126 31] put
dup /Atilde [65 0 126 29] put
dup /Ecircumflex [69 0 121 28] put
dup /Egrave [69 0 121 27] put
dup /Gcaron [71 0 136 183] put
dup /Idieresis [73 0 136 168] put
dup /Igrave [73 0 121 27] put
dup /Ntilde [78 0 126 29] put
dup /Ograve [79 0 121 27] put
dup /Otilde [79 0 126 29] put
dup /Ucircumflex [85 0 121 28] put
dup /Ugrave [85 -30 121 27] put
dup /Ydieresis [89 0 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 17 0 180] put
dup /Cacute [67 30 133 180] put
dup /ccaron [99 17 0 183] put
dup /Ccaron [67 30 133 183] put
dup /ccircumflex [99 17 2 28] put
dup /Ccircumflex [67 30 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 133 183] put
dup /dcaron [100 17 156 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 133 255] put
dup /Emacron [69 0 133 30] put
dup /emacron [101 17 0 30] put
dup /Eogonek [69 100 0 178] put
dup /eogonek [101 100 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 133 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 0 133 255] put
dup /Hcircumflex [72 0 133 28] put
dup /hcircumflex [104 0 164 28] put
dup /Idotaccent [73 0 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 133 29] put
dup /Jcircumflex [74 100 133 28] put
dup /Lacute [76 -100 133 180] put
dup /lacute [108 -12 147 180] put
dup /Lcaron [76 -100 133 183] put
dup /lcaron [108 -12 144 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 133 28] put
dup /tcaron [116 -77 92 183] put
dup /Tcaron [84 0 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 20 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Bold-Ogonki
/Helvetica-Bold /Helvetica-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 191 168] put
dup /ydieresis [121 111 0 168] put
dup /Ucircumflex [85 197 191 28] put
dup /Ugrave [85 197 191 27] put
dup /ucircumflex [117 139 0 28] put
dup /ugrave [117 139 0 27] put
dup /Idieresis [73 -27 191 168] put
dup /Igrave [73 -27 191 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 191 28] put
dup /Egrave [69 188 191 27] put
dup /ecircumflex [101 111 0 28] put
dup /egrave [101 111 0 27] put
dup /Agrave [65 197 191 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 191 27] put
dup /ograve [111 139 0 27] put
dup /Atilde [65 197 191 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 191 29] put
dup /ntilde [110 146 0 29] put
dup /Otilde [79 222 191 29] put
dup /otilde [111 139 0 29] put
dup /Aring [65 197 191 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 111 0 162] put
dup /Abreve [65 194 202 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 444 0 178] put
dup /cacute [99 111 0 180] put
dup /Cacute [67 194 193 180] put
dup /ccaron [99 122 0 183] put
dup /Ccaron [67 210 191 183] put
dup /dbar [100 302 298 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 493 73 39] put
dup /Dcaron [68 194 190 183] put
dup /ecaron [101 111 0 183] put
dup /Ecaron [69 167 190 183] put
dup /edotaccent [101 103 0 255] put
dup /Edotaccent [69 188 191 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 139 0 162] put
dup /Gbreve [71 222 191 162] put
dup /Idotaccent [73 -27 191 255] put
dup /iogonek [105 -39 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -7 193 180] put
dup /Lacute [76 139 193 180] put
dup /lcaron [108 155 73 39] put
dup /Lcaron [76 161 73 39] put
dup /nacute [110 159 0 180] put
dup /Nacute [78 231 193 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 215 183] put
dup /ohungarumlaut [111 139 0 189] put
dup /Ohungarumlaut [79 222 191 189] put
dup /racute [114 48 0 180] put
dup /Racute [82 231 193 180] put
dup /rcaron [114 28 0 183] put
dup /Rcaron [82 194 190 183] put
dup /sacute [115 111 0 180] put
dup /Sacute [83 167 193 180] put
dup /scedilla [115 111 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 249 0 39] put
dup /Tcaron [84 139 190 183] put
dup /tcedilla [116 86 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /uhungarumlaut [117 139 0 189] put
dup /Uhungarumlaut [85 197 191 189] put
dup /uring [117 139 0 31] put
dup /Uring [85 194 190 31] put
dup /umacron [117 139 0 30] put
dup /Umacron [85 199 191 30] put
dup /uogonek [117 286 0 178] put
dup /Uogonek [85 260 0 178] put
dup /zacute [122 103 0 180] put
dup /Zacute [90 139 193 180] put
dup /zdotaccent [122 83 0 255] put
dup /Zdotaccent [90 139 206 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Ogonki
/Helvetica /Helvetica-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 199 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 194 199 28] put
dup /Ugrave [85 194 199 27] put
dup /ucircumflex [117 111 0 28] put
dup /ugrave [117 111 0 27] put
dup /Idieresis [73 -21 199 168] put
dup /Igrave [73 -21 199 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 199 28] put
dup /Egrave [69 188 199 27] put
dup /ecircumflex [101 117 0 28] put
dup /egrave [101 117 0 27] put
dup /Agrave [65 167 199 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 199 27] put
dup /ograve [111 111 0 27] put
dup /Atilde [65 167 199 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 199 29] put
dup /ntilde [110 117 0 29] put
dup /Otilde [79 222 199 29] put
dup /otilde [111 111 0 29] put
dup /Aring [65 167 199 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 96 0 162] put
dup /Abreve [65 174 195 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 424 0 178] put
dup /cacute [99 84 0 180] put
dup /Cacute [67 196 195 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 196 195 183] put
dup /dbar [100 270 330 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 523 0 39] put
dup /Dcaron [68 102 195 183] put
dup /ecaron [101 93 0 183] put
dup /Ecaron [69 102 195 183] put
dup /edotaccent [101 111 0 255] put
dup /Edotaccent [69 188 199 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 111 0 162] put
dup /Gbreve [71 222 199 162] put
dup /Idotaccent [73 -21 199 255] put
dup /iogonek [105 -75 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -27 195 180] put
dup /Lacute [76 -27 195 180] put
dup /lcaron [108 169 0 39] put
dup /Lcaron [76 276 0 39] put
dup /nacute [110 160 0 180] put
dup /Nacute [78 220 195 180] put
dup /ncaron [110 70 0 183] put
dup /Ncaron [78 160 195 183] put
dup /ohungarumlaut [111 112 0 189] put
dup /Ohungarumlaut [79 223 195 189] put
dup /racute [114 25 0 180] put
dup /Racute [82 200 195 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 100 195 183] put
dup /sacute [115 84 0 180] put
dup /Sacute [83 167 195 180] put
dup /scedilla [115 83 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 291 0 39] put
dup /Tcaron [84 165 195 183] put
dup /tcedilla [116 84 0 184] put
dup /Tcedilla [84 185 0 184] put
dup /uhungarumlaut [117 112 0 189] put
dup /Uhungarumlaut [85 195 195 189] put
dup /umacron [117 111 0 30] put
dup /Umacron [85 194 199 30] put
dup /uogonek [117 255 0 178] put
dup /Uogonek [85 288 5 178] put
dup /uring [117 112 0 31] put
dup /Uring [85 195 195 31] put
dup /zacute [122 84 0 180] put
dup /Zacute [90 139 195 180] put
dup /zdotaccent [122 84 0 255] put
dup /Zdotaccent [90 139 195 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Bold-Ogonki
/Times-Bold /Times-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 194 219 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 221 219 28] put
dup /Ugrave [85 221 219 27] put
dup /ucircumflex [117 104 0 28] put
dup /ugrave [117 104 0 27] put
dup /Idieresis [73 28 219 168] put
dup /Igrave [73 28 219 27] put
dup /idieresis [136 -34 0 168] put
dup /igrave [136 -34 0 27] put
dup /Ecircumflex [69 174 219 28] put
dup /Egrave [69 174 219 27] put
dup /ecircumflex [101 61 0 28] put
dup /egrave [101 61 0 27] put
dup /Agrave [65 187 219 27] put
dup /agrave [97 76 0 27] put
dup /Ograve [79 222 219 27] put
dup /ograve [111 83 0 27] put
dup /Atilde [65 187 219 29] put
dup /atilde [97 76 0 29] put
dup /Ntilde [78 194 219 29] put
dup /ntilde [110 111 0 29] put
dup /Otilde [79 222 219 29] put
dup /otilde [111 83 0 29] put
dup /Aring [65 187 219 31] put
dup /aring [97 76 0 31] put
dup /abreve [97 83 0 162] put
dup /Abreve [65 194 240 162] put
dup /aogonek [97 175 -30 178] put
dup /Aogonek [65 384 -30 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 210 219 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 232 219 183] put
dup /dbar [100 240 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 473 53 39] put
dup /Dcaron [68 194 210 183] put
dup /ecaron [101 61 0 183] put
dup /Ecaron [69 174 219 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 187 219 255] put
dup /eogonek [101 114 -30 178] put
dup /Eogonek [69 295 -30 178] put
dup /gbreve [103 83 0 162] put
dup /Gbreve [71 222 219 162] put
dup /Idotaccent [73 28 219 255] put
dup /iogonek [105 -50 -30 178] put
dup /Iogonek [73 63 -30 178] put
dup /lacute [108 -3 210 180] put
dup /Lacute [76 167 210 180] put
dup /lcaron [108 194 53 39] put
dup /Lcaron [76 309 53 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 219 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 210 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 222 219 189] put
dup /racute [114 79 0 180] put
dup /Racute [82 239 210 180] put
dup /rcaron [114 55 0 183] put
dup /Rcaron [82 194 210 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 219 180] put
dup /scedilla [115 12 0 184] put
dup /Scedilla [83 94 0 184] put
dup /tcaron [116 271 0 39] put
dup /Tcaron [84 167 210 183] put
dup /tcedilla [116 89 0 184] put
dup /Tcedilla [84 227 0 184] put
dup /umacron [117 104 0 30] put
dup /Umacron [85 215 219 30] put
dup /uhungarumlaut [117 104 0 189] put
dup /Uhungarumlaut [85 221 219 189] put
dup /uogonek [117 236 -25 178] put
dup /Uogonek [85 299 -25 178] put
dup /uring [117 111 0 31] put
dup /Uring [85 194 174 31] put
dup /zacute [122 80 0 180] put
dup /Zacute [90 160 219 180] put
dup /zdotaccent [122 70 0 255] put
dup /Zdotaccent [90 200 219 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Roman-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Roman-Ogonki
/Times-Roman /Times-Roman-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Agrave [65 195 212 27] put
dup /Aring [65 185 187 31] put
dup /Atilde [65 195 212 29] put
dup /Ecircumflex [69 139 212 28] put
dup /Egrave [69 139 212 27] put
dup /Idieresis [73 0 212 168] put
dup /Igrave [73 0 212 27] put
dup /Ntilde [78 195 212 29] put
dup /Ograve [79 195 212 27] put
dup /Otilde [79 195 212 29] put
dup /Ucircumflex [85 195 212 28] put
dup /Ugrave [85 195 212 27] put
dup /Ydieresis [89 195 212 168] put
dup /agrave [97 56 0 27] put
dup /aring [97 56 0 31] put
dup /atilde [97 56 0 29] put
dup /ecircumflex [101 56 0 28] put
dup /egrave [101 56 0 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /ntilde [110 84 0 29] put
dup /ograve [111 84 0 27] put
dup /otilde [111 84 0 29] put
dup /ucircumflex [117 84 0 28] put
dup /ugrave [117 84 0 27] put
dup /ydieresis [121 84 0 168] put
dup /abreve [97 55 0 162] put
dup /Abreve [65 194 223 162] put
dup /aogonek [97 209 0 178] put
dup /Aogonek [65 465 0 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 212 212 180] put
dup /ccaron [99 69 0 183] put
dup /Ccaron [67 196 212 183] put
dup /dbar [100 200 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 426 75 39] put
dup /Dcaron [68 194 216 183] put
dup /ecaron [101 55 0 183] put
dup /Ecaron [69 139 214 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 154 212 255] put
dup /eogonek [101 142 9 178] put
dup /Eogonek [69 320 0 178] put
dup /gbreve [103 84 0 162] put
dup /Gbreve [71 195 212 162] put
dup /Idotaccent [73 0 212 255] put
dup /iogonek [105 12 0 178] put
dup /Iogonek [73 67 0 178] put
dup /lacute [108 -5 216 180] put
dup /Lacute [76 139 216 180] put
dup /lcaron [108 192 75 39] put
dup /Lcaron [76 250 52 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 212 180] put
dup /ncaron [110 83 0 183] put
dup /Ncaron [78 194 214 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 194 214 189] put
dup /racute [114 22 0 180] put
dup /Racute [82 210 216 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 167 216 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 212 180] put
dup /scedilla [115 28 0 184] put
dup /Scedilla [83 112 0 184] put
dup /tcedilla [116 53 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /tcaron [116 214 0 39] put
dup /Tcaron [84 139 216 183] put
dup /uhungarumlaut [117 83 0 189] put
dup /Uhungarumlaut [85 194 214 189] put
dup /umacron [117 81 0 30] put
dup /Umacron [85 205 212 30] put
dup /uogonek [117 236 5 178] put
dup /Uogonek [85 287 5 178] put
dup /uring [117 83 0 31] put
dup /Uring [85 194 179 31] put
dup /zacute [122 60 0 180] put
dup /Zacute [90 120 212 180] put
dup /zdotaccent [122 50 0 255] put
dup /Zdotaccent [90 140 212 255] put
makeComposite
%%EndResource

%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-15 support
/iso15dict 8 dict begin
  /fCourier ISO-8859-15Encoding /Courier-Ogonki reencode_font
  /fCourier-Bold ISO-8859-15Encoding /Courier-Bold-Ogonki reencode_font
  /fCourier-BoldOblique ISO-8859-15Encoding /Courier-BoldOblique-Ogonki reencode_font
  /fCourier-Oblique ISO-8859-15Encoding /Courier-Oblique-Ogonki reencode_font
  /fHelvetica ISO-8859-15Encoding /Helvetica-Ogonki reencode_font
  /fHelvetica-Bold ISO-8859-15Encoding /Helvetica-Bold-Ogonki reencode_font
  /fTimes-Bold ISO-8859-15Encoding /Times-Bold-Ogonki reencode_font
  /fTimes-Roman ISO-8859-15Encoding /Times-Roman-Ogonki reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1,2c1,2) p n
(< 4990 2005-03-31 19:44 /work/Umi2/spurzem/5/nbody6compare/absorb.f) N
(< nbody6compare/absorb.f) N
(---) N
(> 4460 2002-07-12 23:12 /work/Umi2/spurzem/5/nbody6++compare/absorb.f) N
(> nbody6++compare/absorb.f) N
(8c8,9) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMX4=4*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(24a26) N
(>       TIME0 = TIME) N
(27,46c29,30) N
(< *       Avoid zero since TBLOCK = TPREV during the first block-step.) N
(<       IF \(DT8.EQ.0.0D0\) DT8 = STEP\(ICH\)/8.0D0) N
(< *) N
(< *       Adopt the nearest truncated step \(at most 8 subdivisions\).) N
(<       IF \(DT2.GT.0.0D0\) THEN) N
(<           CALL STEPK\(DT2,DTN2\)) N
(<           DTN = NINT\(DTN2/DT8\)*DT8) N
(<       ELSE) N
(< *       Choose negative step if pericentre time < TPREV.) N
(<           DT2 = -DT2) N
(<           CALL STEPK\(DT2,DTN2\)) N
(<           DTN = -NINT\(DTN2/DT8\)*DT8) N
(<       END IF) N
(< *) N
(< *       Update time for new polynomial initializations \(but check T - T0\).) N
(<       TIME = TPREV + DTN) N
(< *) N
(< *       Avoid prediction skip by XVPRED in case TIME - T0 = 0.0.) N
(<       IF \(TIME - T0\(ICH\).EQ.0.0D0\) TIME = TIME + DT8/16.0D0) N
(< *) N
(---) N
(>       TIME = TPREV + NINT\(DT2/DT8\)*DT8) N
(>       TIME = MIN\(TBLOCK,TIME\)) N
(51,52c35,36) N
(<           WRITE \(6,1\)  TIME+TOFF, DT2, DT8) N
(<     1     FORMAT \(' ABSORB:    TIME DT2 DT8 ',F12.6,1P,2E10.2\)) N
(---) N
(>           WRITE \(6,1\)  TIME0+TOFF, TIME+TOFF, DT2, DT8) N
(>     1     FORMAT \(' ABSORB:   TIME0 TIME DT2 DT8 ',2F10.6,1P,2E10.2\)) N
(162a147,148) N
(> ) N
(> ) N
(1,2c1,2) N
(< 11230 2006-09-02 16:33 /work/Umi2/spurzem/5/nbody6compare/adjust.f) N
(< nbody6compare/adjust.f) N
(---) N
(> 9701 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/adjust.f) N
(> nbody6++compare/adjust.f) N
(0a1,4) N
(> # 1 "adjust.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "adjust.F") N
(4,5c8,9) N
(< *       Parameter adjustment and energy check.) N
(< *       --------------------------------------) N
(---) N
(> * Parameter adjustment and energy check.) N
(> * --------------------------------------) N
(8,10c12,15) N
(<       COMMON/ECHAIN/  ECH) N
(<       SAVE  DTOFF) N
(<       DATA  DTOFF /100.0D0/) N
(---) N
(>       COMMON/ECHAIN/ ECH) N
(OUT) (Page 1/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       COMMON/STSTAT/ TINIT,NIR,NIB,NRGL,NKS) p n
(>       SAVE DTOFF) N
(>       DATA DTOFF /100.0D0/) N
(13c18) N
(< *       Predict X & XDOT for all particles \(except unperturbed pairs\).) N
(---) N
(> * Predict X & XDOT for all particles \(except unperturbed pairs\).) N
(16c21,30) N
(< *       Obtain the total energy at current time \(resolve all KS pairs\).) N
(---) N
(> * ico = ico + 1) N
(> * do 556 i=1,n) N
(> * write\(55,100\)ico,name\(i\),\(xdot\(k,i\),k=1,3\)) N
(> *556 continue) N
(> *100 format\(1x,2i5,3f7.2\)) N
(> *) N
(> * Obtain the total energy at current time \(resolve all KS pairs\).) N
(> ) N
(> ) N
(> ) N
(17a32) N
(> ) N
(19c34) N
(< *       Initialize c.m. terms.) N
(---) N
(> * Initialize c.m. terms.) N
(25c40) N
(< *       Obtain c.m. & angular momentum integrals and Z-moment of inertia.) N
(---) N
(> * Obtain c.m. & angular momentum integrals and Z-moment of inertia.) N
(29d43) N
(<       ISUN = 1) N
(31d44) N
(<           IF \(NAME\(I\).EQ.1\) ISUN = I) N
(36,38c49,53) N
(<    15     CONTINUE) N
(< *         RI2 = \(X\(1,I\) - RDENS\(1\)\)**2 + \(X\(2,I\) - RDENS\(2\)\)**2 +) N
(< *    &                                   \(X\(3,I\) - RDENS\(3\)\)**2) N
(---) N
(>    15 CONTINUE) N
(>           RI2 = \(X\(1,I\) - RDENS\(1\)\)**2 + \(X\(2,I\) - RDENS\(2\)\)**2 +) N
(>      & \(X\(3,I\) - RDENS\(3\)\)**2) N
(> * Skip contribution from escapers.) N
(>           IF \(RI2.GT.4.0*RTIDE**2\) GO TO 20) N
(43c58) N
(< *       Form c.m. coordinates & velocities \(vectors & scalars\).) N
(---) N
(> * Form c.m. coordinates & velocities \(vectors & scalars\).) N
(52c67) N
(< *       Subtract the kinetic energy of c.m. due to possible cloud effects.) N
(---) N
(> * Subtract the kinetic energy of c.m. due to possible cloud effects.) N
(55,56c70,71) N
(< *       Form virial ratio using single particles & c.m. \(isolated or tidal\). ) N
(<       IF \(KZ\(14\).EQ.0.OR.KZ\(14\).EQ.3\) THEN) N
(---) N
(> * Form virial ratio using single particles & c.m. \(isolated or tidal\).) N
(>       IF \(KZ\(14\).EQ.0\) THEN) N
(58,62d72) N
(<           E\(3\) = ZKIN - POT) N
(<       ELSE IF \(KZ\(14\).EQ.4\) THEN) N
(< *       Employ actual virial energy for central Plummer potential.) N
(<           Q = ZKIN/\(POT - VIR\)) N
(<           E\(3\) = ZKIN - POT + ETIDE) N
(64c74) N
(< *       Use Chandrasekhar eq. \(5.535\) for virial ratio.) N
(---) N
(> * Use Chandrasekhar eq. \(5.535\) for virial ratio.) N
(66,67c76,77) N
(OUT) (Page 2/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (1/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           Q = ZKVIR/\(POT + 2.0*ETIDE\)) p n
(< *       Modify angular momentum integral using Chandrasekhar eq. \(5.530\).) N
(---) N
(>           Q = ZKVIR/\(POT - 2.0*ETIDE\)) N
(> * Modify angular momentum integral using Chandrasekhar eq. \(5.530\).) N
(69,74d78) N
(<           E\(3\) = ZKIN - POT + ETIDE) N
(<       END IF) N
(< *       Include case of Plummer sphere for 3D orbit.) N
(<       IF \(KZ\(14\).EQ.3.AND.MP.GT.0.0D0\) THEN) N
(<           Q = ZKIN/\(POT - VIR\)) N
(<           E\(3\) = ZKIN - POT + ETIDE) N
(77,79c81,83) N
(< *       Define crossing time using single particle energy \(cf. option 14\).) N
(<       TCR = ZMASS**2.5/\(2.0*ABS\(E\(3\)\)\)**1.5) N
(< *       Note: see below for better definition in Plummer or 3D orbit case.) N
(---) N
(> * Define crossing time and save single particle energy.) N
(>       ETOT = ZKIN - POT + ETIDE) N
(>       TCR = ZMASS**2.5/\(2.0*ABS\(ETOT\)\)**1.5) N
(83,84c87) N
(< *       Form provisional total energy.) N
(<       ETOT = ZKIN - POT + ETIDE) N
(---) N
(>       E\(3\) = ETOT) N
(86c89) N
(< *       Include KS pairs, triple, quad, mergers, collisions & chain.) N
(---) N
(> * Include KS pairs, triple, quad, mergers, collisions & chain.) N
(91,92c94) N
(< *) N
(< *       Update energies and form the relative error \(divide by ZKIN or E\(3\)\).) N
(---) N
(> * Update energies and form the relative error \(divide by ZKIN or E\(3\)\).) N
(97d98) N
(<           DELTA1 = 0.0D0) N
(102d102) N
(<           DELTA1 = DE) N
(105c105) N
(< *       Save sum of relative energy error for main output and accumulate DE.) N
(---) N
(> * Save sum of relative energy error for main output and accumulate DE.) N
(110c110) N
(< *       Set provisional half-mass radius.) N
(---) N
(> * Set provisional half-mass radius.) N
(113c113) N
(< *       Determine average neighbour number and smallest neighbour sphere.) N
(---) N
(> * Determine average neighbour number and smallest neighbour sphere.) N
(116c116) N
(<       DO 30 I = IFIRST,NTOT) N
(---) N
(>       DO 40 I = IFIRST,NTOT) N
(119,120c119,122) N
(<    30 CONTINUE) N
(<       NNB = NNB/\(N - NPAIRS\)) N
(---) N
(>    40 CONTINUE) N
(> *) N
(> * Set average neighbour number.) N
(>       NNB = FLOAT\(NNB\)/FLOAT\(N - NPAIRS\)) N
(122c124) N
(< *       Use current value if minimum neighbour sphere not implemented.) N
(---) N
(> * Use current value if minimum neighbour sphere not implemented.) N
(125,126c127,128) N
(< *       Find density centre & core radius \(Casertano & Hut, Ap.J. 298, 80\).) N
(<       IF \(N-NPAIRS.GE.20.AND.KZ\(29\).EQ.0.AND.KZ\(5\).NE.3\) THEN) N
(OUT) (Page 3/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Find density centre & core radius \(Casertano & Hut, Ap.J. 298, 80\).) N
(>       IF \(N-NPAIRS.GE.20.AND.KZ\(29\).EQ.0\) THEN) N
(138,167c140) N
(< *       Take the Sun as reference for plotting planetesimal disk members.) N
(<       IF \(KZ\(5\).EQ.3\) THEN) N
(<           DO 35 K = 1,3) N
(<               RDENS\(K\) = X\(K,ISUN\)) N
(<    35     CONTINUE) N
(< *) N
(< *       Determine the eccentricity dispersion and total energy of disk.) N
(<           DISP2 = 0.0) N
(<           EDISK = 0.0) N
(<           DO 40 I = 1,N) N
(<               IF \(NAME\(I\).EQ.1.OR.NAME\(I\).EQ.NZERO\) GO TO 40) N
(<               RI2 = \(X\(1,I\) - X\(1,ISUN\)\)**2 + \(X\(2,I\) - X\(2,ISUN\)\)**2) N
(<               VI2 = \(XDOT\(1,I\) - XDOT\(1,ISUN\)\)**2 +) N
(<      &              \(XDOT\(2,I\) - XDOT\(2,ISUN\)\)**2) N
(<               RRDOT = \(X\(1,I\) - X\(1,ISUN\)\)*\(XDOT\(1,I\) - XDOT\(1,ISUN\)\) +) N
(<      &                \(X\(2,I\) - X\(2,ISUN\)\)*\(XDOT\(2,I\) - XDOT\(2,ISUN\)\)) N
(<               RI = SQRT\(RI2\)) N
(<               SEMI = 2.0/RI - VI2/\(BODY\(ISUN\) + BODY\(I\)\)) N
(<               SEMI = 1.0/SEMI) N
(<               ECC2 = \(1.0 - RI/SEMI\)**2 +) N
(<      &                RRDOT**2/\(SEMI*\(BODY\(I\) + BODY\(ISUN\)\)\)) N
(<               DISP2 = DISP2 + ECC2) N
(<               EDISK = EDISK - 0.5*BODY\(I\)/SEMI) N
(<    40     CONTINUE) N
(<           DISP = SQRT\(DISP2/FLOAT\(N-2\)\)) N
(<           WRITE \(35,42\)  TTOT, DISP, EDISK) N
(<    42     FORMAT \(' ',F8.1,1P,E10.2,E12.4\)) N
(<       END IF) N
(< *) N
(< *       Check optional sorting of Lagrangian radii & half-mass radius.) N
(---) N
(> * Check optional sorting of Lagrangian radii & half-mass radius.) N
(172c145) N
(< *       Scale average & maximum core density by the mean value.) N
(---) N
(> * Scale average & maximum core density by the mean value.) N
(176c149) N
(< *       Adopt density contrasts of unity for hot system.) N
(---) N
(> * Adopt density contrasts of unity for hot system.) N
(182c155) N
(< *       Check optional determination of regularization parameters.) N
(---) N
(> * Check optional determination of regularization parameters.) N
(186c159) N
(< *       Form close encounter distance from scale factor & density contrast.) N
(---) N
(> * Form close encounter distance from scale factor & density contrast.) N
(188c161) N
(< *       Use harmonic mean to reduce fluctuations \(avoid initial value\).) N
(---) N
(> * Use harmonic mean to reduce fluctuations \(avoid initial value\).) N
(190c163) N
(< *       Impose maximum value for sufficient perturbers.) N
(---) N
(> * Impose maximum value for sufficient perturbers.) N
(192c165) N
(< *       Define scaled DTMIN by RMIN & <M> and include ETAI for consistency.) N
(---) N
(> * Define scaled DTMIN by RMIN & <M> and include ETAI for consistency.) N
(194c167) N
(< *       Specify binding energy per unit mass of hard binary \(impose Q = 0.5\).) N
(---) N
(> * Specify binding energy per unit mass of hard binary \(impose Q = 0.5\).) N
(196c169) N
(OUT) (Page 4/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (2/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Adopt central velocity as upper limit \(avoids large kick velocities\).) p n
(---) N
(> * Adopt central velocity as upper limit \(avoids large kick velocities\).) N
(201d173) N
(<           ECLOSE = MIN\(ECLOSE,1.0D0\)) N
(204c176) N
(< *       Check optional modification of DTMIN, ECLOSE & TCR for hot system.) N
(---) N
(> * Check optional modification of DTMIN, ECLOSE & TCR for hot system.) N
(214c186) N
(< *       Set useful scalars for the integrator.) N
(---) N
(> * Set useful scalars for the integrator.) N
(219,220c191,193) N
(<       IF \(TIME.LE.0.0D0\) STEPJ = 0.01*\(60000.0/FLOAT\(N\)\)**0.3333) N
(< *       Adopt 2*RSMIN for neighbour sphere volume factor in routine REGINT.) N
(---) N
(> * Specify square close encounter force from heaviest body at 5*RMIN.) N
(>       FCRIT2 = \(BODY1/\(25.0*RMIN2\)\)**2) N
(> * Adopt 2*RSMIN for neighbour sphere volume factor in routine REGINT.) N
(223c196) N
(< *       Update density contrast factor for neighbour sphere modification.) N
(---) N
(> * Update density contrast factor for neighbour sphere modification.) N
(227c200) N
(< *       Include optional stabilization to increase neighbour number.) N
(---) N
(> * Include optional stabilization to increase neighbour number.) N
(233,238c206,237) N
(< *       Define tidal radius for isolated system \(2*RTIDE used in ESCAPE\).) N
(<       IF \(KZ\(14\).EQ.0\) RTIDE = 10.0*RSCALE) N
(< *       Redefine the crossing time for 3D cluster orbit or Plummer model.) N
(<       IF \(\(KZ\(14\).EQ.3.OR.KZ\(14\).EQ.4\).AND.ZKIN.GT.0.0\) THEN) N
(<           TCR = 2.0*RSCALE/SQRT\(2.0*ZKIN/ZMASS\)) N
(<       END IF) N
(---) N
(> * Define tidal radius for isolated system \(2*RTIDE used in ESCAPE\).) N
(>       IF \(TIDAL\(1\).EQ.0.0D0\) RTIDE = 10.0*RSCALE) N
(> *) N
(> * write\(6,57\)rank,ttfrc) N
(> * 57 FORMAT\(' IPE=',I4,' ttfrc=',f9.3\)) N
(> *) N
(>       call cputim\(tt1\)) N
(>       ttotal = \(tt1-ttota\)*60.) N
(> *) N
(>       if\(rank.eq.0\)then) N
(> *) N
(> * Print energy diagnostics & KS parameters.) N
(>       ICR = INT\(TTOT/TCR0\)) N
(> C New \(Aug.1998\) by P.Kroupa: \(time also in Myr\)) N
(>       WRITE \(6,50\) rank, TTOT, ttot*tscale, Q, DE, BE\(3\)-EBIN, EBIN,) N
(>      & EMERGE) N
(>    50 FORMAT \(/,' ',I2,' ADJUST:  TIME =',1P,D15.5,0P,'  T[Myr] = ',) N
(>      & F8.2,'  Q =',F5.2,'  DE =',1P,E15.6,'  E =',E15.6,) N
(>      & ' EBIN=',E15.6,' EMERGE=',E15.6\)) N
(> *) N
(>       write\(6,51\) RMIN, DTMIN, RHOM, RSCALE, RSMIN, ECLOSE, ICR) N
(>    51 FORMAT \(/, '  RMIN =',1PE8.1,'  DTMIN =',E8.1,' RHOM =',E8.1,) N
(>      &' RSCALE =',E8.1,' RSMIN =',E8.1,'  ECLOSE =',0PF5.2,'  TC =',I5\)) N
(> *) N
(>       WRITE\(6,55\)) N
(>    55 FORMAT\('  PE  N       ttot            treg      tirr      ',) N
(>      & 'tpredtot  tint      tinit      tks      ttcomm    tadj     ',) N
(>      & 'tmov      tprednb    tsub     tsub2    xtsub1   xtsub2'\)) N
(>       WRITE\(6,56\)isize,n,ttotal,ttreg,ttirr,ttpre,ttint,ttinit,) N
(>      & ttks,ttcomm,ttadj,ttmov,ttnbp,ttsub,ttsub2,) N
(>      & xtsub1,xtsub2) N
(>    56 FORMAT\(1X,I3,I6,F13.5,12F10.2,1P,2D13.5\)) N
(240,245d238) N
(OUT) (Page 5/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Print energy diagnostics & KS parameters.) p n
(<       ICR = TTOT/TCR) N
(<       WRITE \(6,45\)  TTOT, Q, DE, BE\(3\),RMIN, DTMIN, ECLOSE, ICR, DELTA1) N
(<    45 FORMAT \(/,' ADJUST:  TIME =',F8.2,'  Q =',F5.2,'  DE =',1P,E10.2,) N
(<      &          '  E =',0P,F10.6,'  RMIN =',1P,E8.1,'  DTMIN =',E8.1,) N
(<      &          '  ECLOSE =',0PF5.2,'  TC =',I5,'  DELTA =',1P,E9.1\)) N
(246a240) N
(>       end if) N
(248c242) N
(< *       Perform automatic error control \(RETURN on restart with KZ\(2\) > 1\).) N
(---) N
(> * Perform automatic error control \(RETURN on restart with KZ\(2\) > 1\).) N
(252c246) N
(< *       Check for escaper removal.) N
(---) N
(> * Check for escaper removal.) N
(257c251) N
(< *       Check correction for c.m. displacements.) N
(---) N
(> * Check correction for c.m. displacements.) N
(262,285c256) N
(< *       Include diagnostics for massive binary \(bound or unbound initially\).) N
(<       IF \(KZ\(5\).EQ.4\) THEN) N
(<           IP = 0) N
(<           DO 50 IPAIR = 1,NPAIRS) N
(<               IF \(NAME\(2*IPAIR-1\).LE.2.OR.NAME\(2*IPAIR\).LE.2\) THEN) N
(<                   IP = IPAIR) N
(<               END IF) N
(<    50     CONTINUE) N
(<           IF \(IP.GT.0\) THEN) N
(<               I1 = 2*IP - 1) N
(<               I2 = I1 + 1) N
(<               SEMI = -0.5*BODY\(N+IP\)/H\(IP\)) N
(<               ECC2 = \(1.0 - R\(IP\)/SEMI\)**2 +) N
(<      &                                  TDOT2\(IP\)**2/\(SEMI*BODY\(N+IP\)\)) N
(<               EB = BODY\(I1\)*BODY\(I2\)*H\(IP\)/BODY\(N+IP\)) N
(<               WRITE \(35,52\)  TTOT, SEMI, EB, E\(3\), SQRT\(ECC2\),) N
(<      &                       NAME\(I1\), NAME\(I2\)) N
(<    52         FORMAT \(' ',F8.1,1P,3E12.4,0P,F7.3,2I5\)) N
(< *  52         FORMAT \(' T A E EB ECL NAME ',F8.1,1P,3E12.4,0P,F7.3,2I5\)) N
(<               CALL FLUSH\(35\)) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       See whether standard output is due \(allow for setting TIME = TPREV\).) N
(---) N
(> * See whether standard output is due \(allow for setting TIME = TPREV\).) N
(290c261) N
(< *       Update time for next adjustment.) N
(---) N
(> * Update time for next adjustment.) N
(292,293d262) N
(< *       Re-initialize marginal stability counter to avoid including old case.) N
(<       NMARG = 0) N
(295,298c264,266) N
(< *       Obtain elapsed CPU time and update total since last output/restart.) N
(<       CALL CPUTIM\(TCOMP\)) N
(<       CPUTOT = CPUTOT + TCOMP - CPU0) N
(<       CPU0 = TCOMP) N
(---) N
(> * Obtain elapsed CPU time and update total since last output/restart.) N
(>       call cputim\(tt1\)) N
(>       CPUTOT = \(tt1-ttota\)*60.) N
(300c268) N
(< *       Save COMMON after energy check \(skip TRIPLE, QUAD, CHAIN\).) N
(---) N
(> * Save COMMON after energy check \(skip TRIPLE, QUAD, CHAIN\).) N
(304,311c272,319) N
(< *       Check termination criteria \(TIME > TCRIT & N <= NCRIT\).) N
(OUT) (Page 6/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (3/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       IF \(TTOT.GE.TCRIT.OR.N.LE.NCRIT\) THEN) p n
(< *       Terminate after optional COMMON save.) N
(<           WRITE \(6,60\)  TTOT, CPUTOT/60.0, ERRTOT, DETOT) N
(<    60     FORMAT \(//,9X,'END RUN',3X,'TIME =',F7.1,'  CPUTOT =',F7.1,) N
(<      &                  '  ERRTOT =',F10.6,'  DETOT =',F10.6\)) N
(<           IF \(KZ\(1\).GT.0.AND.NSUB.EQ.0\) CALL MYDUMP\(1,1\)) N
(<           STOP) N
(---) N
(> * Check termination criteria \(TIME > TCRIT & N <= NCRIT\).) N
(> *) N
(> C New \(Aug. 1998\): P.Kroupa) N
(> *) N
(>       IF \(TTOT*TSCALE.GT.TCRITp.OR.TTOT.GT.TCRIT - 20.0*DTMIN) N
(>      & .OR.N.LE.NCRIT\) THEN) N
(> * Terminate after optional COMMON save.) N
(>           if\(rank.eq.0\)) N
(>      & WRITE \(6,60\) TTOT*TSCALE, TOFF, TIME, TIME+TOFF,) N
(>      & CPUTOT/60.0,ERRTOT, DETOT) N
(>    60 FORMAT \() N
(>      & '  TOFF/TIME/TTOT=',3F16.8,) N
(>      & '  CPUTOT =',F7.1,) N
(>      & '  ERRTOT =',1P,D12.5,'  DETOT =',D12.5\)) N
(> *) N
(> * Determine time interval and step numbers per time unit) N
(>       TIMINT = TIME + TOFF - TINIT) N
(> *) N
(> ) N
(> ) N
(> ) N
(>       WRITE \(6,195\) rank,TIMINT,NSTEPI-NIR,NSTEPB-NIB,NSTEPR-NRGL,) N
(>      & NSTEPU-NKS) N
(>   195 FORMAT \() N
(>      & ' NIRRB=',I11,' NREG=',I11,' NKS=',I11\)) N
(>       WRITE \(6,196\) \(NSTEPI-NIR\)/TIMINT,\(NSTEPB-NIB\)/TIMINT,) N
(>      & \(NSTEPR-NRGL\)/TIMINT,\(NSTEPU-NKS\)/TIMINT) N
(>   196 FORMAT \() N
(>      & D12.5,' NREG=',D12.5,' NKS=',D12.5\)) N
(> ) N
(> ) N
(> ) N
(> *) N
(>           IF \(KZ\(1\).GT.0\) CALL MYDUMP\(1,1\)) N
(>       call cputim\(tt1\)) N
(> *) N
(> ) N
(> ) N
(> ) N
(>           ttotal=\(tt1-ttota\)*60.) N
(>       PRINT*,' Total CPU=',ttotal) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(>       STOP) N
(> *) N
(314c322) N
(< *       Check optional truncation of time.) N
(---) N
(> * Check optional truncation of time.) N
(1,2c1,2) N
(< 5995 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/bindat.f) N
(< nbody6compare/bindat.f) N
(---) N
(> 5474 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/bindat.f) N
(> nbody6++compare/bindat.f) N
(0a1,4) N
(> # 1 "bindat.F") N
(> # 1 "<built-in>") N
(OUT) (Page 7/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> # 1 "<command line>") p n
(> # 1 "bindat.F") N
(4,5c8,9) N
(< *       Binary data bank.) N
(< *       -----------------) N
(---) N
(> * Binary data bank.) N
(> * -----------------) N
(8,14c12,15) N
(<       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(<       REAL*4  EB\(KMAX\),ECC\(KMAX\),RCM\(KMAX\),ECM\(KMAX\),PB\(KMAX\),AS\(30\)) N
(<       LOGICAL  FIRST) N
(<       SAVE  FIRST) N
(<       DATA  FIRST /.TRUE./) N
(---) N
(>       COMMON/BINARY/ CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(>      & HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(>      & NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(>       REAL*4 EB\(KMAX\),ECC\(KMAX\),RCM\(KMAX\),ECM\(KMAX\),PB\(KMAX\),AS\(30\)) N
(17c18) N
(< *       Form binding energy and central distance for each KS pair.) N
(---) N
(> * Form binding energy and central distance for each KS pair.) N
(25c26) N
(< *       Determine merger & ghost index for negative c.m. name \(skip ghost\).) N
(---) N
(> * Determine merger & ghost index for negative c.m. name \(skip ghost\).) N
(28c29) N
(< *       Employ actual masses and two-body distance for energy & eccentricity.) N
(---) N
(> * Employ actual masses and two-body distance for energy & eccentricity.) N
(33,34c34,35) N
(<      &                                      XREL\(3,IMERGE\)**2\)) N
(< *       Assume that merged binary is near apo or peri \(hence ignore TDOT2\).) N
(---) N
(>      & XREL\(3,IMERGE\)**2\)) N
(> * Assume that merged binary is near apo or peri \(hence ignore TDOT2\).) N
(36c37) N
(< *       Include separate diagnostics for the hierarchy \(inner comps J1 & J\).) N
(---) N
(> * Include separate diagnostics for the hierarchy \(inner comps J1 & J\).) N
(39c40) N
(<      &                                 TDOT2\(JPAIR\)**2/\(BODY\(ICM\)*SEMI1\)) N
(---) N
(>      & TDOT2\(JPAIR\)**2/\(BODY\(ICM\)*SEMI1\)) N
(51a53) N
(>               if\(rank.eq.0\)then) N
(53,55c55,57) N
(<      &                     KSTARM\(IMERGE\), E0, E1, PM, RM, P0, P1, SEMI1) N
(<     2         FORMAT \(' BINDAT:    T NM K* E0 E1 PM/PC PM0/R* P0 P1 A1',) N
(<      &                             F8.1,2I5,3I4,2F7.3,2F6.1,1P,3E9.1\)) N
(---) N
(>      & KSTARM\(IMERGE\), E0, E1, PM, RM, P0, P1, SEMI1) N
(>     2 FORMAT \(' BINDAT:    T NM K* E0 E1 PM/PC PM0/R* P0 P1 A1',) N
(>      & F8.1,2I5,3I4,2F7.3,2F6.1,1P,3E9.1\)) N
(56a59) N
(>               end if) N
(58c61) N
(< *       Form binding energy and eccentricity for standard case.) N
(---) N
(> * Form binding energy and eccentricity for standard case.) N
(60c63) N
(<      &                                             \(BODY\(J1\) + BODY\(J2\)\)) N
(---) N
(>      & \(BODY\(J1\) + BODY\(J2\)\)) N
(63c66) N
(<      &                                  TDOT2\(JPAIR\)**2/\(BODY\(ICM\)*SEMI\)) N
(OUT) (Page 8/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (4/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>      & TDOT2\(JPAIR\)**2/\(BODY\(ICM\)*SEMI\)) N
(66c69) N
(< *       Search merger table to identify corresponding index of c.m. name.) N
(---) N
(> * Search merger table to identify corresponding index of c.m. name.) N
(71c74) N
(<     5         CONTINUE) N
(---) N
(>     5 CONTINUE) N
(84c87) N
(< *       Obtain binding energy \(per unit mass\) of c.m. motion.) N
(---) N
(> * Obtain binding energy \(per unit mass\) of c.m. motion.) N
(91c94) N
(<      &                                        \(X\(3,ICM\) - X\(3,J\)\)**2 ) N
(---) N
(>      & \(X\(3,ICM\) - X\(3,J\)\)**2) N
(93c96) N
(<     9     CONTINUE) N
(---) N
(>     9 CONTINUE) N
(95c98) N
(< *       Check for external tidal field \(note that HT includes mass\).) N
(---) N
(> * Check for external tidal field \(note that HT includes mass\).) N
(101,102c104,105) N
(<      &                      \(X\(2,ICM\) - RDENS\(2\)\)**2 +) N
(<      &                      \(X\(3,ICM\) - RDENS\(3\)\)**2\)) N
(---) N
(>      & \(X\(2,ICM\) - RDENS\(2\)\)**2 +) N
(>      & \(X\(3,ICM\) - RDENS\(3\)\)**2\)) N
(106,107c109,110) N
(< *       Copy relevant binary diagnostics to single precision.) N
(<       AS\(1\) = TIME + TOFF) N
(---) N
(> * Copy relevant binary diagnostics to single precision.) N
(>       AS\(1\) = TTOT) N
(131,135c134) N
(< *       Write formatted data bank on unit 9.) N
(<       IF \(FIRST\) THEN) N
(<           OPEN \(UNIT=9,STATUS='NEW',FORM='FORMATTED',FILE='OUT9'\)) N
(<           FIRST = .FALSE.) N
(<       END IF) N
(---) N
(> * Write formatted data bank on unit 9.) N
(137c136,139) N
(<       WRITE \(9,30\)  NPAIRS, MODEL, NRUN, N, NC, NMERGE, \(AS\(K\),K=1,7\)) N
(---) N
(> ) N
(> ) N
(> ) N
(>       WRITE \(9,30\) NPAIRS, MODEL, NRUN, N, NC, NMERGE, \(AS\(K\),K=1,7\)) N
(139c141) N
(<       WRITE \(9,35\)  \(AS\(K\),K=8,17\)) N
(---) N
(>       WRITE \(9,35\) \(AS\(K\),K=8,17\)) N
(141c143) N
(<       WRITE \(9,40\)  \(AS\(K\),K=18,30\)) N
(---) N
(>       WRITE \(9,40\) \(AS\(K\),K=18,30\)) N
(151,154c153,156) N
(<           WRITE \(9,45\)  EB\(JPAIR\), ECC\(JPAIR\), ECM\(JPAIR\), RCM\(JPAIR\),) N
(<      &                  BODY\(J1\)*ZMBAR, BODY\(J2\)*ZMBAR, PB\(JPAIR\),) N
(<      &                  NAME\(J1\), NAME\(J2\), KSTAR\(J1\), KSTAR\(J2\), KCM) N
(<    45     FORMAT \(F8.5,F7.3,F7.2,F6.2,2F5.1,F8.1,2I6,3I4\)) N
(---) N
(>           WRITE \(9,45\) EB\(JPAIR\), ECC\(JPAIR\), ECM\(JPAIR\), RCM\(JPAIR\),) N
(>      & BODY\(J1\)*ZMBAR, BODY\(J2\)*ZMBAR, PB\(JPAIR\),) N
(OUT) (Page 9/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      & NAME\(J1\), NAME\(J2\), KSTAR\(J1\), KSTAR\(J2\), KCM) p n
(>    45 FORMAT \(F8.5,F7.3,F7.2,F6.2,2F5.1,F8.1,2I6,3I4\)) N
(156a159,161) N
(> ) N
(> ) N
(> ) N
(1,2c1,2) N
(< 5366 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/binout.f) N
(< nbody6compare/binout.f) N
(---) N
(> 5493 2002-02-20 20:20 /work/Umi2/spurzem/5/nbody6++compare/binout.f) N
(> nbody6++compare/binout.f) N
(94c94,95) N
(<               WRITE \(6,35\)  J, LIST\(1,J1\), LIST\(1,J2\), LIST\(2,J2\),) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,35\)  J, LIST\(1,J1\), LIST\(1,J2\), LIST\(2,J2\),) N
(108c109,110) N
(<               WRITE \(8,40\)  TTOT, NAME\(J1\), NAME\(J2\), LIST\(2,J2\), K,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(8,40\)  TTOT, NAME\(J1\), NAME\(J2\), LIST\(2,J2\), K,) N
(130c132,133) N
(<       WRITE \(6,60\)  JOR, JEX, DB, SBCOLL, BBCOLL, CHCOLL, JC,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &WRITE \(6,60\)  JOR, JEX, DB, SBCOLL, BBCOLL, CHCOLL, JC,) N
(132c135) N
(<    60 FORMAT \(/,' OR =',I4,'  EX =',I3,'  DB =',F7.3,'  SB =',F8.4,) N
(---) N
(>    60 FORMAT \(/,' OR =',I4,'  EX =',I3,'  DB =',F12.3,'  SB =',F8.4,) N
(138c141,142) N
(<       WRITE \(6,65\)  DISP, EMAX, \(NPOP\(J\),J=1,8\), \(JEB\(K\),K=1,KLAST\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &WRITE \(6,65\)  DISP, EMAX, \(NPOP\(J\),J=1,8\), \(JEB\(K\),K=1,KLAST\)) N
(150c154) N
(<       ETOT = ETOT + ESUB + EMERGE + EMDOT + ECDOT + ECOLL) N
(---) N
(>       ETOT = ETOT + ESUB + EMERGE + EMDOT + ECOLL + ECDOT) N
(157,158c161,162) N
(<       WRITE \(6,90\)  \(E\(J\),J=1,10\), ETOT) N
(<    90 FORMAT \(' ENERGIES   ',10F11.5,'  ETOT =',F12.6\)) N
(---) N
(>       if\(rank.eq.0\) WRITE \(6,90\)  \(E\(J\),J=1,10\), ETOT) N
(>    90 FORMAT \(' ENERGIES   ',10F12.5,'  ETOT =',F12.6\)) N
(1,2c1,2) N
(< 10062 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/binpop.f) N
(< nbody6compare/binpop.f) N
(---) N
(> 22118 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/binpop.f) N
(> nbody6++compare/binpop.f) N
(0a1,4) N
(> # 1 "binpop.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "binpop.F") N
(1a6,17) N
(> C) N
(> C P. Kroupa 1.04.94) N
(> C) N
(> C NOTE: This routine works for <= 100 per cent binaries as the initial) N
(> C set up. It allows choice of an) N
(> C initial period distribution and allows eigenevolution of orbital parameters.) N
(> C It also MERGES the closest binaries to one star.) N
(> C) N
(> C NOTE: A more realistic code for pre-main sequence eigenevolution) N
(> C is contained in binpop_mardling.f. One day it will have to be) N
(> C included in binpop_pk.f as an aditional pre-ms evoltuion sub-routine.) N
(OUT) (Page 10/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (5/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> C) p n
(4,5c20,21) N
(< *       Initial binary population.) N
(< *       --------------------------) N
(---) N
(> * Initial binary population.) N
(> * --------------------------) N
(8,10c24,32) N
(<       REAL*8  XORB\(2\),VORB\(2\),XREL\(3\),VREL\(3\),PX\(3\),QX\(3\),BS\(NMAX\)) N
(<       REAL*4  RAN2) N
(<       DATA  ETA1,ETA2 /2.5,45.0/) N
(---) N
(>       integer pkmerge,pk_sing) N
(>       REAL*8 XORB\(2\),VORB\(2\),XREL\(3\),VREL\(3\),PX\(3\),QX\(3\),BS\(NMAX\)) N
(>       REAL*4 RAN2) N
(>       real*8 pkmergedist,EBpk) N
(> * Additional vars for MERGED components:) N
(>       real*8 bodypk\(nmax\),xpk\(3,nmax\),xdotpk\(3,nmax\)) N
(>       real*8 bodymergepk\(nmax\),xmergepk\(3,nmax\),xdotmergepk\(3,nmax\)) N
(> * Additional vars for initially single stars:) N
(>       real*8 s_body\(nmax\),s_x\(3,nmax\),s_xdot\(3,nmax\)) N
(11a34) N
(> # 39 "binpop.F") N
(13c36,45) N
(<       READ \(5,*\)  NBIN, SEMI0, ECC0, RATIO, RANGE, NSKIP, IDORM, ICIRC) N
(---) N
(> * recover random number sequence from COMMON variable IDUM1.) N
(>       KDUM = IDUM1) N
(> *) N
(>       pkmerge = 0) N
(> *) N
(> *) N
(>       if\(rank.eq.0\)) N
(>      & READ \(5,*\) NBIN, SEMI0, ECC0, RATIO,RANGE, NSKIP, IDORM) N
(> *) N
(> # 58 "binpop.F") N
(16c48,49) N
(<       WRITE \(6,1\)  NBIN, SEMI0, ECC0, RATIO, RANGE, NSKIP, IDORM, ICIRC) N
(---) N
(>       if\(rank.eq.0\)) N
(>      &WRITE \(6,1\) NBIN, SEMI0, ECC0, RATIO, RANGE, NSKIP, IDORM) N
(18,19c51,52) N
(<      &              '  RATIO =',F4.1,'  RANGE =',F6.1,'  NSKIP =',I3,) N
(<      &              '  IDORM =',I2,'  ICIRC =',I2,/\)) N
(---) N
(>      & '  RATIO =',F4.1,'  RANGE =',F6.1,'  NSKIP =',I3,) N
(>      & '  IDORM =',I2,/\)) N
(21c54) N
(< *       Check type of binary mass distribution \(NSKIP, IMF2 or split c.m.\).) N
(---) N
(> * Check type of binary mass distribution \(NSKIP, IMF2 or split c.m.\).) N
(25c58) N
(< *       Select binaries from the most massive bodies \(frequency NSKIP\).) N
(---) N
(> * Select binaries from the most massive bodies \(frequency NSKIP\).) N
(31c64) N
(< *       Transfer binary masses to first NBIN locations.) N
(---) N
(> * Transfer binary masses to first NBIN locations.) N
(34c67) N
(< *       Copy binary mass of body #I to new global location.) N
(---) N
(> * Copy binary mass of body #I to new global location.) N
(40c73) N
(< *       Save next NSKIP masses of single bodies.) N
(---) N
(> * Save next NSKIP masses of single bodies.) N
(46c79) N
(< *       Restore the single bodies in subsequent locations.) N
(OUT) (Page 11/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Restore the single bodies in subsequent locations.) N
(53c86) N
(< *       Move main variables of all single bodies.) N
(---) N
(> * Move main variables of all single bodies.) N
(60c93) N
(<    12     CONTINUE) N
(---) N
(>    12 CONTINUE) N
(63c96) N
(< *       Create space for each binary component next to primary.) N
(---) N
(> * Create space for each binary component next to primary.) N
(70c103) N
(<    25     CONTINUE) N
(---) N
(>    25 CONTINUE) N
(73,81c106,109) N
(<       IF \(ICIRC.NE.0\) THEN) N
(<           ICOLL = 0) N
(<           IC0 = 0) N
(<           IC1 = 0) N
(<           IC2 = 0) N
(<           IC3 = 0) N
(<       END IF) N
(< *) N
(< *       Introduce binary components from relative motion.) N
(---) N
(> *=========================================================) N
(> *=======================THE LOOP==========================) N
(> *=========================================================) N
(> * Introduce binary components from relative motion.) N
(84,87c112,115) N
(< *       Randomize perihelion, node & inclination \(ZI = 0.25 before 3/99\).) N
(<           PI = TWOPI*RAN2\(IDUM1\)) N
(<           OMEGA = TWOPI*RAN2\(IDUM1\)) N
(<           ZI = 0.5*TWOPI*RAN2\(IDUM1\)) N
(---) N
(> * Randomize perihelion, node & inclination.) N
(>           PI = TWOPI*RAN2\(KDUM\)) N
(>           OMEGA = TWOPI*RAN2\(KDUM\)) N
(>           ZI = 0.5*TWOPI*RAN2\(KDUM\)) N
(89c117) N
(< *       Set transformation elements \(Brouwer & Clemence p. 35\).) N
(---) N
(> * Set transformation elements \(Brouwer & Clemence p. 35\).) N
(95c123) N
(<           QX\(3\) = COS\(PI\)*SIN\(ZI\) ) N
(---) N
(>           QX\(3\) = COS\(PI\)*SIN\(ZI\)) N
(97c125) N
(< *       Specify component masses \(copy BODY0 from IMF2 or use RATIO\).) N
(---) N
(> * Specify component masses \(copy BODY0 from IMF2 or use RATIO\).) N
(104c132) N
(<               BODY\(I2\) = BODY\(I1\) ) N
(---) N
(>               BODY\(I2\) = BODY\(I1\)) N
(110c138,154) N
(< *       Choose random \(thermalized\) or fixed eccentricity.) N
(---) N
(> ***************************) N
(> * Choose) N
(> *) N
(> * ECC0<0: thermal distribution f\(e\)=2e) N
(> * 0<=ECC0<=1 fixed eccentricity) N
(> * ECC0=20 a uniform distr. between 0 and 1) N
(> * ECC0=30 an exponentially decreasing distribution akin to the data in) N
(OUT) (Page 12/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (6/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * Fig.6a of Duquennoy and Mayor 1991: f\(e\)=0.1765/\(e*e\), 0.15<=e<=1) p n
(> * ECC0=40:) N
(> * The general distribution is \(9.02.94\):) N
(> * f\(e\) = a e^b e0<=e<=1) N
(> * with a = \(1+b\) / \(1-e0^\(1+b\)\)) N
(> * Its generating function is) N
(> * e\(X\) = [\(\(1+b\)/a\)X + e0^\(1+b\)]^\(1/\(1+b\)\)) N
(> * Choose some a and b below.) N
(> * Get thermal distribution if b=1 with e0=0) N
(> *) N
(112c156) N
(<               ECC2 = RAN2\(IDUM1\)) N
(---) N
(>               ECC2 = RAN2\(KDUM\)) N
(114c158,175) N
(<           ELSE) N
(---) N
(>           else if \(ecc0.EQ.20\) then) N
(>               ecc = RAN2\(KDUM\)) N
(> *) N
(>           else if \(ecc0.EQ.30\) then) N
(>               ecc = 1./0.15 - RAN2\(KDUM\)/0.1765) N
(>               ecc = 1./ecc) N
(> *) N
(>           else if \(ecc0.EQ.40\) then) N
(>               PK_e0 = 0.D0) N
(>               PK_b = 1.D0) N
(>               PK_a = \(1.D0+PK_b\) / \(1.D0 - PK_e0**\(1.D0+PK_b\)\)) N
(> ) N
(>               ecc = RAN2\(KDUM\)) N
(>               ecc = \(\(PK_b+1.D0\)/PK_a\)*ecc + PK_e0**\(1.D0+PK_b\)) N
(>               ecc = ecc**\(1.D0/\(1.D0+PK_b\)\)) N
(> *) N
(> *) N
(>           ELSE if \(ecc0.GE.0.0.AND.ecc0.LE.1.\) then) N
(118,124c179) N
(< *       Select semi-major axis from uniform distribution in log\(A\) or SEMI0.) N
(<           IF \(RANGE.GT.0.0\) THEN) N
(<               EXP1 = RAN2\(IDUM1\)*LOG10\(RANGE\)) N
(<               SEMI = SEMI0/10.0**EXP1) N
(<           ELSE) N
(<               SEMI = SEMI0) N
(<           END IF) N
(---) N
(> *****************************) N
(126,198c181,311) N
(< *       Check for eigen-evolution \(Pavel Kroupa & Rosemary Mardling\).) N
(<           IF \(ICIRC.NE.0\) THEN) N
(<               ZMB = \(BODY\(I1\) + BODY\(I2\)\)*ZMBAR) N
(< *       Include minimum period \(copy RANGE; at least 1 day\).) N
(<               PMIN = MAX\(RANGE,1.0D0\)) N
(<               IT = 0) N
(<    35         XR = RAN2\(IDUM1\)) N
(< *       Generate period distribution \(Pavel Kroupa: MN 277, 1491, eq.11b\).) N
(<               P0 = LOG10\(PMIN\) + SQRT\(ETA2*\(EXP\(2.0*XR/ETA1\) - 1.0\)\)) N
(<               TK = 10.0**P0) N
(< *       Invert eccentricity from thermal distribution \(XR = E**2\).) N
(<               XR = RAN2\(IDUM1\)) N
(<               ES0 = SQRT\(XR\)) N
(< *       Set pericentre distance in AU with period in days & mass in SU.) N
(<               RP0 = \(1.0 - ES0\)*\(\(TK/365.0\)**2*ZMB\)**0.3333) N
(< *       Convert to N-body units.) N
(<               RP0 = RP0/RAU) N
(<               A0 = RP0/\(1.0 - ES0\)) N
(<               E0 = ES0) N
(< *       Limit the maximum semi-major axis to 1000 AU.) N
(<               IF \(A0*RAU.GT.1000.0\) GO TO 35) N
(< *       Define K* = 0/1 and enhanced radii for pre-main sequence.) N
(<               KSTAR\(I1\) = 1) N
(OUT) (Page 13/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               KSTAR\(I2\) = 1) p n
(<               IF \(BODY\(I1\)*ZMBAR.LT.0.7\) KSTAR\(I1\) = 0) N
(<               IF \(BODY\(I2\)*ZMBAR.LT.0.7\) KSTAR\(I2\) = 0) N
(<               RADIUS\(I1\) = 5.0*SQRT\(BODY\(I1\)*ZMBAR\)/SU) N
(<               RADIUS\(I2\) = 5.0*SQRT\(BODY\(I2\)*ZMBAR\)/SU) N
(<               IF \(RP0.LT.MAX\(RADIUS\(I1\),RADIUS\(I2\)\)\) THEN) N
(<                   WRITE \(6,38\)  I1, ZMB, ES0, A0, RP0) N
(<    38             FORMAT \(12X,'COLLISION:    I1 MB E A RP ',) N
(<      &                                       I6,F6.1,F7.3,1P,2E10.2\)) N
(<                   ICOLL = ICOLL + 1) N
(<                   GO TO 35) N
(<               END IF) N
(< *       Perform eigen-evolution of pericentre & eccentricity for 10^6 yrs.) N
(<               TC = -1.0/TSCALE) N
(<               CALL TCIRC\(RP0,ES0,I1,I2,ICIRC,TC\)) N
(< *       Copy modified eccentricity and re-evaluate the semi-major axis.) N
(<               ECC = ES0) N
(<               SEMI = RP0/\(1.0 - ECC\)) N
(<               IT = IT + 1) N
(<               IF \(SEMI.GT.SEMI0.AND.IT.LT.25\) GO TO 35) N
(<               TK = 365.0*SQRT\(\(SEMI*RAU\)**3/ZMB\)) N
(<               IF \(ECC.LE.0.002\) IC0 = IC0 + 1) N
(<               IF \(TK.LT.PMIN\) IC1 = IC1 + 1) N
(<               IF \(TK.LT.2.0*PMIN\) IC2 = IC2 + 1) N
(<               IF \(TK.LT.5.0*PMIN\) IC3 = IC3 + 1) N
(<               WRITE \(23,40\)  IT, I1, ZMB, E0, ECC, A0, SEMI, TK) N
(<    40         FORMAT \(12X,'BINARY:   IT I1 MB E0 E A0 A P ',) N
(<      &                               I2,I5,F5.1,2F7.3,1P,3E10.2\)) N
(<               CALL FLUSH\(23\)) N
(<           ELSE IF \(KZ\(27\).EQ.1.OR.KZ\(19\).GE.3\) THEN) N
(< *       Obtain tidal encounter distance \(4*RADIUS\) from square root relation.) N
(<               RSUN = 1.0/SU) N
(<               ZM = MAX\(BODY\(I1\),BODY\(I2\)\)*ZMBAR) N
(<               RT = 4.0*RSUN*SQRT\(ZM\)) N
(< *       Modify orbital elements to avoid tidal interaction or collision.) N
(<    42         IF \(SEMI*\(1.0 - ECC\).LT.2.0*RT\) THEN) N
(< *       Increase semi-major axis or reduce eccentricity until peri > 2*RT.) N
(<    44             IF \(SEMI.LT.2.0*RT\) THEN) N
(<                       SEMI = 2.0*SEMI) N
(<                       GO TO 44) N
(<                   ELSE) N
(<                       ECC = 0.9*ECC) N
(<                   END IF) N
(<                   WRITE \(17,46\)  I1, I2, ECC, SEMI, SEMI*\(1.0-ECC\), RT) N
(<    46             FORMAT \(12X,'REDUCE ECC:    I1 I2 E A PM RT ',) N
(<      &                                        2I5,F7.3,1P,3E10.2\)) N
(<                   CALL FLUSH\(17\)) N
(<                   GO TO 42) N
(<               END IF) N
(<           END IF) N
(---) N
(> * Select semi-major axis from uniform distribution in log\(A\),) N
(> * or a uniform distribution in the range semi0 \(=min. ecc.\)) N
(> * to semi0+range \(=max. ecc.\), or SEMI0.) N
(> *) N
(> * Use distribution in semi-major axis if) N
(> * BK\(2\)=0: RANGE>0: uniform distribution in log\(semi\) between SEMI0 and) N
(> * SEMI0/RANGE) N
(> * RANGE<0: uniform distribution in semi between SEMI0 and -1*RANGE.) N
(> *) N
(> * Use distribution in logP\(days\) if) N
(> * BK\(2\)=1: linearly increasing distribution function f=0.03438*logP) N
(> * BK\(2\)=2: f=3.5logP/[100+\(logP\)**2]) N
(> * BK\(2\)=1,2 are 1st and 2nd iterations!) N
(> * BK\(2\)=3: f=2.3\(logP-1\)/[45+\(logP-1\)**2] This is a "3rd" iteration when) N
(> * pre-ms evolution is taken into account with BK\(1\).NE.0.) N
(> * BK\(2\)=4: f=2.5\(logP-1\)/[45+\(logP-1\)**2] This is a "34th" iteration when) N
(> * pre-ms evolution is taken into account with BK\(1\).NE.0, and) N
(> * RBAR<1.5 \(in runs /run34n RBAR=1.5 with BK\(2\)=3 lead to) N
(OUT) (Page 14/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (7/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (15-16) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * wrong qone distr.) p n
(> * BK\(2\)=5: Duquennoy & Mayor 1991, Gaussian distr.) N
(> * with mean logP=4.8, SDEV in logP=2.3. Use Num.Recipes) N
(> * routine "gasdev.f" to obtain random deviates given "idum1".) N
(> *========= BK\(2\) = 0 ========) N
(>           if \(BK\(2\).EQ.0\) then) N
(>              IF \(RANGE.GT.0.0\) THEN) N
(>                  EXP1 = RAN2\(KDUM\)*LOG10\(RANGE\)) N
(>                  SEMI = SEMI0/10.0**EXP1) N
(>              else if \(range.LT.0.0\) then) N
(>                  exp1 = RAN2\(KDUM\)*\(-1*range-semi0\)) N
(>                  semi = semi0 + exp1) N
(>              ELSE) N
(>                  SEMI = SEMI0) N
(>              END IF) N
(> *========= BK\(2\) = 1 ========) N
(>           else if \(BK\(2\).EQ.1\) then) N
(> * exp = logP\(days\)) N
(>              exp1 = SQRT\(RAN2\(KDUM\)*2.0/0.03438\)) N
(> * Period in yrs:) N
(>              exp1 = 10**exp1 /365.25) N
(> * transform to semi-major axis in model units to continue prgrm from here) N
(> * as before \(i.e. when semi-major axis is chosen\): Use Kepler law:) N
(> * M1+M2 = a**3/P**2, where mass is in Msun, and a is in AU.) N
(>              semi = \(BODY\(I1\)+BODY\(I2\)\)*ZMBAR*exp1*exp1) N
(>              semi = semi**\(1./3.\)) N
(> * semi in pc and then in modell units:) N
(>              semi = semi/206259.591) N
(>              semi = semi/RBAR) N
(> *========= BK\(2\) = 2 ========) N
(>           else if \(BK\(2\).EQ.2\) then) N
(>              exp1 = EXP\(2.0*RAN2\(KDUM\)/3.50\) - 1.) N
(>              exp1 = SQRT\(exp1*100.\)) N
(> * exp = logP\(days\)) N
(> * Period in yrs:) N
(>              exp1 = 10**exp1 /365.25) N
(> * transform to semi-major axis in model units to continue prgrm from here) N
(> * as before \(i.e. when semi-major axis is chosen\): Use Kepler law:) N
(> * M1+M2 = a**3/P**2, where mass is in Msun, and a is in AU.) N
(>              semi = \(BODY\(I1\)+BODY\(I2\)\)*ZMBAR*exp1*exp1) N
(>              semi = semi**\(1./3.\)) N
(> * semi in pc and then in modell units:) N
(>              semi = semi/206259.591) N
(>              semi = semi/RBAR) N
(> *========= BK\(2\) = 3 ========) N
(>           else if \(BK\(2\).EQ.3\) then) N
(>              exp1 = EXP\(2.D0*RAN2\(KDUM\)/2.3D0\) - 1.D0) N
(>              exp1 = SQRT\(exp1*45.D0\) + 1.D0) N
(> * exp = logP\(days\)) N
(> * Period in yrs:) N
(>              exp1 = 10**exp1 /365.25D0) N
(> * transform to semi-major axis in model units to continue prgrm from here) N
(> * as before \(i.e. when semi-major axis is chosen\): Use Kepler law:) N
(> * M1+M2 = a**3/P**2, where mass is in Msun, and a is in AU.) N
(>              semi = \(BODY\(I1\)+BODY\(I2\)\)*ZMBAR*exp1*exp1) N
(>              semi = semi**\(1.D0/3.D0\)) N
(> * semi in pc and then in modell units:) N
(>              semi = semi/206259.591D0) N
(>              semi = semi/RBAR) N
(> *========= BK\(2\) = 4 ========) N
(>           else if \(BK\(2\).EQ.4\) then) N
(>              exp1 = EXP\(2.D0*RAN2\(KDUM\)/2.5D0\) - 1.D0) N
(>              exp1 = SQRT\(exp1*45.D0\) + 1.D0) N
(> * exp = logP\(days\)) N
(> * Period in yrs:) N
(>              exp1 = 10**exp1 /365.25D0) N
(> * transform to semi-major axis in model units to continue prgrm from here) N
(> * as before \(i.e. when semi-major axis is chosen\): Use Kepler law:) N
(> * M1+M2 = a**3/P**2, where mass is in Msun, and a is in AU.) N
(OUT) (Page 15/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>              semi = \(BODY\(I1\)+BODY\(I2\)\)*ZMBAR*exp1*exp1) p n
(>              semi = semi**\(1.D0/3.D0\)) N
(> * semi in pc and then in modell units:) N
(>              semi = semi/206259.591D0) N
(>              semi = semi/RBAR) N
(> *========= BK\(2\) = 5 ========) N
(>           else if \(BK\(2\).EQ.5\) then) N
(>              exp1 = -10.) N
(> C Only accept periods logP>1, i.e. longer than 10 days at birth) N
(> C AND periods shorter than 10^\(10\) days!) N
(>              do while \(exp1.LT.-1.6522\)) N
(>                 exp1 = GASDEV_pk\(KDUM\)) N
(>                 if \(exp1.GT.2.2696\) exp1=-10.) N
(>              end do) N
(> * exp1 is now a Gaussian deviate with mean zero and unit variance) N
(> * Transform to mean=4.8 and variance = 2.3*2.3, i.e to logP, P in days) N
(>             exp1 = 2.3*exp1 + 4.8) N
(> * exp = logP\(days\)) N
(> * Period in yrs:) N
(>              exp1 = 10**exp1 /365.25D0) N
(> * transform to semi-major axis in model units to continue prgrm from here) N
(> * as before \(i.e. when semi-major axis is chosen\): Use Kepler law:) N
(> * M1+M2 = a**3/P**2, where mass is in Msun, and a is in AU.) N
(>              semi = \(BODY\(I1\)+BODY\(I2\)\)*ZMBAR*exp1*exp1) N
(>              semi = semi**\(1.D0/3.D0\)) N
(> * semi in pc and then in modell units:) N
(>              semi = semi/206259.591D0) N
(>              semi = semi/RBAR) N
(> *========= BK\(2\) = ? ========) N
(>           else) N
(>              if\(rank.eq.0\)write\(6,*\)' No BK\(2\) defined!!!!! ') N
(>              STOP) N
(>           end if) N
(> *) N
(> *) N
(> * At this stage we have the mases, eccentricity and period of each binary) N
(> * at "birth", i.e. prior to circularisation and "feeding". Now evolve these) N
(> * to very, very roughly take into account complete circularisation,) N
(> * partial circularisation and "feeding". Do this if option BK\(1\)=1:) N
(> * \(i.e. mass-exchange at proto-stellar time\):) N
(>           if \(BK\(1\).EQ.1\) then) N
(>              call proto_star_evol\() N
(>      & ZMBAR,RBAR,BODY\(I1\),BODY\(I2\),ECC,SEMI\)) N
(>           end if) N
(200c313) N
(< *       Specify relative motion at apocentre and sum binding energy.) N
(---) N
(> * Specify relative motion at apocentre.) N
(206c319,321) N
(<           EBIN0 = EBIN0 - 0.5*BODY\(I1\)*BODY\(I2\)/SEMI) N
(---) N
(>           EBpk = -0.5*BODY\(I1\)*BODY\(I2\)/SEMI) N
(> C Moved below to account for accepted binaries only.) N
(> C EBIN0 = EBIN0 - 0.5*BODY\(I1\)*BODY\(I2\)/SEMI) N
(208,209c323,324) N
(< *       Transform to relative variables.) N
(<           DO 50 K = 1,3) N
(---) N
(> * Transform to relative variables.) N
(>           DO 40 K = 1,3) N
(212c327) N
(<    50     CONTINUE) N
(---) N
(>    40 CONTINUE) N
(214,215c329,330) N
(< *       Set global variables for each component.) N
(<           DO 55 K = 1,3) N
(---) N
(> * Set global variables for each component.) N
(OUT) (Page 16/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (8/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (17-18) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           DO 50 K = 1,3) p n
(220c335,379) N
(<    55     CONTINUE) N
(---) N
(>    50 CONTINUE) N
(> *) N
(> *) N
(> * Merge binaries that have semi.LE.10 solar radii \(all in AU\):) N
(> * Solar radius in AU is 4.6523D-3.) N
(>           semi = semi*RBAR*206259.591D0) N
(>           pkmergedist = 10.D0 * 4.6523D-3) N
(> c pkmergedist = 50000.D0 * 4.6523D-3) N
(>           J1 = I1 -2*pkmerge) N
(>           J2 = I2 -2*pkmerge) N
(>           if \(semi.LE.pkmergedist\) then) N
(>              pkmerge = pkmerge + 1) N
(>              ZMBIN = BODY\(I1\) + BODY\(I2\)) N
(> C Added 20.8.96:) N
(>              if\(rank.eq.0\)then) N
(>              write\(6,*\)) N
(>              write\(6,*\)' MERGED stars in binpop_pk.f:') N
(>              write\(6,*\)' mass1, mass2, total mass [Msun]') N
(>              write\(6,'\(3F8.3\)'\)body\(I1\)*ZMBAR,body\(I2\)*ZMBAR,) N
(>      + zmbin*ZMBAR) N
(>              end if) N
(> C End added bit.) N
(>              do K = 1,3) N
(>                  Xmergepk\(K,pkmerge\) = \(BODY\(I1\)*X\(K,I1\) +) N
(>      & BODY\(I2\)*X\(K,I2\)\)/ZMBIN) N
(>                  XDOTmergepk\(K,pkmerge\) = \(BODY\(I1\)*XDOT\(K,I1\) +) N
(>      & BODY\(I2\)*XDOT\(K,I2\)\)/ZMBIN) N
(>              end do) N
(>              BODYmergepk\(pkmerge\) = ZMBIN) N
(>           else) N
(> C Sum binding energy for accepted binaries.) N
(>              EBIN0 = EBIN0 + EBpk) N
(>              bodypk\(J1\) = body\(I1\)) N
(>              bodypk\(J2\) = body\(I2\)) N
(>              do k=1,3) N
(>                 xpk\(k,J1\) = x\(k,I1\)) N
(>                 xpk\(k,J2\) = x\(k,I2\)) N
(>                 xdotpk\(k,J1\) = xdot\(k,I1\)) N
(>                 xdotpk\(k,J2\) = xdot\(k,I2\)) N
(>              end do) N
(>           end if) N
(> *) N
(> *=========================================================) N
(> *=================end of THE LOOP=========================) N
(> *=========================================================) N
(223c382,397) N
(< *       Update the total particle number after primary splitting or IMF2.) N
(---) N
(> C Kroupa: 5.11.96) N
(> C Take into account possible initial single stars. Before merging above) N
(> C these occupy positions: 2*NBIN+1....N+NBIN \(before merging the stars) N
(> C in binaries occupy positions 1,2,....2*NBIN\).) N
(>       pk_sing = 0) N
(>       do i=2*NBIN+1,N+NBIN) N
(>          pk_sing = pk_sing+1) N
(>          s_body\(pk_sing\)=body\(i\)) N
(>          do k=1,3) N
(>             s_x\(k,pk_sing\) = x\(k,i\)) N
(>             s_xdot\(k,pk_sing\) = xdot\(k,i\)) N
(>          end do) N
(>       end do) N
(> *) N
(> * Update the total particle number after primary splitting or IMF2) N
(> * and introduce additional counters for MERGING:) N
(229,233c403,407) N
(OUT) (Page 17/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           IF \(NSKIP.GT.0\) THEN) p n
(<               WRITE \(6,62\)  \(BODY\(J\),J=1,10\)) N
(<               WRITE \(6,64\)  \(BODY\(J\),J=2*NBIN+1,2*NBIN+10\)) N
(<    62         FORMAT \(/,12X,'BINARY MASSES \(1-10\):  ',10F9.5\)) N
(<    64         FORMAT \(/,12X,'SINGLE MASSES \(1-10\):  ',10F9.5,/\) ) N
(---) N
(>           IF \(rank.eq.0.and.NSKIP.GT.0\) THEN) N
(>               WRITE \(6,62\) \(BODY\(J\),J=1,10\)) N
(>               WRITE \(6,64\) \(BODY\(J\),J=2*NBIN+1,2*NBIN+10\)) N
(>    62 FORMAT \(/,12X,'BINARY MASSES \(1-10\):  ',10F9.5\)) N
(>    64 FORMAT \(/,12X,'SINGLE MASSES \(1-10\):  ',10F9.5,/\)) N
(237c411,517) N
(< *       Include procedure for introducing dormant binaries.) N
(---) N
(>       Npk = N - pkmerge) N
(>       NZEROpk = Npk) N
(>       NTOTpk = Npk) N
(>       NBINpk = NBIN - pkmerge) N
(> ) N
(> c+++) N
(> CCCCCCCCCCCC for testing:) N
(>         if\(rank.eq.0\)then) N
(>         write\(6,*\)) N
(>         write\(6,*\)' In BINPOP_PK :') N
(>         write\(6,*\)'****************************************') N
(>         write\(6,*\)'N,NBIN,NBIN0,NBINpk,pkmerge,Npk,pk_sing:') N
(>         write\(6,'\(7\(I6\)\)'\)N,NBIN,NBIN0,NBINpk,pkmerge,) N
(>      + Npk,pk_sing) N
(> c write\(6,*\)) N
(> c write\(6,*\)) N
(> c write\(6,*\)' original stars') N
(> c do i=1,N) N
(> c write\(6,'\(I4,7\(F8.3\)\)'\) i,body\(i\)*ZMBAR,) N
(> c + \(X\(k,i\),xdot\(k,i\),k=1,3\)) N
(> c end do) N
(> c write\(6,*\)) N
(> c write\(6,*\)) N
(> c write\(6,*\)' remaining binaries') N
(> c do i=1,2*NBINpk) N
(> c write\(6,'\(I4,7\(F8.3\)\)'\) i,bodypk\(i\)*ZMBAR,) N
(> c + \(Xpk\(k,i\),xdotpk\(k,i\),k=1,3\)) N
(> c end do) N
(> c write\(6,*\)) N
(> c write\(6,*\)' merged ones:') N
(> c do i=1,pkmerge) N
(> c write\(6,'\(I4,7\(F8.3\)\)'\) i,bodymergepk\(i\)*ZMBAR,) N
(> c + \(Xmergepk\(k,i\),xdotmergepk\(k,i\),k=1,3\)) N
(> c end do) N
(> c write\(6,*\)'****************************************') N
(> c call flush\(6\)) N
(>          end if) N
(> CCCCCCCCCCCCCC) N
(> *) N
(> * Now overwrite the old vars with the MERGED ones:) N
(>       N = Npk) N
(>       NTOT = ntotpk) N
(>       NZERO = nzeropk) N
(>       NBIN0 = NBIN0 - pkmerge) N
(>       NBIN = NBINpk) N
(> C The stars in remaining binaries:) N
(>       do i=1,2*NBIN) N
(>          body\(i\) = bodypk\(i\)) N
(>          do k=1,3) N
(>             x\(k,i\) = xpk\(k,i\)) N
(>             xdot\(k,i\) = xdotpk\(k,i\)) N
(>          end do) N
(>       end do) N
(> C Add merged \(i.e single\) stars to end of the above list of stars in binaries:) N
(>       j = 2*NBIN) N
(OUT) (Page 18/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (9/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (19-20) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       do i=1,pkmerge) p n
(>          j = j+1) N
(>          body\(j\) = bodymergepk\(i\)) N
(>          do k=1,3) N
(>             x\(k,j\) = xmergepk\(k,i\)) N
(>             xdot\(k,j\) = xdotmergepk\(k,i\)) N
(>          end do) N
(>       end do) N
(> C Add the initially single stars again at end of the lot:) N
(>       do i=1,pk_sing) N
(>          j=j+1) N
(>          body\(j\) = s_body\(i\)) N
(>          do k=1,3) N
(>             x\(k,j\)=s_x\(k,i\)) N
(>             xdot\(k,j\)=s_xdot\(k,i\)) N
(>          end do) N
(>       end do) N
(> *) N
(> C Added 11.08.98 with Sverre Aarseth: \(body0 needed for) N
(> C stellar evolution!\)) N
(>       if \(j.ne.ntot\) then) N
(>          if\(rank.eq.0\)) N
(>      & write\(6,*\)j,ntot,' ****** j & ntot must be equal ******') N
(>          stop) N
(>       end if) N
(> *) N
(>       zmass = 0.D0) N
(>       do i=1,ntot) N
(>          body0\(i\) = body\(i\)) N
(>          zmass = zmass + body0\(i\)) N
(>       end do) N
(>       BODYM = ZMASS/FLOAT\(N\)) N
(>       if\(rank.eq.0\)then) N
(>       write\(6,*\)) N
(>       write\(6,*\)' BODYM, ZMASS and BODY0\(i\) updated.') N
(>       write\(6,'\(2\(a,F10.4\)\)'\)' BODYM= ',BODYM,' ZMASS= ',ZMASS) N
(>       write\(6,*\)) N
(> *) N
(> c+++ for testing:) N
(> c write\(6,*\)) N
(> c write\(6,*\)) N
(> c write\(6,*\)' After merging & re-arranging:') N
(> c write\(6,*\)' N,NBIN0,NTOT: ',N,NBIN0,NTOT) N
(> c do i=1,N) N
(> c write\(6,'\(I3,7\(F8.3\)\)'\)i,body\(i\)*ZMBAR,) N
(> c + \(x\(k,i\),xdot\(k,i\),k=1,3\)) N
(> c end do) N
(> c call flush\(6\)) N
(>        end if) N
(> *) N
(> *) N
(> * Include procedure for introducing dormant binaries.) N
(246,247c526,527) N
(<      &                         BODY\(I2\)*XDOT\(K,I2\)\)/ZMBIN) N
(<    65         CONTINUE) N
(---) N
(>      & BODY\(I2\)*XDOT\(K,I2\)\)/ZMBIN) N
(>    65 CONTINUE) N
(249c529) N
(<    66     CONTINUE) N
(---) N
(>    66 CONTINUE) N
(251c531) N
(< *       Move the original single particles up to form compact array.) N
(---) N
(> * Move the original single particles up to form compact array.) N
(260,261c540,541) N
(<    67         CONTINUE) N
(<    68     CONTINUE) N
(OUT) (Page 19/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>    67 CONTINUE) N
(>    68 CONTINUE) N
(263c543) N
(< *       Reset particle membership and turn off binary output option \(if = 1\).) N
(---) N
(> * Reset particle membership and turn off binary output option \(if = 1\).) N
(272c552) N
(< *       Set coordinates & velocities in c.m. rest frame.) N
(---) N
(> * Set coordinates & velocities in c.m. rest frame.) N
(282c562) N
(<    75     CONTINUE) N
(---) N
(>    75 CONTINUE) N
(289c569) N
(<    85     CONTINUE) N
(---) N
(>    85 CONTINUE) N
(291a572,574) N
(> * Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(> *) N
(294a578,706) N
(> C=======================================================) N
(>       subroutine proto_star_evol\(ZMBAR,RBAR,mass1,mass2,ECC,SEMI\)) N
(> *) N
(>       implicit none) N
(>       real*8 mass1,mass2,ecc,semi,period) N
(>       real*8 ecc_initial,period_initial) N
(>       real*8 qnew,qold,mtot,Ro,mtot_initial) N
(>       real*8 R_periastron,alpha,beta) N
(>       real*8 ZMBAR,RBAR,au,Rsun) N
(> * astr. unit, solar radius, all in AU \(1pc=206259.591AU\)) N
(>       parameter\(au=206259.591D0,Rsun=4.6523D-3\)) N
(> *) N
(> *) N
(> *==============================) N
(> * Choose these to define the model: \(alpha==lambda, beta==chi\)) N
(> *) N
(> c alpha = 10.D0) N
(> c beta = 1.D0) N
(> * best values:) N
(>       alpha = 28.D0) N
(>       beta = 0.75D0) N
(> *==============================) N
(> *) N
(> *) N
(> *) N
(> * in Msun:) N
(>       mtot = \(mass1+mass2\)*ZMBAR) N
(>       mtot_initial = mtot) N
(> * in AU:) N
(>       semi = semi*RBAR*au) N
(> * in years:) N
(>       period = semi*semi*semi/mtot) N
(>       period = DSQRT\(period\)) N
(>       ecc_initial = ecc) N
(>       period_initial = period) N
(> *) N
(> * 1\) Circularisation and evolution of orbit as a function of) N
(> * periastron distance \(Ro in AU\):) N
(> * Note that the algorithm used here leads to circularised orbits for) N
(> * logP<=1 approximately!! \(if beta=1.5,alpha=35 approximately\)) N
(>       Ro = alpha *Rsun) N
(>       R_periastron = semi*\(1.D0-ecc\)) N
(>       alpha = -1.D0*\(Ro/R_periastron\)**beta) N
(>       if \(ecc.GT.0.D0\) then) N
(>          ecc = DEXP\(alpha + DLOG\(ecc\)\)) N
(OUT) (Page 20/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (10/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (21-22) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       else) p n
(>          ecc = ecc_initial) N
(>       end if) N
(> *) N
(> * 2\) Change mass-ratio towards unity as a function of initial periastron) N
(> * distance:) N
(> *) N
(>       qold = mass1/mass2) N
(>       if \(qold.GT.1.D0\) qold = 1.D0/qold) N
(>       alpha = -1.D0*alpha) N
(>       if \(alpha.GT.1.D0\) then) N
(>          qnew = 1.D0) N
(>       else) N
(>          qnew = qold + \(1.D0-qold\) * alpha) N
(>       end if) N
(> *) N
(> * new masses in model units \(remembering q=m1/m2<1\) if mass is conserved) N
(> * NOT IMPLEMENTED!) N
(> c mtot = mtot/ZMBAR) N
(> c mass1 = mtot/\(qnew+1.D0\)) N
(> c mass2 = mtot - mass1) N
(> *) N
(> * Keep the mass of primary fixed and adjust mass of secondary. Note that this) N
(> * algorithm leads to a gain in mass of the binary, and thus of the whole) N
(> * cluster!) N
(> *) N
(> C Added 20.06.96 write statements:) N
(> * if\(rank.eq.0\)then) N
(> * write\(6,*\)) N
(> * write\(6,*\)' FEEDING in binpop_pk.f') N
(> * write\(6,'\(a,2F8.3\)'\)' old masses [Msun]:',) N
(> * + mass1*ZMBAR,mass2*ZMBAR) N
(>         mass1 = DMAX1\(mass1,mass2\)) N
(>         mass2 = qnew*mass1) N
(> * write\(6,'\(a,2F8.3\)'\)' new masses [Msun]:',) N
(> * + mass1*ZMBAR,mass2*ZMBAR) N
(> * end if) N
(> C End added bit.) N
(> *) N
(> * In Msun:) N
(>         mtot = \(mass1+mass2\)*ZMBAR) N
(> *) N
(> C This below is wrong as in ecc formula above constant Rperi was assumed!!!) N
(> c* Duquennoy et al. 1992 in "Binaries as tracers of stellar evolution":) N
(> c period = period_initial * DEXP\(\(57.D0/14.D0\) *) N
(> c & \(ecc*ecc - ecc_initial*ecc_initial\)\)) N
(> C This below is correct:) N
(>        period = period_initial*\(\(1.D0-ecc_initial\)/\(1.D0-ecc\)\)**1.5D0) N
(>        period = period * DSQRT\(mtot_initial/mtot\)) N
(> *) N
(> *) N
(> * New semi-major axis and back to model units:) N
(>       semi = mtot * period*period) N
(>       semi = semi**\(1.D0/3.D0\)) N
(>       semi = semi/\(RBAR*au\)) N
(> *) N
(>       return) N
(>       end) N
(> C=======================================================) N
(>       FUNCTION gasdev_pk\(idum\)) N
(>       INTEGER idum) N
(>       REAL gasdev_pk) N
(> CU USES ran1) N
(> C P.Kroupa: 8.11.96: changed to RAN2) N
(>       INTEGER iset) N
(>       REAL fac,gset,rsq,v1,v2,ran2) N
(>       SAVE iset,gset) N
(>       DATA iset/0/) N
(>       if \(iset.eq.0\) then) N
(OUT) (Page 21/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> 1 v1=2.*ran2\(idum\)-1.) p n
(>         v2=2.*ran2\(idum\)-1.) N
(>         rsq=v1**2+v2**2) N
(>         if\(rsq.ge.1..or.rsq.eq.0.\)goto 1) N
(>         fac=sqrt\(-2.*log\(rsq\)/rsq\)) N
(>         gset=v1*fac) N
(>         gasdev_pk=v2*fac) N
(>         iset=1) N
(>       else) N
(>         gasdev_pk=gset) N
(>         iset=0) N
(>       endif) N
(>       return) N
(>       END) N
(> C \(C\) Copr. 1986-92 Numerical Recipes Software >\).) N
(1,2c1,2) N
(< 708 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/block.f) N
(< nbody6compare/block.f) N
(---) N
(> 647 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/block.f) N
(> nbody6++compare/block.f) N
(9c9) N
(<       COMMON/RAND2/  IY,IFF,IR\(97\) ) N
(---) N
(>       COMMON/RAND/  IY,IFF,IR\(97\) ) N
(15d14) N
(<       COMMON/COUNTS/  NCOUNT\(60\)) N
(24d22) N
(<       DATA  NCOUNT  /60*0/) N
(1,2c1,2) N
(< 4426 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/bodies.f) N
(< nbody6compare/bodies.f) N
(---) N
(> 4496 2000-08-21 21:05 /work/Umi2/spurzem/5/nbody6++compare/bodies.f) N
(> nbody6++compare/bodies.f) N
(35c35,36) N
(<           WRITE \(6,6\)  I, NAME\(I\), BODY\(I\), STEP\(I\), STEPR\(I\), EI, RI,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,6\)  I, NAME\(I\), BODY\(I\), STEP\(I\), STEPR\(I\), EI, RI,) N
(83c84,85) N
(<           WRITE \(6,35\)  NAME\(I\), NAME\(JMIN\), BODY\(I\), BODY\(JMIN\), EREL,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,35\)  NAME\(I\), NAME\(JMIN\), BODY\(I\), BODY\(JMIN\), EREL,) N
(85,86c87,88) N
(<    35     FORMAT \('   BINARY ',2I5,2F8.4,F9.1,1P,4E10.2,0P,F7.2,2I5,) N
(<      &                                              1P,E10.1,0P,F7.2,I4\)) N
(---) N
(>    35     FORMAT \('   BINARY ',2I5,2F8.4,F9.1,1P4E10.2,0PF7.2,2I5,) N
(>      &                                                1PE10.1,0PF7.2,I4\)) N
(107c109,110) N
(<           WRITE \(6,35\)  NAME\(I\), NAME\(JMIN\), BODY\(I\), BODY\(JMIN\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,35\)  NAME\(I\), NAME\(JMIN\), BODY\(I\), BODY\(JMIN\),) N
(1,2c1,2) N
(< 6957 2006-02-17 09:31 /work/Umi2/spurzem/5/nbody6compare/brake.f) N
(< nbody6compare/brake.f) N
(---) N
(> 6121 2001-08-04 21:22 /work/Umi2/spurzem/5/nbody6++compare/brake.f) N
(> nbody6++compare/brake.f) N
(8c8) N
(<       REAL*8 M1,M2,MFAC) N
(---) N
(>       REAL*8 M1,M2) N
(52a53) N
(>       GM = 1.3D+26) N
(64,66c65) N
(OUT) (Page 22/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (11/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (23-24) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *     ADOT = 2.0*SQRT\(ACM/GMS\)*ZJDOT/\(1.989D+33*ZMBAR*ZMU\)) p n
(< *       Ignore magnetic braking for now.) N
(<       ADOT = 0.0) N
(---) N
(>       ADOT = 2.0*SQRT\(ACM/GMS\)*ZJDOT/\(1.989D+33*ZMBAR*ZMU\)) N
(68,69c67,68) N
(< *       Evaluate time scale for spin-down \(yrs\).) N
(< *     TBR = ACM/\(3.147D+07*ADOT\)) N
(---) N
(> *       Define old primary and evaluate time scale for spin-down \(yrs\).) N
(>       TBR = ACM/\(3.147D+07*ADOT\)) N
(71c70) N
(< *       Form alternative expression derived by J/JDOT \(factor 2 longer\).) N
(---) N
(> *       Evaluate alternative expression derived by J/JDOT \(factor 2 longer\).) N
(77,81d75) N
(< *       Set constants in N-body units.) N
(<       CLIGHT = 3.0D+05/VSTAR) N
(<       GMC = 1.0/CLIGHT**2) N
(<       MFAC = BODY\(I1\)*BODY\(I2\)*BODY\(I\)) N
(< *) N
(84,90c78) N
(< *     AGDOT = 1.23D+27*MFAC*\(ZMBAR/ACM\)**3) N
(< *       Convert from cgs to scaled units.) N
(< *     AGDOT = AGDOT/\(1.0D+05*VSTAR\)) N
(< *       Adopt equivalent expression in N-body units \(check agrees\).) N
(<       AGDOT = 64.0/5.0*GMC**3*CLIGHT*MFAC/SEMI**3) N
(<       FE = \(1.0 + 73.0/24.0*ECC2 + 37.0/96.0*ECC2**2\)/\(1.0 - ECC2\)**3.5) N
(<       AGDOT = AGDOT*FE) N
(---) N
(>       AGDOT = 1.23D+27*BODY\(I1\)*BODY\(I2\)*BODY\(I\)*\(ZMBAR/ACM\)**3) N
(93,99d80) N
(< *       Treat eccentricity change in similar way using N-body units.) N
(<       ECC = SQRT\(ECC2\)) N
(< *     EFAC = 304.0*\(\(6.67D-08*1.989D+33\)/3.0D+10\)**3/\(15.0*9.0D+20\)) N
(<       EFAC = 304.0/15.0*GMC**3*CLIGHT*MFAC/SEMI**4) N
(<       FE2 = ECC*\(1.0 + 121.0/304.0*ECC2\)/\(1.0 - ECC2\)**2.5) N
(<       EDOT = EFAC*FE2) N
(< *) N
(101,105c82,86) N
(< *     IF \(\(\(M2.GT.1.3.OR.M2.LT.0.3\).AND.KSTAR\(J2\).LE.2\).OR.) N
(< *    &      KSTAR\(J2\).GE.10\) THEN) N
(< *         ADOT = 0.0) N
(< *         TBR = 1.0D+10) N
(< *     END IF) N
(---) N
(>       IF \(\(\(M2.GT.1.3.OR.M2.LT.0.3\).AND.KSTAR\(J2\).LE.2\).OR.) N
(>      &      KSTAR\(J2\).GE.10\) THEN) N
(>           ADOT = 0.0) N
(>           TBR = 1.0D+10) N
(>       END IF) N
(110c91) N
(< *       Set time-step to 1% change \(with limit of 1\) and new look-up time.) N
(---) N
(> *       Set time-step to 1% change and new look-up time \(cf. MDOT re #34\).) N
(112d92) N
(<       DT = MIN\(DT,1.0D0\)) N
(115c95,96) N
(< *       Modify new semi-major axis and eccentricity \(E_max = 0.002\).) N
(---) N
(> *       Convert from cgs to scaled units and update semi-major axis.) N
(>       ADOT = ADOT/\(1.0D+05*VSTAR\)) N
(117,118d97) N
(<       ECC1 = ECC - EDOT*DT) N
(<       ECC1 = MAX\(ECC1,0.002D0\)) N
(129a109,114) N
(> *       Form square of regularized velocity.) N
(>       V20 = 0.0) N
(>       DO 10 K = 1,4) N
(OUT) (Page 23/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           V20 = V20 + UDOT\(K,IPAIR\)**2) p n
(>    10 CONTINUE) N
(> *) N
(136,139c121,123) N
(<       RP0 = SEMI*\(1.0 - ECC\)) N
(<       QPERI = SEMI1*\(1.0 - ECC1\)) N
(<       C1 = SQRT\(QPERI/RP0\)) N
(<       C2 = SQRT\(\(BODY\(I\) + H\(IPAIR\)*QPERI\)/\(BODY\(I\) + HI*RP0\)\)) N
(---) N
(>       C2 = SQRT\(SEMI1/SEMI\)) N
(>       V2 = 0.5*\(BODY\(I\) + H\(IPAIR\)*SEMI1*\(1.0 - SQRT\(ECC2\)\)\)) N
(>       C1 = SQRT\(V2/V20\)) N
(141c125) N
(< *       Re-scale KS variables to new energy.) N
(---) N
(> *       Re-scale KS variables to new energy with constant eccentricity.) N
(145,146c129,130) N
(<           U\(K,IPAIR\) = C1*U\(K,IPAIR\)) N
(<           UDOT\(K,IPAIR\) = C2*UDOT\(K,IPAIR\)) N
(---) N
(>           U\(K,IPAIR\) = C2*U\(K,IPAIR\)) N
(>           UDOT\(K,IPAIR\) = C1*UDOT\(K,IPAIR\)) N
(149c133) N
(<           TDOT2\(IPAIR\) = TDOT2\(IPAIR\) + 2.0*U\(K,IPAIR\)*UDOT\(K,IPAIR\)) N
(---) N
(> *         TDOT2\(IPAIR\) = TDOT2\(IPAIR\) + 2.0*U\(K,IPAIR\)*UDOT\(K,IPAIR\)) N
(152,162c136,137) N
(< *       Initialize perturbed orbit.) N
(<       IF \(LIST\(1,I1\).GT.0\) THEN) N
(<           CALL RESOLV\(IPAIR,1\)) N
(<           IMOD = KSLOW\(IPAIR\)) N
(<           CALL KSPOLY\(IPAIR,IMOD\)) N
(<       END IF) N
(< *) N
(< *       Transform back to apocentre for standard perturbed motion.) N
(< *     IF \(LIST\(1,I1\).GT.0\) THEN) N
(< *         CALL KSAPO\(IPAIR\)) N
(< *     END IF) N
(---) N
(> *       Transform back to apocentre for standard unperturbed motion.) N
(>       CALL KSAPO\(IPAIR\)) N
(169c144) N
(<               WRITE \(6,25\)  TIME, IPAIR, M2, R2, TGR, R\(IPAIR\),) N
(---) N
(>               WRITE \(6,25\)  TIME, IPAIR, M2, R2, TBR, TGR, R\(IPAIR\),) N
(171,172c146,147) N
(<    25         FORMAT \(' BRAKE    T KS M2 R2 TGR R RCOLL ',) N
(<      &                           F10.4,I4,F6.2,F7.3,1P,E9.1,2E10.2\)) N
(---) N
(>    25         FORMAT \(' BRAKE    T KS M2 R2 TBR TGR R RCOLL ',) N
(>      &                           F10.4,I4,F6.2,F7.3,1P,2E9.1,2E10.2\)) N
(203,205c178,180) N
(<      &                  ECC1, SEMI1, R\(IPAIR\), RCOLL, TK) N
(<    30     FORMAT \(' END BRAKE    T NAM K* EF AF R RCOLL P ',) N
(<      &                           F10.4,2I6,2I4,F7.3,1P,4E9.1\)) N
(---) N
(>      &                  M2, R2, TBR, TGR, R\(IPAIR\), RCOLL, TK) N
(>    30     FORMAT \(' END BRAKE    T NAM K* M2 R2 TBR TGR R RCOLL P ',) N
(>      &                           F10.4,2I6,2I4,F6.2,F7.3,1P,5E9.1\)) N
(215a191) N
(> ) N
(1,2c1,2) N
(< 1398 1999-11-03 09:53 /work/Umi2/spurzem/5/nbody6compare/cfuncs.f) N
(< nbody6compare/cfuncs.f) N
(---) N
(> 1398 1999-11-03 09:53 /work/Umi2/spurzem/5/nbody6++compare/cfuncs.f) N
(> nbody6++compare/cfuncs.f) N
(1,2c1,2) N
(< 22521 2006-09-08 12:34 /work/Umi2/spurzem/5/nbody6compare/chain.f) N
(OUT) (Page 24/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (12/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (25-26) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< nbody6compare/chain.f) p n
(---) N
(> 21872 2005-03-09 22:47 /work/Umi2/spurzem/5/nbody6++compare/chain.f) N
(> nbody6++compare/chain.f) N
(12a13,15) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(30d32) N
(<       COMMON/SWCALL/ NCALL) N
(107c109) N
(<       DO 2 J = 1,10) N
(---) N
(>       DO 1 J = 1,10) N
(127d128) N
(<       NCALL = 0) N
(150d150) N
(<           RCOLL = 0.0) N
(232,233c232,233) N
(<       GCRIT = 1.0D-05) N
(<       IF \(N.GT.4\) GCRIT = 5.0D-06) N
(---) N
(>       GCRIT = 5.0D-05) N
(>       IF \(N.GT.4\) GCRIT = 1.0D-05) N
(236c236,237) N
(<           WRITE \(6,15\)  N, NPERT, ENERGY, RSUM, RGRAV, TCR, RMAXS\(ISUB\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,15\)  N, NPERT, ENERGY, RSUM, RGRAV, TCR, RMAXS\(ISUB\),) N
(372c373) N
(<           WRITE \(6,*\) ' Stepsize = 0!', char\(7\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(6,*\) ' Stepsize = 0!', char\(7\)) N
(376c377) N
(<       IF \(KZ30.GT.2\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ30.GT.2\) THEN) N
(381c382) N
(< *       Determine two-body distances for stability test and collision search.) N
(---) N
(> *       Update sum of 1/R^2 during forward integration \(R^2 before 12/99\).) N
(386c387) N
(< *       Find minimum separation for stability test and save chain index.) N
(---) N
(> *       Find minimum separation and chain index.) N
(393d393) N
(< *       Update sum of 1/R^2 during forward integration \(R^2 before 12/99\).) N
(400c400) N
(< *       Set search distance for closest separation.) N
(---) N
(> *       Specify search distance of two closest particles \(2 x 4*r_max\).) N
(403,424c403,409) N
(<           SX = MAX\(SIZE\(I1\),SIZE\(I2\)\)) N
(< *       Turn off circular orbit indicators for overlapping stars.) N
(<           IF \(IMCIRC.GT.0\) THEN) N
(<               IF \(RM.LT.2.0*SX\) THEN) N
(<                   SX = 0.5*RM) N
(<                   NCIRC = 0) N
(<                   ISYNC = 0) N
(<                   IMCIRC = 0) N
(<               ELSE) N
(<                   SX = 0.0) N
(<               END IF) N
(<           END IF) N
(< *       See whether another star is a more likely collider \(compare SIZE/R\).) N
(<           RY = RM) N
(<           DO 36 K = 1,N-1) N
(<               IF \(K.NE.IX\) THEN) N
(<                   J1 = INAME\(K\)) N
(OUT) (Page 25/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<                   J2 = INAME\(K+1\)) p n
(<                   SY = MAX\(SIZE\(J1\),SIZE\(J2\)\)) N
(<                   IF \(SY*RINV\(K\).GT.SX/RY\) THEN) N
(<                       SX = SY) N
(<                       RY = 1.0/RINV\(K\)) N
(---) N
(>           RX = 8.0*MAX\(SIZE\(I1\),SIZE\(I2\)\)) N
(> *       Exclude circular binary from pericentre test \(N = 3 is OK\).) N
(>           IF \(IMCIRC.GT.0.AND.N.GT.3\) THEN) N
(>               RY = 0.0) N
(>               DO 36 K = 1,N-1) N
(>                   IF \(RINV\(K\).GT.RY.AND.K.NE.IMCIRC\) THEN) N
(>                       RY = RINV\(K\)) N
(426,429c411,415) N
(<               END IF) N
(<    36     CONTINUE) N
(< *       Include factor of 2 in criterion QPMIN < 4*MAX\(SIZE\(K1\),SIZE\(K2\)\).) N
(<           SX = 8.0*SX) N
(---) N
(>    36         CONTINUE) N
(>               RY = 1.0/RY) N
(>           ELSE) N
(>               RY = RM) N
(>           END IF) N
(434c420) N
(<       IF \(RY.LT.SX.AND.NSTEP1.GT.NEXT\) THEN) N
(---) N
(>       IF \(RY.LT.RX.AND.NSTEP1.GT.NEXT\) THEN) N
(439d424) N
(<                       GSAVE = GCRIT) N
(443c428) N
(<                       GCRIT = GSAVE) N
(---) N
(>                       GCRIT = 5.0D-05) N
(453d437) N
(<           IMCIRC = 0) N
(502,509c486,487) N
(<           IF \(KZ27.LE.2\) THEN) N
(<               FAC = 0.5*\(M\(J1\) + M\(J2\)\)/M\(J1\)) N
(<               RCR = 1.7*FAC**0.3333*SIZE\(J1\)) N
(<           ELSE) N
(<               CLIGHT = 3.0D+05/VSTAR1) N
(<               RCR = 6.0*\(M\(J1\) + M\(J2\)\)/CLIGHT**2) N
(<           END IF) N
(< *) N
(---) N
(>           FAC = 0.5*\(M\(J1\) + M\(J2\)\)/M\(J1\)) N
(>           RCR = 1.7*FAC**0.3333*SIZE\(J1\)) N
(591,592c569,570) N
(< *       Check termination or strong perturbation \(T > TMAX or GPERT > 0.01\).) N
(<       IF \(\(CHTIME.GT.TMAX\).OR.GPERT.GT.0.01\) THEN) N
(---) N
(> *       Check termination criteria \(T > TMAX or RSUM > RMAXC\).) N
(>       IF \(\(CHTIME.GT.TMAX\).OR.\(RSUM.GT.RMAXC\).OR.GPERT.GT.0.01\) THEN) N
(597c575) N
(<           IF \(KZ30.GT.2\) THEN) N
(---) N
(>           IF \(rank.eq.0.and.KZ30.GT.2\) THEN) N
(602,603c580) N
(< *       Avoid checking after switch \(just in case\).) N
(<           IF \(ISW.EQ.0\) THEN) N
(---) N
(>           IF \(ISW.EQ.0.AND.\(RSUM.GT.RMAXC.OR.GPERT.GT.0.01\)\) THEN) N
(675c652) N
(<       IF \(KZ30.GT.1.AND.QPERI.LT.1.0\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ30.GT.1.AND.QPERI.LT.1.0\) THEN) N
(686a664) N
(> ) N
(OUT) (Page 26/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (13/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (27-28) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1,2c1,2) p n
(< 1368 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/chdata.f) N
(< nbody6compare/chdata.f) N
(---) N
(> 1369 2001-08-04 17:17 /work/Umi2/spurzem/5/nbody6++compare/chdata.f) N
(> nbody6++compare/chdata.f) N
(43a44) N
(> ) N
(1,2c1,2) N
(< 3947 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/check.f) N
(< nbody6compare/check.f) N
(---) N
(> 4180 2001-08-06 16:32 /work/Umi2/spurzem/5/nbody6++compare/check.f) N
(> nbody6++compare/check.f) N
(22a23) N
(>               if\(rank.eq.0\)then) N
(25a27) N
(>               end if) N
(44a47) N
(>           if\(rank.eq.0\)then) N
(46a50) N
(>           end if) N
(65a70) N
(>       if\(rank.eq.0\)then) N
(68a74) N
(>       end if) N
(83a90) N
(>           if\(rank.eq.0\)then) N
(84a92) N
(>           end if) N
(94a103) N
(>               if\(rank.eq.0\)then) N
(95a105) N
(>               end if) N
(1,2c1,2) N
(< 10001 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/checkl.f) N
(< nbody6compare/checkl.f) N
(---) N
(> 10002 2000-07-26 04:59 /work/Umi2/spurzem/5/nbody6++compare/checkl.f) N
(> nbody6++compare/checkl.f) N
(317a318) N
(> ) N
(1,2c1,2) N
(< 680 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/chfind.f) N
(< nbody6compare/chfind.f) N
(---) N
(> 680 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/chfind.f) N
(> nbody6++compare/chfind.f) N
(1,2c1,2) N
(< 5653 2004-05-13 10:27 /work/Umi2/spurzem/5/nbody6compare/chfirr.f) N
(< nbody6compare/chfirr.f) N
(---) N
(> 5734 2005-03-09 18:58 /work/Umi2/spurzem/5/nbody6++compare/chfirr.f) N
(> nbody6++compare/chfirr.f) N
(9c9,10) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(41c42,43) N
(< *         CALL KSRES2\(JP,J1,J2,RIJ2\)) N
(---) N
(> *         IZZ = KVEC\(JP\)) N
(> *         CALL KSRES2\(JP,J1,J2,RIJ2,IZZ\)) N
(1,2c1,2) N
(< 5201 2005-09-29 14:21 /work/Umi2/spurzem/5/nbody6compare/chinit.f) N
(< nbody6compare/chinit.f) N
(---) N
(> 5292 2002-07-12 20:03 /work/Umi2/spurzem/5/nbody6++compare/chinit.f) N
(OUT) (Page 27/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> nbody6++compare/chinit.f) p n
(8c8,9) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMX4=4*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(143c144) N
(< *       Check next treatment time of perturbers.) N
(---) N
(> *       Check next treatment time of perturbers & output time.) N
(145a147) N
(>       TMAX = MIN\(TMAX,TADJ - TIME\)) N
(164a167) N
(> ) N
(1,2c1,2) N
(< 2395 2006-09-04 10:37 /work/Umi2/spurzem/5/nbody6compare/chlist.f) N
(< nbody6compare/chlist.f) N
(---) N
(> 2448 2000-07-26 04:59 /work/Umi2/spurzem/5/nbody6++compare/chlist.f) N
(> nbody6++compare/chlist.f) N
(9c9,10) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(74a76) N
(> ) N
(1,2c1,2) N
(< 20406 2006-09-08 12:35 /work/Umi2/spurzem/5/nbody6compare/chmod.f) N
(< nbody6compare/chmod.f) N
(---) N
(> 17089 2003-06-25 20:39 /work/Umi2/spurzem/5/nbody6++compare/chmod.f) N
(> nbody6++compare/chmod.f) N
(30c30) N
(< *       Identify the dominant perturber \(skip if none or NN >= 6\).) N
(---) N
(> *       Identify the dominant perturber \(skip if none or NN >= 4\).) N
(34c34) N
(<       IF \(NNB.EQ.0.OR.NN.GE.6\) GO TO 10) N
(---) N
(>       IF \(NNB.EQ.0.OR.NN.GE.5\) GO TO 10) N
(36c36) N
(<       DO 2 L = 2,NNB+1) N
(---) N
(>       DO 5 L = 2,NNB+1) N
(46c46) N
(<     2 CONTINUE) N
(---) N
(>     5 CONTINUE) N
(53c53) N
(< *       Check for rejection \(RIJ > 3*MIN\(RSUM,RMIN\); RDOT > 0 & G < 0.05\).) N
(---) N
(> *       Check for rejection \(RIJ > 2*MIN\(RSUM,RMIN\); RDOT > 0 & G < 0.05\).) N
(55,89c55) N
(< *) N
(< *       Include test on fast escaper approaching a perturber having RDOT > 0.) N
(<       IF \(GPERT.GT.0.05.AND.RDOT.GT.0\) THEN) N
(< *       Bypass test and repeated diagnostics for large perturbation.) N
(<           IF \(GPERT.GT.0.5\) GO TO 5) N
(<           RDX = 0.0) N
(<           L = 0) N
(< *       Evaluate actual distance and relative radial velocity of end member.) N
(<     3     RJX2 = \(XCH\(L+1\) - X\(1,JCLOSE\)\)**2 +) N
(<      &           \(XCH\(L+2\) - X\(2,JCLOSE\)\)**2 +) N
(<      &           \(XCH\(L+3\) - X\(3,JCLOSE\)\)**2) N
(<           RDI = \(XCH\(L+1\) - X\(1,JCLOSE\)\)*\(VCH\(L+1\) - XDOT\(1,JCLOSE\)\) +) N
(<      &          \(XCH\(L+2\) - X\(2,JCLOSE\)\)*\(VCH\(L+2\) - XDOT\(2,JCLOSE\)\) +  ) N
(<      &          \(XCH\(L+3\) - X\(3,JCLOSE\)\)*\(VCH\(L+3\) - XDOT\(3,JCLOSE\)\)) N
(< *       See whether any chain member is approaching the intruder.) N
(OUT) (Page 28/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (14/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (29-30) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           IF \(RDI.LT.0.0\) THEN) p n
(<               RJX = SQRT\(RJX2\)) N
(<               RDX = RDI/RJX) N
(<           END IF) N
(< *       Consider the last chain member similarly.) N
(<           IF \(L.EQ.0\) THEN) N
(<               L = 3*\(NN - 1\)) N
(<               GO TO 3) N
(<           END IF) N
(< *       Bypass RDOT < 0 test for approaching ejection candidate.) N
(<           IF \(RDX.LT.0.0.AND.RJX.LT.2.0*RSUM/FLOAT\(NN-1\)\) THEN) N
(<               WRITE \(6,4\)  NAME\(JCLOSE\), GPERT, RIJ, RJX, RDX) N
(<     4         FORMAT \(' TRY ABSORB    NAM PERT RIJ RJX RDX ',) N
(<      &                                I6,F6.2,1P,4E9.1\)) N
(<               GO TO 5) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       Include conditions for skipping \(large RIJ & size or small GPERT\).) N
(<       IF \(RIJ.GT.3.0*MIN\(RSUM,RMIN\)\) GO TO 10) N
(---) N
(>       IF \(RIJ.GT.3.0*MIN\(RSUM,RMIN\).OR.NAME\(JCLOSE\).LT.0\) GO TO 10) N
(92,94c58) N
(< *       Allow triple hierarchy subject to maximum membership of 6.) N
(<     5 IF \(NN.GT.3.AND.NAME\(JCLOSE\).LT.0\) GO TO 10) N
(<       IF \(NN.GT.4.AND.JCLOSE.GT.N\) GO TO 10) N
(---) N
(>       IF \(RSUM+RIJ.GT.2.0*RMIN\) GO TO 10) N
(105,106c69,70) N
(< *       Widen the impact parameter test to be on safe side.) N
(<       IF \(PMIN.GT.1.5*RSUM.AND.GPERT.LT.0.05\) GO TO 10) N
(---) N
(>       IF \(PMIN.GT.RSUM.AND.GPERT.LT.0.4\) GO TO 10) N
(>       IF \(NN.GE.4.AND.JCLOSE.GT.N\) GO TO 10) N
(108,111c72,75) N
(< *       Delay accepting very small binary \(suppressed; eccentricity effect\).) N
(< *     IF \(JCLOSE.GT.N.AND.GPERT.LT.0.25\) THEN) N
(< *         IF \(100.0*R\(JCLOSE-N\).LT.RIJ\) GO TO 10) N
(< *     END IF) N
(---) N
(> *       Delay accepting very small binary.) N
(>       IF \(JCLOSE.GT.N.AND.GPERT.LT.0.4\) THEN) N
(>           IF \(100.0*R\(JCLOSE-N\).LT.RIJ\) GO TO 10) N
(>       END IF) N
(132,141c96,99) N
(<           IF \(KZ\(30\).GT.1\) THEN) N
(<               IF \(JCLOSE.GT.N\) THEN) N
(<                   SEMI = -0.5*BODY\(JCLOSE\)/H\(JCLOSE-N\)) N
(<               ELSE) N
(<                   SEMI = 0.0) N
(<               END IF) N
(<               WRITE \(6,6\)  NSTEP1, JCLOSE, NAME\(JCLOSE\), GPERT, RIJ,) N
(<      &                     RSUM, PMIN, SEMI) N
(<     6         FORMAT \(' ABSORB:    # JCLOSE NMJ GPERT RIJ RSUM PMIN A ',) N
(<      &                             3I6,F6.2,1P,4E9.1\)) N
(---) N
(>           IF \(rank.eq.0.and.KZ\(30\).GT.1\) THEN) N
(>               WRITE \(6,6\)  JCLOSE, NAME\(JCLOSE\), GPERT, RIJ, RSUM, PMIN) N
(>     6         FORMAT \(' ABSORB:    JCLOSE NMJ GPERT RIJ RSUM PMIN ',) N
(>      &                             2I6,F6.2,1P,3E9.1\)) N
(153,156c111) N
(<               GCRIT = 1.0E-05) N
(<               NEW = NN + 1) N
(<               IF \(JCLOSE.GT.N\) NEW = NEW + 1) N
(<               IF \(NEW.GE.4\) GCRIT = 5.0D-06) N
(---) N
(>               GCRIT = 5.0E-05) N
(169c124) N
(<               IF \(RM.LT.SMALL.AND.SEMI.LT.SMALL\) THEN) N
(OUT) (Page 29/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>               IF \(rank.eq.0.and.RM.LT.SMALL.AND.SEMI.LT.SMALL\) THEN) N
(226,254d180) N
(< *       Try escape check if middle distance is largest.) N
(<       IF \(KCASE.EQ.0.AND.NN.GE.5.AND.) N
(<      &    1.0/RINV\(ISORT\(1\)\).GT.2.0*RMIN\) THEN) N
(<           R1 = 1.0/RINV\(1\)) N
(<           R2 = 1.0/RINV\(NN-1\)) N
(< *       Set relevant indices for beginning or end of chain.) N
(<           IF \(R1.GT.R2\) THEN) N
(<               IESC = INAME\(1\)) N
(<               JX = INAME\(2\)) N
(<               IB = 1) N
(<               ISORT\(1\) = 1) N
(<               R3 = 1.0/RINV\(2\)) N
(<           ELSE) N
(<               IESC = INAME\(NN\)) N
(<               JX = INAME\(NN-1\)) N
(<               IB = NN - 1) N
(<               ISORT\(1\) = NN - 1) N
(<               R3 = 1.0/RINV\(NN-2\)) N
(<           END IF) N
(< *       Define binary indices for large second separation.) N
(<           IF \(R3.GT.MAX\(R1,R2\)\) THEN) N
(<               JESC = JX) N
(<               IBIN = IB) N
(<               KCASE = 2) N
(<           ELSE) N
(<               KCASE = 1) N
(<           END IF) N
(<       END IF) N
(< *) N
(258c184) N
(<       IF \(KZ\(30\).GT.2\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.2\) THEN) N
(261c187) N
(<    12     FORMAT \(' CHMOD:    IESC JESC # ISORT1 R ',2I3,I6,I3,1P,5E9.1\)) N
(---) N
(>    12     FORMAT \(' CHMOD:    IESC JESC # ISORT1 R ',2I3,I5,I3,1P,5E9.1\)) N
(280,290c206,207) N
(< *       Consider removal of outermost particle instead if binary is wide.) N
(<           IF \(RB.GT.0.25*RJB\) THEN) N
(< *       Change pointer to end of chain and redefine IESC.) N
(<               IF \(ISORT\(1\).EQ.2\) THEN) N
(<                   ISORT\(1\) = 1) N
(<               ELSE) N
(<                   ISORT\(1\) = NN - 1) N
(<               END IF) N
(<               IESC = JESC) N
(<               GO TO 30) N
(<           END IF) N
(---) N
(> *       Consider single particle for separation ratio > 1/4.) N
(>           IF \(RB.GT.0.25*RJB\) GO TO 30) N
(291a209) N
(>           RB = 0.0) N
(314c232) N
(< *       Adopt arithmetic mean of RSUM and RMAXS for delaying escape.) N
(---) N
(> *       Adopt harmonic mean of RSUM and RMAXS for delaying escape.) N
(317c235) N
(<       IM = ISORT\(1\)) N
(---) N
(>       IM = ISORT\(1\)  ) N
(340,342c258,261) N
(<               ELSE IF \(GB.LT.0.01.AND.NCH.GT.4.AND.) N
(<      &                 \(RDOT**2.GT.BODY\(ICH\)/RI.OR.RI.GT.RMIN\)\) THEN) N
(<                   WRITE \(6,28\)  IESC, JESC, NAMEC\(IESC\), NAMEC\(JESC\),) N
(OUT) (Page 30/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (15/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (31-32) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>               ELSE IF \(GB.LT.0.001.AND.NCH.GT.4.AND.) N
(>      &                 RDOT**2.GT.BODY\(ICH\)/RI\) THEN) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,28\)  IESC, JESC, NAMEC\(IESC\), NAMEC\(JESC\),) N
(362,374c281,285) N
(<               HI = 0.5*RDOT**2 - BODY\(ICH\)/RI) N
(<               IF \(HI.GT.0.0\) THEN) N
(<                   VINF = SQRT\(2.0*HI\)*VSTAR) N
(<               ELSE) N
(<                   VINF = 0.0) N
(<               END IF) N
(<               IF \(KZ\(30\).GT.1.OR.VINF.GT.1.0\) THEN) N
(<                   WRITE \(6,28\)  IESC, JESC, NAMEC\(IESC\), NAMEC\(JESC\),) N
(<      &                          RI, RDOT**2, 2.0*BODY\(ICH\)/RI, RB, VINF) N
(<    28             FORMAT \(' CHAIN ESCAPE:    IESC JESC NM RI RDOT2 ',) N
(<      &                                      '2*M/R RB VINF ',) N
(<      &                                       2I3,2I6,1P,4E9.1,0P,F6.1\)) N
(<               END IF) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &         WRITE \(6,28\)  IESC, JESC, NAMEC\(IESC\), NAMEC\(JESC\),) N
(>      &                      RI, RDOT**2, 2.0*BODY\(ICH\)/RI, RB) N
(>    28         FORMAT \(' CHAIN ESCAPE:    IESC JESC NM RI RDOT2 2*M/R ',) N
(>      &                                   'RB',I4,I3,2I6,1P,4E9.1\)) N
(398d308) N
(<       RB = 0.0) N
(405c315) N
(< *       Note that arithmetic mean tends to delay escape.) N
(---) N
(> *       Note that harmonic mean tends to delay escape.) N
(420,421c330) N
(<               IF \(\(ER.LT.0.0.AND.RX.LT.MIN\(2.0*RSUM,2.0*RMIN\)\).OR.) N
(<      &            \(NN.EQ.3.AND.GI.GT.0.1\)\) THEN) N
(---) N
(>               IF \(ER.LT.0.0.AND.RX.LT.2.0*RSUM\) THEN) N
(438,440c347,350) N
(<                       IF \(RY.LT.0.9*SEMI.AND.RI.LT.2.0*RMIN\) THEN) N
(<                           WRITE \(6,31\)  NSTEP1, RY/SEMI, RI, RDOT**2,) N
(<      &                                  2.0*BODY\(ICH\)/RI, SEMI) N
(---) N
(>                       IF \(RY.LT.0.9*SEMI\) THEN) N
(> *                         if\(rank.eq.0\)) N
(> *    &                     WRITE \(6,31\)  NSTEP1, RY/SEMI, RI, RDOT**2,) N
(> *    &                                  2.0*BODY\(ICH\)/RI, SEMI) N
(490,494c400,405) N
(<               IF \(RY.LT.0.9*SEMI.AND.RI.LT.2.0*RMIN\) THEN) N
(<                   WRITE \(6,31\)  NSTEP1, RY/SEMI, RI, RDOT**2,) N
(<      &                          2.0*BODY\(ICH\)/RI, SEMI) N
(<    31             FORMAT \(' CHAIN DELAY    # R/A RI RD2 VP2 A ',) N
(<      &                                     I5,F6.2,1P,4E9.1\)) N
(---) N
(>               IF \(RY.LT.0.9*SEMI\) THEN) N
(> *                 if\(rank.eq.0\)) N
(> *    &            WRITE \(6,31\)  NSTEP1, RY/SEMI, RI, RDOT**2,) N
(> *    &                          2.0*BODY\(ICH\)/RI, SEMI) N
(> *  31             FORMAT \(' CHAIN DELAY    # R/A RI RD2 VP2 A ',) N
(> *    &                                     I5,F6.2,1P,4E9.1\)) N
(514c425) N
(<           IF \(KZ\(30\).GT.1.OR.VINF.GT.2.0\) THEN) N
(---) N
(>           IF \(rank.eq.0.and.KZ\(30\).GT.1.OR.VINF.GT.10.0\) THEN) N
(542a454) N
(> ) N
(1,2c1,2) N
(< 1476 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/chpot.f) N
(< nbody6compare/chpot.f) N
(---) N
(> 1476 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/chpot.f) N
(OUT) (Page 31/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> nbody6++compare/chpot.f) p n
(1,2c1,2) N
(< 6178 2003-05-10 16:16 /work/Umi2/spurzem/5/nbody6compare/chstab.f) N
(< nbody6compare/chstab.f) N
(---) N
(> 6388 2005-03-09 22:48 /work/Umi2/spurzem/5/nbody6++compare/chstab.f) N
(> nbody6++compare/chstab.f) N
(12a13,15) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(112c115) N
(< *       Construct the Runge-Lenz vector \(Heggie & Rasio 1995, Eq.\(5\)\).) N
(---) N
(> *       Construct the Runge-Lenz vector \(Heggie & Rasio 1996, Eq.\(5\)\).) N
(152c155,156) N
(<           WRITE \(6,20\)  NAMEC\(I1\), NAMEC\(I2\), NAMEC\(I3\), ECC, EMAX,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  NAMEC\(I1\), NAMEC\(I2\), NAMEC\(I3\), ECC, EMAX,) N
(159c163,164) N
(<           WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), Q0, ECC, EMAX, ECC1,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), Q0, ECC, EMAX, ECC1,) N
(170c175,176) N
(<               WRITE \(6,40\)  ECC, ECC1, ALPHA, RB, R3, PCRIT, PMIN, APO) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,40\)  ECC, ECC1, ALPHA, RB, R3, PCRIT, PMIN, APO) N
(183a190,191) N
(> ) N
(> ) N
(1,2c1,2) N
(< 15545 2006-09-04 10:35 /work/Umi2/spurzem/5/nbody6compare/chterm.f) N
(< nbody6compare/chterm.f) N
(---) N
(> 14439 2003-06-25 21:03 /work/Umi2/spurzem/5/nbody6++compare/chterm.f) N
(> nbody6++compare/chterm.f) N
(33c33) N
(< *       Prepare KS regularization\(s\) and direct integration of other bodies.) N
(---) N
(> *       Prepare KS regularization and direct integration of any other bodies.) N
(39d38) N
(<       I6 = 0) N
(46c45) N
(<       ELSE IF \(NCH.EQ.4\) THEN) N
(---) N
(>       ELSE) N
(48,72c47,48) N
(<       ELSE IF \(NCH.GT.4\) THEN) N
(< *       Determine indices for second closest pair.) N
(<           RX1 = 1.0) N
(<           RX0 = R2\(I1,I2\)) N
(<           DO 2 J1 = 1,NCH) N
(< *       Avoid choosing close pair I1-I2.) N
(<               IF \(J1.EQ.I1.OR.J1.EQ.I2\) GO TO 2) N
(<               DO 1 J2 = J1+1,NCH) N
(<                   IF \(J2.EQ.I1.OR.J2.EQ.I2\) GO TO 1) N
(<                   IF \(R2\(J1,J2\).LT.RX1.AND.R2\(J1,J2\).GT.RX0\) THEN) N
(<                       RX1 = R2\(J1,J2\)) N
(<                       I3 = J1) N
(<                       I4 = J2) N
(<                   END IF) N
(<     1         CONTINUE) N
(<     2     CONTINUE) N
(< *       Identify remaining single particle\(s\) by exclusion.) N
(<           DO 3 I = 1,NCH) N
(<               IF \(I.EQ.I1.OR.I.EQ.I2.OR.I.EQ.I3.OR.I.EQ.I4\) GO TO 3) N
(OUT) (Page 32/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (16/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (33-34) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               IF \(I5.EQ.0\) THEN) p n
(<                   I5 = I) N
(<               ELSE ) N
(<                   I6 = I) N
(<               END IF) N
(<     3     CONTINUE) N
(---) N
(>           I5 = I4) N
(>           IF \(NCH.EQ.5\) I5 = IJ\(5\)) N
(74,75d49) N
(<       IF \(I5.EQ.0\) I5 = I4) N
(<       IF \(I6.EQ.0\) I6 = I4) N
(77,78c51,52) N
(<       IF \(KZ\(30\).GT.1\) THEN) N
(<           WRITE \(6,4\)  SQRT\(R2\(I1,I2\)\), SQRT\(R2\(I1,I3\)\),SQRT\(R2\(I2,I3\)\),) N
(---) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.2\) THEN) N
(>           WRITE \(6,1\)  SQRT\(R2\(I1,I2\)\), SQRT\(R2\(I1,I3\)\),SQRT\(R2\(I2,I3\)\),) N
(80c54) N
(<     4     FORMAT \(' CHTERM:   RIJ \(1-2 1-3 2-3 2-4 3-4\)  ',1P,5E9.1\)) N
(---) N
(>     1     FORMAT \(' CHTERM:   RIJ \(1-2 1-3 2-3 2-4 3-4\)  ',1P,5E9.1\)) N
(88d61) N
(<       IF \(NCH.EQ.6\) JLIST\(11\) = NAMEC\(I6\)) N
(128a102,110) N
(> *       Predict current X & XDOT for c.m. and neighbours to order F3DOT.) N
(>       CALL XVPRED\(ICM,-1\)) N
(>       NNB1 = LIST\(1,ICH\) + 1) N
(>       DO 25 L = 2,NNB1) N
(> *       Note possibility T0\(J\) = TIME in routine REDUCE would skip on -2.) N
(>           J = LIST\(L,ICH\)) N
(>           CALL XVPRED\(J,-1\)) N
(>    25 CONTINUE) N
(> *) N
(131a114,115) N
(> *       Note TBLOCK = TPREV set in REDUCE which can precede termination.) N
(>       IF \(DT8.EQ.0.0D0\) DT8 = STEP\(ICM\)/8.0D0) N
(151c135) N
(< *       Restrict TIME to current block-step and save for use by KSPERI.) N
(---) N
(> *       Include safety check just in case and save TIME for possible reset.) N
(154,162c138) N
(< *) N
(< *       Predict current X & XDOT for c.m. and neighbours to order F3DOT.) N
(<       CALL XVPRED\(ICM,-1\)) N
(<       NNB1 = LIST\(1,ICH\) + 1) N
(<       DO 25 L = 2,NNB1) N
(< *       Note possibility T0\(J\) = TIME in routine REDUCE would skip on -2.) N
(<           J = LIST\(L,ICH\)) N
(<           CALL XVPRED\(J,-1\)) N
(<    25 CONTINUE) N
(---) N
(>       IF \(NSTEP1.GE.50000\) TBLOCK = TPREV) N
(171,176c147,151) N
(<       JLIST\(7\) = I1) N
(<       JLIST\(8\) = I2) N
(<       JLIST\(9\) = I3) N
(<       JLIST\(10\) = I4) N
(<       JLIST\(11\) = I5) N
(<       JLIST\(12\) = I6) N
(---) N
(>       JLIST\(6\) = I1) N
(>       JLIST\(7\) = I2) N
(>       JLIST\(8\) = I3) N
(>       JLIST\(9\) = I4) N
(>       JLIST\(10\) = I5) N
(189c164) N
(<           LL = JLIST\(L+6\)) N
(---) N
(OUT) (Page 33/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           LL = JLIST\(L+5\)) p n
(239,240c214,215) N
(< *       Set JLIST\(7\) < 0 to denote that body #I3 & I4 will be new KS pair.) N
(<                   JLIST\(7\) = -1) N
(---) N
(> *       Set JLIST\(6\) < 0 to denote that body #I3 & I4 will be new KS pair.) N
(>                   JLIST\(6\) = -1) N
(264c239) N
(< *       Assign new neighbours for dominant KS and any other members.) N
(---) N
(> *       Assign new neighbours for dominant KS, I3 & I4.) N
(265a241,242) N
(>       J3 = JLIST\(3\)) N
(>       J4 = JLIST\(4\)) N
(267,270c244,245) N
(<       DO 65 L = 3,NCH) N
(<           J = JLIST\(L\)) N
(<           CALL NBLIST\(J,RS0\)) N
(<    65 CONTINUE) N
(---) N
(>       IF \(NCH.GT.2\) CALL NBLIST\(J3,RS0\)) N
(>       IF \(NCH.GT.3\) CALL NBLIST\(J4,RS0\)) N
(280c255) N
(<           IF \(NCH.EQ.3\) JLIST\(2\) = MAX\(IFIRST + 4,JLIST\(1\) + 1\)) N
(---) N
(>           IF \(NCH.EQ.3\) JLIST\(2\) = JCLOSE) N
(286c261) N
(<           JLIST\(1\) = MAX\(IFIRST + 4,JCOMP + 1\)) N
(---) N
(>           JLIST\(1\) = JCLOSE) N
(291,294c266,267) N
(<       IF \(NCH.GE.3\) THEN) N
(<           CALL FCLOSE\(ICOMP,NNB\)) N
(<           CALL FCLOSE\(JCOMP,NNB\)) N
(<       END IF) N
(---) N
(>       CALL FCLOSE\(ICOMP,NNB\)) N
(>       CALL FCLOSE\(JCOMP,NNB\)) N
(310,311c283) N
(<       IF \(NCH.GE.5\) I5 = JLIST\(5\)) N
(<       IF \(NCH.EQ.6\) I6 = JLIST\(6\)) N
(---) N
(>       IF \(NCH.EQ.5\) I5 = JLIST\(5\)) N
(337c309) N
(<               IF \(NCH.GE.5.AND.I5.GT.0\) THEN) N
(---) N
(>               IF \(NCH.EQ.5.AND.I5.GT.0\) THEN) N
(340,343d311) N
(<                   IF \(NCH.EQ.6\) THEN) N
(<                       CALL FPOLY1\(I6,I6,0\)) N
(<                       CALL FPOLY2\(I6,I6,0\)) N
(<                   END IF) N
(355,356c323,324) N
(< *       Include initialization of #I5/I6 before KS calls change address.) N
(<       ELSE IF \(NCH.GE.5.AND.I5.GT.0\) THEN) N
(---) N
(> *       Include initialization of 5th body before KS calls change address.) N
(>       ELSE IF \(NCH.EQ.5.AND.I5.GT.0\) THEN) N
(359,362d326) N
(<           IF \(NCH.EQ.6\) THEN) N
(<               CALL FPOLY1\(I6,I6,0\)) N
(<               CALL FPOLY2\(I6,I6,0\)) N
(<            END IF) N
(397c361) N
(<       IF \(KZ\(30\).GT.1\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.1\) THEN) N
(420c384) N
(<           IF \(KZ\(30\).GT.1\) THEN) N
(OUT) (Page 34/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (17/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (35-36) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>           IF \(rank.eq.0.and.KZ\(30\).GT.1\) THEN) N
(485a450,451) N
(> ) N
(> ) N
(1,2c1,2) N
(< 1654 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/clint.f) N
(< nbody6compare/clint.f) N
(---) N
(> 1654 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/clint.f) N
(> nbody6++compare/clint.f) N
(1,2c1,2) N
(< 2243 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cloud0.f) N
(< nbody6compare/cloud0.f) N
(---) N
(> 2331 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/cloud0.f) N
(> nbody6++compare/cloud0.f) N
(0a1,4) N
(> # 1 "cloud0.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "cloud0.F") N
(4,5c8,9) N
(< *       Cloud initialization.) N
(< *       ---------------------) N
(---) N
(> * Cloud initialization.) N
(> * ---------------------) N
(8,10c12,14) N
(<       COMMON/CLOUDS/  XCL\(3,MCL\),XDOTCL\(3,MCL\),BODYCL\(MCL\),RCL2\(MCL\),) N
(<      &                CLM\(MCL\),CLMDOT\(MCL\),CLDOT,VCL,SIGMA,RB2,PCL2,) N
(<      &                TCL,STEPCL,NCL,NEWCL) N
(---) N
(>       COMMON/CLOUDS/ XCL\(3,MCL\),XDOTCL\(3,MCL\),BODYCL\(MCL\),RCL2\(MCL\),) N
(>      & CLM\(MCL\),CLMDOT\(MCL\),CLDOT,VCL,SIGMA,RB2,PCL2,) N
(>      & TCL,STEPCL,NCL,NEWCL) N
(11a16) N
(> # 21 "cloud0.F") N
(13c18) N
(< *       Initialize cloud variables.) N
(---) N
(> * Initialize cloud variables.) N
(19,23c24,40) N
(< *) N
(< *       Read the cloud parameters.) N
(<       READ \(5,*\)  NCL, RB2, VCL, SIGMA, \(CLM\(J\),J=1,NCL\),) N
(<      &            \(RCL2\(J\),J=1,NCL\)) N
(<       WRITE \(6,100\)  NCL, RB2, VCL, SIGMA) N
(---) N
(>       RB2 = 0.0) N
(>       BODYCL\(1\) = 0.0) N
(>       CLMDOT\(1\) = 0.0) N
(>       RCL2\(1\) = 0.0) N
(>       DO 10 K = 1,3) N
(>           XCL\(K,1\) = 0.0) N
(>           XDOTCL\(K,1\) = 0.0) N
(>    10 CONTINUE) N
(> *) N
(>       IF \(KZ\(13\).EQ.0\) GO TO 120) N
(> *) N
(> * Read the cloud parameters.) N
(>       if\(rank.eq.0\)) N
(>      &READ \(5,*\) NCL, RB2, VCL, SIGMA, \(CLM\(J\),J=1,NCL\),) N
(>      & \(RCL2\(J\),J=1,NCL\)) N
(> # 51 "cloud0.F") N
(>       WRITE \(6,100\) NCL, RB2, VCL, SIGMA) N
(25c42) N
(<      &    '  MEAN CLOUD VELOCITY \(KM/SEC\) =',F5.1,'  DISPERSION =',F5.1\)) N
(---) N
(OUT) (Page 35/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      & '  MEAN CLOUD VELOCITY \(KM/SEC\) =',F5.1,'  DISPERSION =',F5.1\)) p n
(28c45) N
(< *       Set cloud parameters in scaled units.) N
(---) N
(> * Set cloud parameters in scaled units.) N
(31c48) N
(< *       Rms velocity of cluster members in km/sec.) N
(---) N
(> * Rms velocity of cluster members in km/sec.) N
(33c50) N
(< *       Velocity unit.) N
(---) N
(> * Velocity unit.) N
(35c52) N
(< *       Cloud velocity in scaled units.) N
(---) N
(> * Cloud velocity in scaled units.) N
(37c54) N
(< *       Specify conservative cloud integration step using crossing time.) N
(---) N
(> * Specify conservative cloud integration step using crossing time.) N
(40,44c57) N
(< *       Adopt a quantized value.) N
(<       CALL STEPK\(STEPCL,DTN\)) N
(<       STEPCL = DTN) N
(< *) N
(< *       Scale radii & masses to model units.) N
(---) N
(> * Scale radii & masses to model units.) N
(50,51c63,64) N
(<       WRITE \(6,102\)  RB2, VCL, SIGMA, STEPCL, \(CLM\(J\),J=1,NCL\),) N
(<      &               \(RCL2\(J\),J=1,NCL\)) N
(---) N
(>       WRITE \(6,102\) RB2, VCL, SIGMA, STEPCL, \(CLM\(J\),J=1,NCL\),) N
(>      & \(RCL2\(J\),J=1,NCL\)) N
(54c67) N
(< *       Time scale for 'sun-rise' is 0.05 of the cloud crossing time.) N
(---) N
(> * Time scale for 'sun-rise' is 0.05 of the cloud crossing time.) N
(57c70) N
(< *       Define the square of cloud half-mass radii & growth times.) N
(---) N
(> * Define the square of cloud half-mass radii & growth times.) N
(63c76) N
(< *       Set square boundary radius & impact parameter.) N
(---) N
(> * Set square boundary radius & impact parameter.) N
(66c79) N
(< *       Define density centre for routine CLOUD.) N
(---) N
(> * Define density centre for routine CLOUD.) N
(71c84) N
(< *       Initialize new clouds on the boundary.) N
(---) N
(> * Initialize new clouds on the boundary.) N
(76c89) N
(<       RETURN) N
(---) N
(>   120 RETURN) N
(1,2c1,2) N
(< 2357 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cloud.f) N
(< nbody6compare/cloud.f) N
(---) N
(> 2471 2002-08-24 22:40 /work/Umi2/spurzem/5/nbody6++compare/cloud.f) N
(> nbody6++compare/cloud.f) N
(13a14,15) N
(> * recover random number sequence from COMMON variable IDUM1.) N
(>       KDUM = IDUM1) N
(20,21c22) N
(OUT) (Page 36/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (18/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (37-38) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Note that IDUM1 is saved in COMMON6 for restarts.) p n
(<           A\(K+1\) = 2.0*RAN2\(IDUM1\) - 1.0) N
(---) N
(>           A\(K+1\) = 2.0*RAN2\(KDUM\) - 1.0) N
(28,29c29,30) N
(<       RANPHI = TWOPI*RAN2\(IDUM1\)) N
(<       RANDI = SQRT\(RAN2\(IDUM1\)\)) N
(---) N
(>       RANPHI = TWOPI*RAN2\(KDUM\)) N
(>       RANDI = SQRT\(RAN2\(KDUM\)\)) N
(36c37) N
(<       IF \(KZ\(13\).GE.2\) THEN) N
(---) N
(>       IF \(KZ\(13\).NE.1.AND.KZ\(13\).NE.2\) THEN) N
(38,39c39,40) N
(<               A\(5\) = RAN2\(IDUM1\)) N
(<               A\(6\) = TWOPI*RAN2\(IDUM1\)) N
(---) N
(>               A\(5\) = RAN2\(KDUM\)) N
(>               A\(6\) = TWOPI*RAN2\(KDUM\)) N
(69a71,72) N
(> *       Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(1,2c1,2) N
(< 14979 2006-09-07 19:29 /work/Umi2/spurzem/5/nbody6compare/cmbody.f) N
(< nbody6compare/cmbody.f) N
(---) N
(> 15446 2003-07-04 19:03 /work/Umi2/spurzem/5/nbody6++compare/cmbody.f) N
(> nbody6++compare/cmbody.f) N
(82,83c82,84) N
(<                   WRITE \(6,4\)  KSPAIR, NAME\(J\), H\(KSPAIR\), ECC, A0, A1,) N
(<      &                         RP, SQRT\(ECC2\), SR) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,4\)  KSPAIR, NAME\(J\), H\(KSPAIR\), ECC, A0, A1,) N
(>      &                         RP, ECC, SR) N
(85c86) N
(<      &                            2I6,F7.0,F8.4,1P,3E9.1,0P,F6.2,F6.1\)) N
(---) N
(>      &                              2I6,F7.0,F8.4,1P,3E9.1,0PF6.2,F6.1\)) N
(101,109c102,111) N
(< *         NAM1 = NAME\(2*KSPAIR-1\)) N
(< *         NAM2 = NAME\(2*KSPAIR\)) N
(< *         NNB = LISTD\(1\)) N
(< *         DO 7 K = 2,NNB+1) N
(< *             IF \(LISTD\(K\).EQ.NAM1.OR.LISTD\(K\).EQ.NAM2\) THEN) N
(< *                 WRITE \(6,6\)  NAM1, NAM2, LISTD\(K\), K) N
(< *   6             FORMAT \(' KS REMNANT:    NAM LISTD K  ',3I6,I4\)) N
(< *             END IF) N
(< *   7     CONTINUE) N
(---) N
(>           NAM1 = NAME\(2*KSPAIR-1\)) N
(>           NAM2 = NAME\(2*KSPAIR\)) N
(>           NNB = LISTD\(1\)) N
(>           DO 7 K = 2,NNB+1) N
(>               IF \(LISTD\(K\).EQ.NAM1.OR.LISTD\(K\).EQ.NAM2\) THEN) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,6\)  NAM1, NAM2, LISTD\(K\), K) N
(>     6             FORMAT \(' KS REMNANT:    NAM LISTD K  ',3I6,I4\)) N
(>               END IF) N
(>     7     CONTINUE) N
(154,155c156,157) N
(<           IF \(NSYS.GT.4\) I5 = JLIST\(5\)) N
(< *       Note JLIST\(1->NCH\) contains global indices \(JLIST\(4\)=0 for NCH=3\).) N
(---) N
(>           I5 = JLIST\(5\)) N
(> *       Ignore case of three-body system here \(JLIST\(4\) = 0\).) N
(164a167,169) N
(> *       Set new quantized time \(note: restore if problems in CHTERM\).) N
(OUT) (Page 37/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *     TIME = TBLOCK) p n
(> *) N
(184d188) N
(<           AGE1 = MIN\(TPHYS,AGE1\)) N
(190a195) N
(>           AGE2 = TEV\(I2\)*TSTAR - EPOCH\(I2\)) N
(228,229d232) N
(< *       Ensure BH if one of components is type 14.) N
(<           IF \(KW1.EQ.14.OR.KW2.EQ.14\) KW = 14) N
(242c245,246) N
(<           WRITE \(6,15\)  NAME\(I1\), KSTAR\(I1\), TEV\(I1\)*TSTAR, M1, M2,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,15\)  NAME\(I1\), KSTAR\(I1\), TEV\(I1\)*TSTAR, M1, M2,) N
(249,256c253,257) N
(< *       Ensure the heaviest body is new progenitor.) N
(<       IF \(BODY\(I2\).GT.BODY\(I1\)\) THEN) N
(<           I1S = I1) N
(<           I1 = I2) N
(<           I2 = I1S) N
(<           ICOMP = I1) N
(<           JCOMP = I2) N
(<       END IF) N
(---) N
(> *       Copy all members of neighbour or perturber list.) N
(>       NNB = LIST\(1,I1\)) N
(>       DO 20 L = 1,NNB) N
(>           JPERT\(L\) = LIST\(L+1,I1\)) N
(>    20 CONTINUE) N
(260,264d260) N
(< *       Copy all members of neighbour list.) N
(<           NNB = LIST\(1,I1\)) N
(<           DO 20 L = 1,NNB) N
(<               JPERT\(L\) = LIST\(L+1,I1\)) N
(<    20     CONTINUE) N
(272,277c268,276) N
(< *       Obtain differential effect on #I1 & #I2 due to other members.) N
(<           DO 25 L = 3,NSYS) N
(<               JPERT\(L-2\) = JLIST\(L\)) N
(<    25     CONTINUE) N
(<           NP = NSYS - 2) N
(<           CALL NBPOT\(2,NP,POT1\)) N
(---) N
(> *       Obtain differential effect on #I1 & #I2 due to closest member #I3.) N
(>           JPERT\(1\) = I3) N
(>           CALL NBPOT\(2,1,POT1\)) N
(> *       Include possible fourth member.) N
(>           IF \(NSYS.GT.3\) THEN) N
(>               JPERT\(1\) = I4) N
(>               CALL NBPOT\(2,1,POT3\)) N
(>               POT1 = POT1 + POT3) N
(>           END IF) N
(317c316,322) N
(<           CALL NBPOT\(1,NP,POT2\)) N
(---) N
(>           JPERT\(1\) = I3) N
(>           CALL NBPOT\(1,1,POT2\)) N
(>           IF \(NSYS.GT.3\) THEN) N
(>               JPERT\(1\) = I4) N
(>               CALL NBPOT\(1,1,POT4\)) N
(>               POT2 = POT2 + POT4) N
(>           END IF) N
(323,326c328,331) N
(<       IF \(NSYS.EQ.2\) THEN) N
(<           JPERT\(1\) = I2) N
(<           JLIST\(1\) = I2) N
(<           CALL NBREM\(I1,1,NNB\)) N
(---) N
(>       JPERT\(1\) = I2) N
(OUT) (Page 38/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (19/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (39-40) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       JLIST\(1\) = I2) p n
(>       CALL NBREM\(I1,1,NNB\)) N
(> *) N
(328,330c333,334) N
(<           JPERT\(1\) = I1) N
(<           CALL NBREM\(NTOT,1,1\)) N
(<       END IF) N
(---) N
(>       JPERT\(1\) = I1) N
(>       CALL NBREM\(NTOT,1,1\)) N
(342c346) N
(<       IF \(JLIST\(7\).LT.0\) THEN) N
(---) N
(>       IF \(JLIST\(6\).LT.0\) THEN) N
(358,365d361) N
(< *       Include kick velocity on BH formation.) N
(<           IF \(KZ\(27\).EQ.2\) THEN) N
(<               KW = KSTAR\(ICOMP\)) N
(<               IF \(KW.EQ.14\) THEN) N
(<                   DM = 0.0) N
(<                   CALL FCORR\(ICOMP,DM,KW\)) N
(<               END IF) N
(<           END IF) N
(375c371) N
(< *       Initialize force polynomial for new single, third or fourth body.) N
(---) N
(> *       Initialize force polynomial for new single or third body \(ICOMP\).) N
(383,386d378) N
(<       IF \(NSYS.EQ.5\) THEN) N
(<           CALL FPOLY1\(I5,I5,0\)) N
(<           CALL FPOLY2\(I5,I5,0\)) N
(<       END IF) N
(391a384) N
(>           RCOLL = DMINC) N
(398c391) N
(< *       Copy well defined binding energy.) N
(---) N
(> *       Copy well defined binding energy and skip explicit evaluation.) N
(406d398) N
(<           EB = EBS) N
(411d402) N
(<           EB = EBS) N
(413a405,426) N
(> *       Obtain binding energy of the subsystem \(ignore ghost\).) N
(>       ZKE = 0.0D0) N
(>       POTS = 0.0D0) N
(>       DO 60 L = 1,NSYS) N
(>           I = JLIST\(L\)) N
(>           ZKE = ZKE + BODY\(I\)*\(XDOT\(1,I\)**2 + XDOT\(2,I\)**2 +) N
(>      &                                        XDOT\(3,I\)**2\)) N
(>    60 CONTINUE) N
(> *) N
(>       DO 70 L = 1,NSYS-1) N
(>           DO 65 LL = L+1,NSYS) N
(>               I = JLIST\(L\)) N
(>               J = JLIST\(LL\)) N
(>               RIJ2 = \(X\(1,I\) - X\(1,J\)\)**2 + \(X\(2,I\) - X\(2,J\)\)**2 +) N
(>      &                                      \(X\(3,I\) - X\(3,J\)\)**2) N
(>               POTS = POTS + BODY\(I\)*BODY\(J\)/SQRT\(RIJ2\)) N
(>    65     CONTINUE) N
(>    70 CONTINUE) N
(> *) N
(> *       Form net energy correction for triple or quad case.) N
(>       EB = ENERGY - \(0.5D0*ZKE - POTS\)) N
(> *) N
(430,431c443,445) N
(<       WRITE \(6,90\)  WHICH1, NSYS, NAME1, NAME2, ZM*ZMBAR, RCOLL, EB,) N
(<      &              VINF, ECC, DP) N
(---) N
(OUT) (Page 39/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       if\(rank.eq.0\)) p n
(>      &WRITE \(6,90\)  WHICH1, NSYS, NAME1, NAME2, ZM, RCOLL, EB, VINF,) N
(>      &              ECC, DP) N
(434c448) N
(<      &             '  VINF =',E9.1,'  ECC =',0P,F9.5,'  DP =',1P,E9.1\)) N
(---) N
(>      &             '  VINF =',0P,F5.1,'  ECC =',F9.5,'  DP =',1P,E9.1\)) N
(438a453,454) N
(> ) N
(> ) N
(1,2c1,2) N
(< 3313 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cmcorr.f) N
(< nbody6compare/cmcorr.f) N
(---) N
(> 3140 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/cmcorr.f) N
(> nbody6++compare/cmcorr.f) N
(53c53) N
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LE.2\) THEN) N
(---) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(55,56d54) N
(< *       Skip ghosts to avoid spurious prediction inside 1.0E+10.) N
(<               IF \(BODY\(I\).EQ.0.0D0\) GO TO 60) N
(63d60) N
(<                   FRDOT\(K,I\) = FRDOT\(K,I\) - DD) N
(1,2c1,2) N
(< 4603 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cmfirr.f) N
(< nbody6compare/cmfirr.f) N
(---) N
(> 3827 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/cmfirr.f) N
(> nbody6++compare/cmfirr.f) N
(10,11c10) N
(< *) N
(< *       Initialize the perturbing force & first derivative.) N
(---) N
(> *       Initialize the perturbing force & derivative.) N
(17d15) N
(< *       Set individual KS components and indicators for unresolved pair.) N
(20a19) N
(> *       Define indicator for summing over each KS component rather than c.m.) N
(21a21) N
(>       RPERT2 = CMSEP2*R\(IPAIR\)**2) N
(23,28c23) N
(< *       Specify perturber indices for decision-making.) N
(<       NP = LIST\(1,I1\)) N
(<       LP = 2) N
(<       JP = LIST\(2,I1\)) N
(< *) N
(< *       Perform irregular force loop for perturbed c.m.) N
(---) N
(> *       Force loop treats case I > N and any other c.m. neighbours.) N
(32,48c27,36) N
(< *       Advance lower perturber index \(includes possible old neighbour\).) N
(<     2     IF \(K.GT.JP.AND.LP.LE.NP\) THEN) N
(<               LP = LP + 1) N
(<               JP = LIST\(LP,I1\)) N
(< *       Include rare case of two consecutive previous neighbours.) N
(<               GO TO 2) N
(<           END IF) N
(< *) N
(< *       Distinguish between nearby perturber and more distant neighbour.) N
(<           IF \(K.NE.JP\) THEN) N
(<               IF \(K.LE.N\) GO TO 10) N
(< *       Check c.m. approximation \(point-mass assumption OK for #I\).) N
(<               A1 = X\(1,K\) - XI\(1\)) N
(<               A2 = X\(2,K\) - XI\(2\)) N
(<               A3 = X\(3,K\) - XI\(3\)) N
(<               RIJ2 = A1*A1 + A2*A2 + A3*A3) N
(<               IF \(RIJ2.GT.CMSEP2*R\(K-N\)**2\) GO TO 10) N
(OUT) (Page 40/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (20/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (41-42) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>           A1 = X\(1,K\) - XI\(1\)) N
(>           A2 = X\(2,K\) - XI\(2\)) N
(>           A3 = X\(3,K\) - XI\(3\)) N
(>           RIJ2 = A1*A1 + A2*A2 + A3*A3) N
(> *) N
(> *       Decide appropriate summation \(c.m. approximation or components\).) N
(>           IF \(K.LE.N\) THEN) N
(>               IF \(RIJ2.GT.RPERT2\) GO TO 10) N
(>               GO TO 3) N
(>           ELSE IF \(RIJ2.LT.CMSEP2*R\(K-N\)**2\) THEN) N
(50,65c38,41) N
(<               IF \(LIST\(1,KDUM\).EQ.0\) GO TO 10) N
(<               K = KDUM) N
(<               GO TO 10) N
(< *       Consider more carefully the case of identified perturber.) N
(<           ELSE) N
(< *       Determine next perturber index \(if any\).) N
(<               IF \(LP.LE.NP\) THEN) N
(<                   LP = LP + 1) N
(<                   JP = LIST\(LP,I1\)) N
(<               END IF) N
(< *       Specify first KS component if #JP is perturbed c.m.) N
(<               IF \(K.GT.N\) THEN) N
(<                   KDUM = 2*\(K - N\) - 1) N
(<                   IF \(LIST\(1,KDUM\).GT.0\) THEN) N
(<                       K = KDUM) N
(<                   END IF) N
(---) N
(>               IF \(LIST\(1,KDUM\).EQ.0\) THEN) N
(>                   KDUM = 0) N
(>               ELSE) N
(>                   K = KDUM) N
(68a45,47) N
(> *       Check c.m. approximation for current pair.) N
(>           IF \(RIJ2.GT.RPERT2\) GO TO 10) N
(> *) N
(70c49) N
(<           IFP = 1) N
(---) N
(>     3     IFP = 1) N
(134d112) N
(<    ) N
(1,2c1,2) N
(< 9380 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cmfreg.f) N
(< nbody6compare/cmfreg.f) N
(---) N
(> 7829 2001-08-27 15:09 /work/Umi2/spurzem/5/nbody6++compare/cmfreg.f) N
(> nbody6++compare/cmfreg.f) N
(11,12c11) N
(< *       Set non-zero indicator for perturbed c.m.) N
(<       NP = 0) N
(---) N
(> *       Adopt accurate force for perturbed c.m. particle.) N
(15c14,18) N
(<           IF \(LIST\(1,2*IPAIR-1\).GT.0\) NP = 1) N
(---) N
(>           I2 = 2*IPAIR) N
(>           I1 = I2 - 1) N
(>           RPERT2 = CMSEP2*R\(IPAIR\)**2) N
(>           BODYIN = 1.0/BODY\(I\)) N
(>           IF \(GAMMA\(IPAIR\).GE.GMIN\) GO TO 10) N
(18,19d20) N
(< *       Prepare case of single particle or unperturbed c.m. \(second call\).) N
(<       IF \(I.LE.N.OR.NP.EQ.0\) THEN) N
(21,44c22,32) N
(<           NNB1 = NPAIRS) N
(<           RMAX1 = 0.0) N
(<           DO 10 LJ = 1,NNB1) N
(OUT) (Page 41/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               JLIST\(LJ\) = N + LJ) p n
(<               RMAX1 = MAX\(RMAX1,R\(LJ\)\)) N
(<    10     CONTINUE) N
(< *) N
(< *       Adopt adequate square distance for c.m. approximation.) N
(<           RCM2 = MAX\(RCRIT2,CMSEP2*RMAX1**2\)) N
(< *       Define dummy indices for skipping perturber test.) N
(<           JP = 0) N
(<           LP = 1) N
(<           GO TO 25) N
(<       END IF) N
(< *) N
(< *       Specify variables for treatment of perturbed c.m. particle.) N
(<       I2 = 2*IPAIR) N
(<       I1 = I2 - 1) N
(<       RPERT2 = CMSEP2*R\(IPAIR\)**2) N
(<       BODYIN = 1.0/BODY\(I\)) N
(< *       Initialize perturber list for decision-making.) N
(<       NP = LIST\(1,I1\)) N
(<       LP = 2) N
(<       JP = LIST\(2,I1\)) N
(---) N
(>       NNB1 = NPAIRS) N
(>       RMAX1 = 0.0) N
(>       DO 1 LJ = 1,NNB1) N
(>           JLIST\(LJ\) = N + LJ) N
(>           RMAX1 = MAX\(RMAX1,R\(LJ\)\)) N
(>     1 CONTINUE) N
(> *) N
(> *       Set minimum square distance for c.m. approximation.) N
(>       RCM2 = MAX\(RCRIT2,CMSEP2*RMAX1**2\)) N
(> *       Use accurate force algorithm for J > N.) N
(>       GO TO 30) N
(47c35) N
(<       RCM2 = MAX\(RCRIT2,RPERT2\)) N
(---) N
(>    10 RCM2 = MAX\(RCRIT2,RPERT2\)) N
(58c46) N
(< *       Form a list of particles for more careful consideration.) N
(---) N
(> *       Form a list of c.m. particles to be resolved.) N
(77,78c65,66) N
(< *       Begin dual purpose force loop \(all RIJ2 < RCM2, J > N or I <= N\).) N
(<    25 DO 60 LJ = 1,NNB1) N
(---) N
(> *       Begin dual purpose force loop \(all RIJ2 < RCM2 or J > N\).) N
(>    30 DO 60 LJ = 1,NNB1) N
(87c75) N
(< *       First see if the distance exceeds c.m. approximation limit.) N
(---) N
(> *       First see whether the distance exceeds c.m. approximation limit.) N
(91c79) N
(< *       Check whether particle #J satisfies neighbour criteria.) N
(---) N
(> *       Test whether particle #J satisfies neighbour criteria.) N
(94c82) N
(< *       Consider small step particle \(may give large correction terms\).) N
(---) N
(>           IF \(JDUM.EQ.I\) GO TO 60) N
(95a84) N
(> *       Omission of small step particle may give large correction terms.) N
(100d88) N
(<           IF \(JDUM.EQ.I\) GO TO 60) N
(105,112c93,98) N
(<           KCM = 1) N
(< *) N
(< *       Advance lower perturber index \(includes possible old neighbour\).) N
(<    26     IF \(LP.LE.NP.AND.J.GT.JP\) THEN) N
(<               LP = LP + 1) N
(OUT) (Page 42/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (21/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (43-44) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               JP = LIST\(LP,I1\)) p n
(< *       Include rare case of two consecutive previous neighbours.) N
(<               GO TO 26) N
(---) N
(>           ICM = 1) N
(> *       Irregular force indicator in case I > N or J > N are resolved.) N
(>           IF \(J.GT.N\) THEN) N
(> *       See whether c.m. approximation applies \(skip perturbed case\).) N
(>               J1 = 2*\(J - N\) - 1) N
(>               IF \(RIJ2.LT.CMSEP2*R\(J-N\)**2.AND.LIST\(1,J1\).GT.0\) GO TO 50) N
(115,139c101,103) N
(< *       Decide appropriate expressions from perturber comparison.) N
(<           IF \(J.NE.JP\) THEN) N
(<               IF \(J.LE.N\) GO TO 30) N
(<               IF \(RIJ2.GT.CMSEP2*R\(J-N\)**2\) GO TO 30) N
(<               KDUM = 2*\(J - N\) - 1) N
(<               IF \(LIST\(1,KDUM\).GT.0\) THEN) N
(<                   K = KDUM) N
(<                   J2 = K + 1) N
(<                   GO TO 50) N
(<               END IF) N
(<           ELSE) N
(< *       Treat perturbers more carefully.) N
(<               IF \(LP.LE.NP\) THEN) N
(<                   LP = LP + 1) N
(<                   JP = LIST\(LP,I1\)) N
(<               END IF) N
(<               J2 = 0) N
(<               IF \(J.GT.N\) THEN) N
(<                   KDUM = 2*\(J - N\) - 1) N
(<                   IF \(LIST\(1,KDUM\).GT.0\) THEN) N
(<                       J = KDUM) N
(<                       J2 = J + 1) N
(<                   END IF) N
(<               END IF) N
(<               GO TO 40) N
(---) N
(>           IF \(I.GT.N\) THEN) N
(> *       See whether c.m. force needs summation over each component.) N
(>               IF \(RIJ2.LT.RPERT2.AND.GAMMA\(IPAIR\).GE.GMIN\) GO TO 40) N
(142c106) N
(<    30     DR2I = 1.0/RIJ2) N
(---) N
(>           DR2I = 1.0/RIJ2) N
(154c118) N
(< *       Obtain relevant force on c.m \(KCM = 0 denotes regular force\).) N
(---) N
(> *       Obtain relevant force on c.m \(ICM = 0 denotes resolved pair\).) N
(170c134) N
(<           IF \(KCM.NE.0\) THEN) N
(---) N
(>           IF \(ICM.NE.0\) THEN) N
(189c153,154) N
(<           IF \(K.EQ.J2\) GO TO 42) N
(---) N
(>           IF \(K.EQ.J + J\) GO TO 42) N
(> *) N
(192,193c157,166) N
(< *       Treat c.m. approximation for #I and #K as single or composite.) N
(<    50     A1 = X\(1,K\) - XI\(1\)) N
(---) N
(>    50     J = J - N) N
(>           J2 = J + J) N
(> *       Sum over the components \(unperturbed case is OK\).) N
(>           K = J2 - 1) N
(> *       Treat all interactions between components of two perturbed pairs.) N
(>           IF \(I.GT.N\) THEN) N
(>               IF \(RIJ2.LT.RPERT2.AND.GAMMA\(I-N\).GT.GMIN\) GO TO 42) N
(>           END IF) N
(OUT) (Page 43/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *) p n
(>    52     A1 = X\(1,K\) - XI\(1\)) N
(205c178) N
(<           IF \(KCM.NE.0\) THEN) N
(---) N
(>           IF \(ICM.NE.0\) THEN) N
(222c195) N
(<           IF \(K.EQ.J2\) GO TO 50) N
(---) N
(>           IF \(K.EQ.J2\) GO TO 52) N
(225,249c198,203) N
(< *       Define regular force indicator.) N
(<    54 KCM = 0) N
(< *       Distinguish between second and first call \(I > N & I <= N, J > N\)) N
(<       IF \(JP.EQ.0\) THEN) N
(< *       Note that first case is for J > N and #I single or unperturbed c.m.) N
(<           IF \(RIJ2.LT.CMSEP2*R\(J-N\)**2\) THEN) N
(<               J2 = 2*\(J - N\)) N
(<               K = J2 - 1) N
(<               GO TO 50) N
(<           END IF) N
(<       ELSE IF \(J.LE.N\) THEN) N
(< *       Consider case of single #J and perturbed c.m.) N
(<           IF \(RIJ2.LT.RPERT2\) THEN) N
(<               J2 = 0) N
(<               GO TO 40) N
(<           END IF) N
(<       ELSE) N
(< *       Split final case I > N & J > N into two parts according to RPERT2.) N
(<           IF \(RIJ2.GT.RPERT2\) THEN) N
(<               IF \(RIJ2.GT.CMSEP2*R\(J-N\)**2\) THEN) N
(<                   K = J) N
(<                   J2 = 0) N
(<               ELSE) N
(<                   J2 = 2*\(J - N\)) N
(<                   K = J2 - 1) N
(---) N
(> *       Resolve components if I > N or J > N and no c.m. approximation.) N
(>    54     IF \(J.GT.N\) THEN) N
(>               IF \(RIJ2.LT.CMSEP2*R\(J-N\)**2\) THEN) N
(> *       Set zero indicator to denote current pair resolved for regular force.) N
(>                   ICM = 0) N
(>                   GO TO 50) N
(251,256c205,209) N
(< *       Adopt c.m. approximation for #I.) N
(<               GO TO 50) N
(<           ELSE) N
(< *       See whether both c.m. bodies should be resolved.) N
(<               IF \(RIJ2.GT.CMSEP2*R\(J-N\)**2\) THEN) N
(<                   J2 = 0) N
(---) N
(>           END IF) N
(> *) N
(>           IF \(I.GT.N\) THEN) N
(>               IF \(RIJ2.LT.RPERT2\) THEN) N
(>                   ICM = 0) N
(258,261d210) N
(<               ELSE) N
(<                   J2 = 2*\(J - N\)) N
(<                   K = J2 - 1) N
(<                   GO TO 42) N
(264d212) N
(<       END IF) N
(279c227) N
(< *       Check force correction due to regularized chain \(same as CMFIRR\).) N
(---) N
(> *       Check force correction due to regularized chain \(G < GMIN in REGINT\).) N
(281c229) N
(<           IF \(JP.GT.0\) THEN) N
(OUT) (Page 44/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (22/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (45-46) 23
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>           IF \(GAMMA\(I-N\).GT.GMIN\) THEN) N
(1,2c1,2) N
(< 108 1995-08-17 11:49 /work/Umi2/spurzem/5/nbody6compare/common2.h) N
(< nbody6compare/common2.h) N
(---) N
(> 108 1995-08-17 11:49 /work/Umi2/spurzem/5/nbody6++compare/common2.h) N
(> nbody6++compare/common2.h) N
(1,2c1,2) N
(< 3436 2006-09-02 12:38 /work/Umi2/spurzem/5/nbody6compare/common6.h) N
(< nbody6compare/common6.h) N
(---) N
(> 3947 2006-06-17 08:31 /work/Umi2/spurzem/5/nbody6++compare/common6.h) N
(> nbody6++compare/common6.h) N
(1c1) N
(< *       common6.) N
(---) N
(> *       COMMON6.) N
(6c6) N
(<       REAL*8  MP,MP0,MPDOT) N
(---) N
(>       INTEGER BK) N
(8,11c8,17) N
(<       COMMON/NBODY/  X\(3,NMAX\),X0\(3,NMAX\),X0DOT\(3,NMAX\),F\(3,NMAX\),) N
(<      &               FDOT\(3,NMAX\),BODY\(NMAX\),RS\(NMAX\),XDOT\(3,NMAX\),) N
(<      &               FI\(3,NMAX\),D1\(3,NMAX\),D2\(3,NMAX\),D3\(3,NMAX\),) N
(<      &               FR\(3,NMAX\),D1R\(3,NMAX\),D2R\(3,NMAX\),D3R\(3,NMAX\),) N
(---) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       SAVE) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(> *) N
(>       COMMON/NBODY/  X\(ID,NMAX\),X0\(ID,NMAX\),X0DOT\(ID,NMAX\),F\(ID,NMAX\),) N
(>      &               XN\(ID,NMAX\),XNDOT\(ID,NMAX\),) N
(>      &               FDOT\(ID,NMAX\),BODY\(NMAX\),RS\(NMAX\),XDOT\(ID,NMAX\),) N
(>      &               FI\(ID,NMAX\),D1\(ID,NMAX\),D2\(ID,NMAX\),D3\(ID,NMAX\),) N
(>      &               FR\(ID,NMAX\),D1R\(ID,NMAX\),D2R\(ID,NMAX\),D3R\(ID,NMAX\),) N
(19c25) N
(<      &               FP0\(4,KMAX\),FD0\(4,KMAX\),TBLIST,DTB,KBLIST\(KMAX\),) N
(---) N
(>      &               FP0\(4,KMAX\),FD0\(4,KMAX\),TBLIST,DTB,KBLIST\(10*KMAX\),) N
(22c28) N
(<       COMMON/NAMES/  N,NTOT,NPAIRS,NNBMAX,NCRIT,NFIX,NMERGE,NSUB,NCH,) N
(---) N
(>       COMMON/NAMES/  N,NTOT,NPAIRS,NNBOPT,NCRIT,NFIX,NMERGE,NSUB,NCH,) N
(24a31) N
(>      &               BK\(10\),LSHORT\(NMAX\),NNBMAX,) N
(31c38) N
(<      &               NKSTRY,NKSREG,NKSHYP,NKSPER,NPRECT,NMARG,NKSMOD,) N
(---) N
(>      &               NKSTRY,NKSREG,NKSHYP,NKSPER,NPRECT,NKSREF,NKSMOD,) N
(34c41,42) N
(<      &               NDUMP,NBPREV,NPOP\(10\),JCMAX,NEWHI,NSTEPB,NBFLUX) N
(---) N
(>      &               NDUMP,NBPREV,NPOP\(10\),JCMAX,NEWHI,NBLCKR,IPE,NPES,) N
(>      &               NSTEPB,NBFLUX,NDUMMY\(8\)) N
(36c44,45) N
(<       COMMON/PARAMS/ CPU,ETAI,ETAR,DTADJ,DELTAT,TCRIT,QE,RBAR,ZMBAR,) N
(---) N
(>       COMMON/PARAMS/ CPU,ETAI,ETAR,DTADJ,DELTAT,TCRIT,TCRITp,) N
(>      &               QE,RBAR,ZMBAR,) N
(39c48) N
(<      &               SMIN,RMIN2,RMIN22,STEPJ,ALPHA,ZNBMIN,ZNBMAX,EBH,) N
(---) N
(>      &               SMIN,RMIN2,RMIN22,FCRIT2,ALPHA,ZNBMIN,ZNBMAX,EBH,) N
(48c57) N
(<      &               TDUMP,SCOEFF\(12\),TOFF,TTOT,CLIGHT,RZ,DUMMY\(2\)) N
(---) N
(OUT) (Page 45/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      &               TDUMP,SCOEFF\(12\),TOFF,TTOT,DUMMY) p n
(56,57c65) N
(<      &               NBH,NKICK,NBKICK,KSAVE\(2\),ITAIL0,NTAIL,NTTOT,) N
(<      &               NSTAIL,N1,ITYPE\(5\),KSTAR\(NMAX\)) N
(---) N
(>      &               NBH,NKICK,NBKICK,KSAVE\(2\),ITYPE\(10\),KSTAR\(NMAX\)) N
(59c67,68) N
(<       COMMON/PLPOT/  MP,AP2,VIR,MP0,MPDOT,TDELAY,RTIDE0,QVIR,PLDUM\(4\)) N
(---) N
(>       COMMON/HERMIT/ FIDOT\(ID,NMAX\),D0\(ID,NMAX\),FRDOT\(ID,NMAX\),) N
(>      &               D0R\(ID,NMAX\),TIMENW\(NMAX\)) N
(61,63c70) N
(<       COMMON/HERMIT/ FIDOT\(3,NMAX\),D0\(3,NMAX\),FRDOT\(3,NMAX\),D0R\(3,NMAX\)) N
(< *) N
(<       COMMON/BLOCKS/ TPREV,TBLOCK,DTK\(40\),TIMENW\(NMAX\)) N
(---) N
(>       COMMON/BLOCKS/ TPREV,TBLOCK,DTK\(64\)) N
(65a73,80) N
(> *        Common block to keep neighbour density and potential high prec \(R.Sp.) N
(\)) N
(>       COMMON/WORK2/RHO\(NMAX\),XNDBL\(NMAX\),PHIDBL\(NMAX\)) N
(> *) N
(>       COMMON/TIMING/ttota,ttreg,ttirr,ttpre,ttinit,ttint,ttks,) N
(>      *  ttcomm,ttadj,ttmov,ttnbp,ttsub,ttsub2,ttfrc,xtsub1,xtsub2,) N
(>      *  isernb,iserreg) N
(> ) N
(> ) N
(1,2c1,2) N
(< 414 1995-08-17 11:49 /work/Umi2/spurzem/5/nbody6compare/commonc.h) N
(< nbody6compare/commonc.h) N
(---) N
(> 414 1995-08-17 11:49 /work/Umi2/spurzem/5/nbody6++compare/commonc.h) N
(> nbody6++compare/commonc.h) N
(1,2c1,2) N
(< 982 2000-09-28 12:40 /work/Umi2/spurzem/5/nbody6compare/const.f) N
(< nbody6compare/const.f) N
(---) N
(> 982 2005-03-09 22:59 /work/Umi2/spurzem/5/nbody6++compare/const.f) N
(> nbody6++compare/const.f) N
(1,2c1,2) N
(< 4786 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/core.f) N
(< nbody6compare/core.f) N
(---) N
(> 4837 2002-02-26 15:37 /work/Umi2/spurzem/5/nbody6++compare/core.f) N
(> nbody6++compare/core.f) N
(9c9) N
(<       COMMON/WORK1/  RHO\(NMAX\)) N
(---) N
(>       DATA RHOM/1.0D0/) N
(16a17) N
(> *       Initialize neighbour densities of all singles and c.m.) N
(18a20) N
(>           RHO\(I\) = 0.D0) N
(26a29) N
(> ) N
(37c40) N
(< *       Skip and set density to zero if there are no neighbours.) N
(---) N
(> *       Skip and set density to zero of there are no neighbours) N
(39,41c42,43) N
(<               RHO\(I\) = 0.0) N
(<               GO TO 50) N
(<           END IF ) N
(---) N
(>           RHO\(I\) = 0.0D0) N
(>           ELSE) N
(87,89c89,96) N
(<           RHO\(I\) = XMASS/\(RLIST\(I6\)*SQRT\(RLIST\(I6\)\)\)) N
(< *       Define particle number density \(not used\).) N
(OUT) (Page 46/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (23/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (47-48) 24
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *         RHON = RHO\(I\)/ZMASS) p n
(---) N
(>           IF \(RLIST\(I6\).GT.0.0D0\) THEN) N
(>               RINV32 = 1.0D0/\(RLIST\(I6\)*SQRT\(RLIST\(I6\)\)\)) N
(>           ELSE) N
(>               RINV32 = 0.0D0) N
(>           END IF) N
(>           RHO\(I\) = XMASS*RINV32) N
(> *       For multi-mass store also five neighbour particle density) N
(>           XNDBL\(I\) = RINV32) N
(92a100) N
(>           END IF) N
(113,116d120) N
(< *       Ignore density centre for Plummer binary models except at end.) N
(<           IF \(KZ\(5\).EQ.2.AND.TTOT.LT.TCRIT\) THEN) N
(<               RDENS\(K\) = 0.0) N
(<           END IF) N
(1,2c1,2) N
(< 639 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/cputim.f) N
(< nbody6compare/cputim.f) N
(---) N
(> 535 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/cputim.f) N
(> nbody6++compare/cputim.f) N
(0a1,4) N
(> # 1 "cputim.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "cputim.F") N
(4,5c8,9) N
(< *       CPU time.) N
(< *       ---------) N
(---) N
(> * CPU time.) N
(> * ---------) N
(7c11,12) N
(<       REAL*8  TCOMP) N
(---) N
(>       INCLUDE 'common6.h') N
(>       REAL*8 TCOMP) N
(9c14) N
(<       REAL*4  TARRAY\(2\)) N
(---) N
(>       REAL*4 tt,TARRAY\(2\),etime) N
(11,21c16,19) N
(< *) N
(< *       Initialize timer \(first call\) or obtain elapsed time.) N
(<       IF \(ICPU.EQ.0\) THEN) N
(< *         CALL LIB$INIT_TIMER) N
(<           TCOMP = 0.0) N
(< *         TCOMP = ETIME\(TARRAY\)) N
(< *         TCOMP = MCLOCK\(\)/6000.) N
(<           ICPU = 1) N
(<       ELSE) N
(< *         CALL LIB$STAT_TIMER\(2,ITIME\)) N
(< *         TCOMP = FLOAT\(ITIME\)/6000.0) N
(---) N
(> * Initialize timer \(first call\) or obtain elapsed time.) N
(> * TCOMP = FLOAT\(ITIME\)/6000.0) N
(> * TCOMP = REAL\(IRTC\(\)\)*6.67D-9/60.) N
(> # 29 "cputim.F") N
(23,25c21,24) N
(< *         TCOMP = MCLOCK\(\)/6000.) N
(< *       Elapsed CPU time in minutes on VAX, SUN or MIPS & IBM RS/6000.) N
(<       END IF) N
(---) N
(> ) N
(> * TCOMP = MCLOCK\(\)/6000.) N
(> * Elapsed CPU time in minutes on VAX, SUN or MIPS & IBM RS/6000.) N
(> * and T3D) N
(OUT) (Page 47/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1,2c1,2) p n
(< 4228 2000-06-22 18:08 /work/Umi2/spurzem/5/nbody6compare/cstab2.f) N
(< nbody6compare/cstab2.f) N
(---) N
(> 4452 2005-03-09 23:00 /work/Umi2/spurzem/5/nbody6++compare/cstab2.f) N
(> nbody6++compare/cstab2.f) N
(12a13,15) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(112a116) N
(>           if\(rank.eq.0\)then) N
(118a123) N
(>           end if) N
(121c126,128) N
(<           WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), QL, Q1, ECC, ECC1,) N
(---) N
(>           K = INAME\(I3\)) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(81,30\)  TIMEC, RI, NAMEC\(K\), QL, Q1, ECC, ECC1,) N
(1,2c1,2) N
(< 4510 2001-11-27 11:39 /work/Umi2/spurzem/5/nbody6compare/cstab3.f) N
(< nbody6compare/cstab3.f) N
(---) N
(> 4723 2005-03-09 23:02 /work/Umi2/spurzem/5/nbody6++compare/cstab3.f) N
(> nbody6++compare/cstab3.f) N
(11a12,14) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(113c116,117) N
(<                   WRITE \(6,19\)  NSTEP1, ECC4, SEMI, PCRIT, PMIN4, G4) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,19\)  NSTEP1, ECC4, SEMI, PCRIT, PMIN4, G4) N
(125c129,130) N
(<           WRITE \(6,20\)  ECC, ECC1, SEMI, SEMI1, PMIN, PCRIT, EK, PZ) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  ECC, ECC1, SEMI, SEMI1, PMIN, PCRIT, EK, PZ) N
(131c136,137) N
(<           WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), QL, Q1, ECC, ECC1,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), QL, Q1, ECC, ECC1,) N
(139a146) N
(> ) N
(1,2c1,2) N
(< 4508 2000-06-22 18:09 /work/Umi2/spurzem/5/nbody6compare/cstab4.f) N
(< nbody6compare/cstab4.f) N
(---) N
(> 4685 2005-03-09 23:02 /work/Umi2/spurzem/5/nbody6++compare/cstab4.f) N
(> nbody6++compare/cstab4.f) N
(12a13,15) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(125,126c128) N
(<       IF \(PMIN.GT.PCRIT.AND.SEMI.GT.0.0.AND.SEMI1.GT.0.0.AND.) N
(<      &    RB.GT.SEMI\) THEN) N
(---) N
(>       IF \(PMIN.GT.PCRIT.AND.SEMI.GT.0.0.AND.SEMI1.GT.0.0\) THEN) N
(128c130,131) N
(<           WRITE \(6,20\)  ECC, ECC1, SEMI, SEMI1, PMIN, PCRIT, EK, ALPHA) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  ECC, ECC1, SEMI, SEMI1, PMIN, PCRIT, EK, ALPHA) N
(134c137,139) N
(<           WRITE \(81,30\)  TIMEC, RI, NAMEC\(I3\), QL, Q1, ECC, ECC1,) N
(OUT) (Page 48/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (24/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (49-50) 25
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>           K = INAME\(I3\)) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(81,30\)  TIMEC, RI, NAMEC\(K\), QL, Q1, ECC, ECC1,) N
(1,2c1,2) N
(< 7041 2005-04-01 14:38 /work/Umi2/spurzem/5/nbody6compare/cstab5.f) N
(< nbody6compare/cstab5.f) N
(---) N
(> 6323 2005-03-09 23:02 /work/Umi2/spurzem/5/nbody6++compare/cstab5.f) N
(> nbody6++compare/cstab5.f) N
(8a9) N
(>       COMMON/CHREG/  TIMEC,TMAX,RMAXC,CM\(10\),NAMEC\(6\),NSTEP1,KZ27,KZ30) N
(11a13,15) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(15,16c19) N
(<       IR = 0) N
(<       DO 1 I = 1,N-2) N
(---) N
(>       DO 5 I = 1,N-2) N
(17a21) N
(>           IR = 0) N
(21c25) N
(<     1 CONTINUE) N
(---) N
(>     5 CONTINUE) N
(24,26c28,31) N
(<       IF \(IR.GT.0\) THEN) N
(< *         WRITE \(6,2\)  I, \(1.0/RINV\(K\),K=1,N-1\)) N
(< *   2     FORMAT \(' CSTAB5 TEST    I R ',I4,1P,5E9.1\)) N
(---) N
(>       IF \(IR.GT.1\) THEN) N
(> *         if\(rank.eq.0\)) N
(> *    &    WRITE \(6,2\)  NSTEP1, I, \(1.0/RINV\(K\),K=1,N-1\)) N
(> *   2     FORMAT \(' CSTAB5 TEST    # I R ',I6,I4,1P,5E9.1\)) N
(46,78c51) N
(<       I5 = 0) N
(<       IF \(N.EQ.2\) THEN) N
(<           I3 = I2) N
(<           I4 = I1) N
(<       ELSE IF \(N.EQ.3\) THEN) N
(<           I4 = I1) N
(< *       Note N = 4 is already defined correctly.) N
(<       ELSE IF \(N.GT.4\) THEN) N
(< *       Determine indices of second closest pair \(avoid pair I1-I2\).) N
(<           RX1 = 1.0) N
(<           RX0 = R2\(I1,I2\)) N
(<           DO 5 J1 = 1,N) N
(<               IF \(J1.EQ.I1.OR.J1.EQ.I2\) GO TO 5) N
(<               DO 4 J2 = J1+1,N) N
(<                   IF \(J2.EQ.I1.OR.J2.EQ.I2\) GO TO 4) N
(<                   IF \(R2\(J1,J2\).LT.RX1.AND.R2\(J1,J2\).GT.RX0\) THEN) N
(<                       RX1 = R2\(J1,J2\)) N
(<                       I3 = J1) N
(<                       I4 = J2) N
(<                   END IF) N
(<     4         CONTINUE) N
(<     5     CONTINUE) N
(< *       Identify remaining single particle\(s\) by exclusion.) N
(<           DO 8 I = 1,N) N
(<               IF \(I.EQ.I1.OR.I.EQ.I2.OR.I.EQ.I3.OR.I.EQ.I4\) GO TO 8) N
(<               IF \(I5.EQ.0\) THEN) N
(<                   I5 = I) N
(<               ELSE ) N
(<                   I6 = I) N
(<               END IF) N
(<     8     CONTINUE) N
(<       END IF) N
(OUT) (Page 49/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(---) N
(>       I5 = IJ\(5\)) N
(214c187,188) N
(<           WRITE \(6,20\)  ECC0, ECC1, SEMI, SEMI1, PMIN, PCRIT, SEMI2,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  ECC0, ECC1, SEMI, SEMI1, PMIN, PCRIT, SEMI2,) N
(223a198) N
(> ) N
(1,2c1,2) N
(< 2562 2006-09-02 12:16 /work/Umi2/spurzem/5/nbody6compare/data.f) N
(< nbody6compare/data.f) N
(---) N
(> 4144 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/data.f) N
(> nbody6++compare/data.f) N
(0a1,4) N
(> # 1 "data.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "data.F") N
(4,5c8,9) N
(< *       Initial conditions.) N
(< *       -------------------) N
(---) N
(> * Initial conditions.) N
(> * -------------------) N
(8c12,14) N
(<       REAL*4  RAN2) N
(---) N
(>       REAL*8 A\(8\)) N
(>       CHARACTER*1 CHAR\(80\)) N
(>       LOGICAL LREADN,LREADP,LREADF) N
(9a16) N
(> # 21 "data.F") N
(11,29c18,24) N
(< *       Initialize the portable random number generator \(range: 0 to 1\).) N
(<       KDUM = -1) N
(<       RN1 = RAN2\(KDUM\)) N
(< *       Skip the first random numbers \(IDUM1 specified at input\).) N
(<       DO 1 K = 1,IDUM1) N
(<           RN1 = RAN2\(KDUM\)) N
(<     1 CONTINUE) N
(< *) N
(< *       Save random number sequence in COMMON for future use.) N
(<       IDUM1 = KDUM) N
(< *) N
(< *       Read mass function parameters, # primordials, Z-abundance & epoch.) N
(<       READ \(5,*\)  ALPHA, BODY1, BODYN, NBIN0, ZMET, EPOCH0, DTPLOT) N
(<       IF \(ZMET.LE.0.0D0\) ZMET = 1.0D-04) N
(<       IF \(ZMET.GT.0.03\) ZMET = 0.03) N
(< *) N
(< *       Check option for reading initial conditions from input file.) N
(<       IF \(KZ\(22\).GE.2\) THEN) N
(<           ZMASS = 0.0) N
(---) N
(> * Set provisional total mass \(rescaled in routine SCALE\).) N
(>       ZMASS = FLOAT\(N\)) N
(> *) N
(> * Check option for reading initial conditions from input file.) N
(>       if\(rank.eq.0\)then) N
(> *) N
(>       IF \(KZ\(22\).EQ.2.OR.KZ\(22\).EQ.6\) THEN) N
(31,35c26,31) N
(<               READ \(10,*\)  BODY\(I\), \(X\(K,I\),K=1,3\), \(XDOT\(K,I\),K=1,3\)) N
(<               ZMASS = ZMASS + BODY\(I\)) N
(<     5     CONTINUE) N
(< *       Include possibility of retaining the mass distribution.) N
(<           IF \(KZ\(22\).GT.2\) GO TO 40) N
(OUT) (Page 50/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (25/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (51-52) 26
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>               READ \(10,*\) BODY\(I\), \(X\(K,I\),K=1,3\), \(XDOT\(K,I\),K=1,3\)) N
(>     5 CONTINUE) N
(> * Read tidal radius if cutoff required) N
(>       IF \(KZ\(23\).GE.3\) READ \(10,*\) RTIDE) N
(>           PRINT*,' rank ',rank,N,' body data read from unit 10 ',) N
(>      * ' RTIDE =',RTIDE) N
(36a33,88) N
(> * End reading NBODY input data format.) N
(> *) N
(> * Read TREE input format) N
(>       IF \(KZ\(22\).EQ.3.OR.KZ\(22\).EQ.7\) THEN) N
(>           READ\(10,*\) N) N
(>           READ\(10,*\) DUMDY) N
(>           READ\(10,*\) DUMDY) N
(>           PRINT*,' N=',N) N
(>           DO 51 I = 1,N) N
(>           READ\(10,*\)BODY\(I\)) N
(>    51 CONTINUE) N
(>           PRINT*,' masses read ',BODY\(1\),BODY\(N\)) N
(>           DO 52 I = 1,N) N
(>    52 READ\(10,*\)\(X\(K,I\),K=1,3\)) N
(>           DO 53 I = 1,N) N
(>    53 READ\(10,*\)\(XDOT\(K,I\),K=1,3\)) N
(>           NTOT = N) N
(>           PRINT*,' rank ',rank,N,' body data read from unit 10 ') N
(>           CALL FLUSH\(6\)) N
(>       END IF) N
(> * End read TREE input format) N
(> * Read STARLAB input format) N
(>       IF \(KZ\(22\).EQ.4.OR.KZ\(22\).EQ.8\) THEN) N
(>           I = 0) N
(>           IS = 0) N
(>           LREADF = .FALSE.) N
(>           LREADP = .FALSE.) N
(>   61 CONTINUE) N
(>           READ\(10,'\(2A1\)'\)\(CHAR\(K\),K=1,2\)) N
(> *) N
(>           LREADN=\(.NOT.LREADF\).AND.CHAR\(1\).EQ.'\('.AND.CHAR\(2\).EQ.'P') N
(>           IF\(LREADN\)THEN) N
(>           LREADF=.TRUE.) N
(>           READ\(10,111\)N) N
(>           PRINT*,' Read N=',N) N
(>           NTOT = N) N
(>           END IF) N
(> *) N
(>           LREADP=CHAR\(1\).EQ.'\('.AND.CHAR\(2\).EQ.'D') N
(>           IF\(LREADP.AND.IS.EQ.0\)THEN) N
(>           IS = 1) N
(>           ELSE) N
(>           IF\(LREADP\)THEN) N
(>           I = I + 1) N
(>           READ\(10,*\)CHAR\(1\),CHAR\(2\),BODY\(I\)) N
(>           READ\(10,*\)CHAR\(1\),CHAR\(2\),\(X\(K,I\),K=1,3\)) N
(>           READ\(10,*\)CHAR\(1\),CHAR\(2\),\(XDOT\(K,I\),K=1,3\)) N
(>           END IF) N
(>           END IF) N
(>           IF\(I.LT.N\)GO TO 61) N
(>           PRINT*,N,' Particles read from Starlab File') N
(>  111 FORMAT\(5X,I5\)) N
(>       END IF) N
(> *) N
(>       end if) N
(> # 101 "data.F") N
(38c90,99) N
(< *       Include the case of equal masses \(ALPHA = 1 or BODY1 = BODYN\).) N
(---) N
(> * Read mass function parameters, # primordials, Z-abundance & epoch.) N
(> * And plot interval for HR diagram.) N
(OUT) (Page 51/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>        if\(rank.eq.0\)then) p n
(>        READ \(5,*\) ALPHA, BODY1, BODYN, NBIN0, ZMET, EPOCH0,DTPLOT) N
(>        end if) N
(> # 116 "data.F") N
(> *) N
(>       IF\(KZ\(22\).GE.2\)GO TO 50) N
(> *) N
(> * Include the case of equal masses \(ALPHA = 1 or BODY1 = BODYN\).) N
(42,45c103,104) N
(<    10     CONTINUE) N
(< *       Set provisional total mass \(rescaled in routine SCALE\).) N
(<           ZMASS = FLOAT\(N\)) N
(<           GO TO 40) N
(---) N
(>    10 CONTINUE) N
(>           IF \(KZ\(20\).NE.6\) GO TO 40) N
(48c107) N
(< *       Choose between two realistic IMF's and standard Salpeter function.) N
(---) N
(> * Choose between two realistic IMFs and standard Salpeter function.) N
(55a115,116) N
(> * Metallicity should be set to minimum value.) N
(>       IF\(ZMET.EQ.0.D0\) ZMET = 1.D-4) N
(57,61c118) N
(<       WRITE \(6,15\)  ALPHA, BODY1, BODYN) N
(<    15 FORMAT \(/,12X,'STANDARD IMF    ALPHA =',F5.2,) N
(<      &              '  BODY1 =',F5.1,'  BODYN =',F5.2\)) N
(< *) N
(< *       Generate a power-law mass function with exponent ALPHA.) N
(---) N
(> * Generate a power-law mass function with exponent ALPHA.) N
(68c125) N
(< *       Assign individual masses sequentially.) N
(---) N
(> * Assign individual masses sequentially.) N
(75c132,139) N
(< *       Scale the masses to <M> = 1 for now and set consistent total mass.) N
(---) N
(>       if\(rank.eq.0\)then) N
(>       WRITE \(6,15\) ALPHA, BODY1, BODYN, ZMASS, NBIN0, ZMET, EPOCH0) N
(>    15 FORMAT \(/,12X,'STANDARD IMF    ALPHA =',F5.2,) N
(>      & '  BODY1 =',F5.1,'  BODYN =',F5.2,' ZMASS =',1P,E12.5,0P,) N
(>      & ' NBIN0=',I5,' ZMET =',F5.2,' EPOCH0 =',F5.2\)) N
(>       end if) N
(> *) N
(> * Scale the masses to <M> = 1 for now and set consistent total mass.) N
(82c146) N
(< *       Set up initial coordinates & velocities \(uniform or Plummer model\).) N
(---) N
(> * Set up initial coordinates & velocities \(uniform or Plummer model\).) N
(86a151,152) N
(>    50 CONTINUE) N
(> *) N
(1,2c1,2) N
(< 14619 2006-09-02 12:20 /work/Umi2/spurzem/5/nbody6compare/define.f) N
(< nbody6compare/define.f) N
(---) N
(> 14336 2005-03-09 14:56 /work/Umi2/spurzem/5/nbody6++compare/define.f) N
(> nbody6++compare/define.f) N
(4c4) N
(< *       Definition of input parameters, options & counters.) N
(---) N
(> *       Definition of input parameters, options & counters. \(NB6++\)) N
(6a7,8) N
(> * ********** NOTE: Contents of [] to be removed with time.*************) N
(> * ********** Not read by nb6++                            *************) N
(12,14d13) N
(< ***) N
(< * NBODY6:) N
(OUT) (Page 52/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (26/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (53-54) 27
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(17,20c16,24) N
(< ***) N
(< * INPUT:) N
(< *) N
(< *       N       Total particle number \(singles + binary c.m.; < NMAX - 2\).) N
(---) N
(> *       TCRITp  Termination time in Myrs.) N
(> *       isernb  Max size of sequential irr blocks on parallel machine ) N
(> *               for single CPU dummy) N
(> *       iserreg as isernb for reg blocks) N
(> *               for single CPU dummy) N
(> *--------) N
(> *       N       Total number of centre of masses \(<NMAX - 2\).) N
(> *               e.g: N=100 binaries = NBIN0=NBIN below for f=1) N
(> *                    N=100, and NBIN0=NBIN=50 for f=0.5) N
(23,24c27,29) N
(< *       NRAND   Random number sequence skip.) N
(< *       NNBMAX  Maximum number of neighbours \(< LMAX - 2\).) N
(---) N
(> *       NRAND   Random number seed; any positive integer) N
(> *               [ NNBMAX  Maximum neighb.numb. \(= MIN\(N/2,LMAX-3\) set in input) N
(.F].) N
(> *       NNBOPT  Desired optimal neighbour number \(R.Sp.\)) N
(26c31) N
(< *) N
(---) N
(> *--------) N
(30,32c35,39) N
(< *       DTADJ   Time interval for parameter adjustment \(N-body units\).) N
(< *       DELTAT  Output time interval \(N-body units\).) N
(< *       TCRIT   Termination time \(N-body units\).) N
(---) N
(> *       DTADJ   Time interval for parameter adjustment.) N
(> *       DELTAT  Output time interval.) N
(> *->             NFIX=1 and DTADJ=DELTAT => OUT3 written every adjust time) N
(> *       TCRIT   Termination time.) N
(> *->             The _earlier_ termination criterion becomes active) N
(34c41) N
(< *       RBAR    Virial cluster radius in pc \(set = 1 for isolated cluster\).) N
(---) N
(> *       RBAR    Virial cluster radius in pc \(set = 0 for isolated cluster\).) N
(36,38c43,46) N
(< *) N
(< *       KZ\(J\)   Non-zero options for alternative paths \(see table\).) N
(< *) N
(---) N
(> *--------) N
(> *       KZ\(J\)   Non-zero options for alternative paths \(see table below\).) N
(> *       BK\(J\)   Non-zero options for binpop_4new routine \(see table below\).) N
(> *--------) N
(45,48c53,54) N
(< ***) N
(< * INPUT: if \(kz\(4\).gt.0\)) N
(< *) N
(< *       DELTAS  Output interval for binary search \(in TCR; suppressed\).) N
(---) N
(> *--------) N
(> *       DELTAS  Output interval for binary search \(option 4\).) N
(51,54c57,58) N
(< ***) N
(< * DATA:) N
(< *) N
(< *       ALPHAS  Power-law index for initial mass function \(used if #20 < 2\).) N
(---) N
(> *--------) N
(> *       ALPHAS  Power-law index for initial mass function \(routine DATA\).) N
(56,57c60,61) N
(< *       BODYN   Minimum particle mass before scaling.) N
(OUT) (Page 53/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       NBIN0   Number of primordial binaries \(for IMF2 with KZ\(20\) > 1\).) p n
(---) N
(> *       BODYN   Minimum particle mass before scaling \(KZ\(20\): solar mass\).) N
(> *       NBIN0   Number of primordial binaries \(for IMF2 with KZ\(20\) > 2\).) N
(60,85c64,65) N
(< *       DTPLOT  Plotting interval for HRDIAG \(N-body units; >= DELTAT\).) N
(< ***) N
(< * SETUP: if\(kz\(5\).eq.2\)) N
(< *) N
(< *       APO     Separation of two Plummer models \(SEMI = APO/\(1 + ECC\).) N
(< *       ECC     Eccentricity of two-body orbit \(ECC < 0.999\).) N
(< *       N2      Membership of second Plummer model \(N2 <= N\).) N
(< *       SCALE   Second scale factor \(>= 0.2 for limiting minimum size\).) N
(< *) N
(< *        if\(kz\(5\).eq.3\)) N
(< *) N
(< *       APO     Separation between the perturber and Sun.) N
(< *       ECC     Eccentricity of orbit \(=1 for parabolic encounter\).) N
(< *       DMIN    Minimum distance of approach \(pericentre\).) N
(< *       SCALE   Perturber mass scale factor \(=1 for Msun\).) N
(< *) N
(< *        if\(kz\(5\).eq.4\)) N
(< *) N
(< *       SEMI    Initial semi-major axis \(changes a bit on scaling\).) N
(< *       ECC     Eccentricity \(ECC > 1: NAME = 1 & 2 free-floating\).) N
(< *       M1      Mass of first member \(in units of mean mass\).) N
(< *       M2      Mass of second member \(rescaled total mass = 1\).) N
(< ***) N
(< * SCALE:) N
(< *) N
(< *       Q       Virial ratio \(Q = 0.5 for equilibrium\).) N
(---) N
(> *--------) N
(> *       Q       Virial ratio \(routine SCALE; Q = 0.5 for equilibrium\).) N
(88,122c68,92) N
(< *       RTIDE   Unscaled tidal radius \(#14 >= 2; otherwise copied to RSPH2\).) N
(< ***) N
(< * XTRNL0: if \(kz\(14\).eq.2\)) N
(< *) N
(< *       GMG     Point-mass galaxy \(solar masses, linearized circular orbit\).) N
(< *       RG0     Central distance \(in kpc\).) N
(< *) N
(< *         if \(kz\(14\).eq.3\)) N
(< *       GMG     Point-mass galaxy \(solar masses\).) N
(< *       DISK    Mass of Miyamoto disk \(solar masses\).) N
(< *       A       Softening length in Miyamoto potential \(in kpc\).) N
(< *       B       Vertical softening length \(kpc\).) N
(< *       VCIRC   Galactic circular velocity \(km/sec\) at RCIRC \(=0: no halo\).) N
(< *       RCIRC   Central distance for VCIRC with logarithmic potential \(kpc\).) N
(< *       RG      Initial position; GMG+DISK=0, VG\(3\)=0: A\(1+E\)=RG\(1\), E=RG\(2\).) N
(< *       VG      Initial cluster velocity vector \(km/sec\).) N
(< *) N
(< *         if \(kz\(14\).eq.3.or.kz\(14\).eq.4\)) N
(< *       MP      Total mass of Plummer sphere \(in scaled units\).) N
(< *       AP      Plummer scale factor \(square saved in AP2\).) N
(< *       MPDOT   Decay time for gas expulsion \(MP = MP0/\(1 + MPDOT*\(T-TD\)\).) N
(< *       TDELAY  Delay time for starting gas expulsion \(T > TDELAY\).) N
(< ***) N
(< * HOTSYS: if \(kz\(29\).gt.0\)) N
(< *) N
(< *       SIGMA0  Hot initial velocities in km/sec \(CALL REFLCT suppressed\).) N
(< ***) N
(< * BINPOP: if \(kz\(8\).eq.1.or.kz\(8\).gt.2\)) N
(< *) N
(< *       NBIN    Number of primordial binaries.) N
(< *       SEMI    Max semi-major axis in model units \(all equal if RANGE = 0\).) N
(< *       ECC     Initial eccentricity \(< 0 for thermal distribution\).) N
(< *       RATIO   Mass ratio M1/\(M1 + M2\); \(= 1.0: M1 = M2 = <M>; not #20 > 1\).) N
(< *       RANGE   Range in SEMI for uniform logarithmic distribution \(> 0\).) N
(OUT) (Page 54/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (27/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (55-56) 28
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       NSKIP   Binary frequency of mass spectrum \(#20 < 2; body #1 first\).) p n
(---) N
(> *       RSPH2   Radius of reflecting sphere \(option 29; units of RSCALE\).) N
(> *--------) N
(> *       NCL     Number of interstellar clouds \(routine CLOUD0; option 13\).) N
(> *       RB2     Radius of cloud boundary in pc \(square is saved\).) N
(> *       VCL     Mean cloud velocity in km/sec.) N
(> *       SIGMA   Gaussian velocity dispersion of clouds in km/sec.) N
(> *       CLM     Individual cloud masses in solar masses \(maximum is MCL\).) N
(> *       RCL2    Half-mass radii of clouds in pc \(square is saved\).) N
(> *--------) N
(> *       SIGMA0  Hot initial velocities in km/sec \(routine HOTSYS; option 29\).) N
(> *--------) N
(> *       NBIN    Number of initial binaries \(routine BINPOP; option 8\).) N
(> *       SEMI    Initial semi-major axis \(= 0 for range of energies\).) N
(> *       ECC     Initial eccentricity \(for BINPOP_4NEW\)) N
(> *               <=1 AND >=0 for one particular fixed ecc. for all systems) N
(> *               < 0 for thermal distribution,) N
(> *               =20 for uniform distribution,) N
(> *               =30 for f\(e\)=0.1765/\(e*e\)) N
(> *               =40 for general f\(e\)=a*e^b, e0<=e<=1 with a=\(1+b\)/\(1-e0^\(1+b\)\)) N
(> *                   e0 and b must be defined in binpop routine) N
(> *       RATIO   Mass ratio M1/\(M1 + M2\); \(= 1.0: M1 = M2 = <M>\).) N
(> *       NBGR    Number of binaries in fixed energy groups.) N
(> *       REDUCE  Reduction factor in semi-major axis for each group.) N
(> *       RANGE   Energy range for uniform logarithmic distribution.) N
(> *       NSKIP   Binary frequency of mass spectrum \(starting from body #1\).) N
(125,129c95,97) N
(< ***) N
(< * HIPOP: if \(kz\(8\).gt.0.and.kz\(11\).gt.1\)) N
(< *) N
(< *       NHI     Number of primordial hierarchies.) N
(< *       SEMI    Max semi-major axis in model units \(all equal if RANGE = 0\).) N
(---) N
(> *--------) N
(> *       NHI     Number of primordial hierarchies \(routine HIPOP; #11 > 1\).) N
(> *       SEMI    Semi-major axis in model units \(all equal if RANGE = 0\).) N
(134,138c102,104) N
(< ***) N
(< * INTIDE: if \(kz\(27\).gt.0\)) N
(< *) N
(< *       RSTAR   Size of typical star in A.U.) N
(< *       IMS     # idealized main-sequence stars.) N
(---) N
(> *--------) N
(> *       RSTAR   Size of typical star in A.U. \(routine INTIDE; option 27\).) N
(> *       IMS     # idealized main-sequence stars \(routine INTIDE; option 27\).) N
(142,150d107) N
(< ***) N
(< * CLOUD0: if \(kz\(13\).gt.0\)) N
(< *) N
(< *       NCL     Number of interstellar clouds.) N
(< *       RB2     Radius of cloud boundary in pc \(square is saved\).) N
(< *       VCL     Mean cloud velocity in km/sec.) N
(< *       SIGMA   Velocity dispersion \(#13 > 1: Gaussian\).) N
(< *       CLM     Individual cloud masses in solar masses \(maximum MCL\).) N
(< *       RCL2    Half-mass radii of clouds in pc \(square is saved\).) N
(160,161c117) N
(< *       3  Basic data on unit 3 at output time \(unformatted, frequency NFIX\).) N
(< *             =1/2: standard and/or tail; =3: tail only; >3: cluster + tail.) N
(---) N
(> *       3  Basic data on unit 3 at output time \(frequency NFIX\).) N
(163,166c119) N
(< *       5  Initial conditions \(#22 =0; =0: uniform & isotropic sphere;) N
(< *                =1: Plummer; =2: two Plummer models in orbit, extra input;) N
(< *                =3: massive perturber and planetesimal disk, extra input\).) N
(< *                =4: massive initial binary, extra input; output on unit 35\).) N
(---) N
(> *       5  Initial conditions \(#22 =0; =0: uniform & isotropic; =1: Plummer\).) N
(OUT) (Page 55/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(168,171c121,122) p n
(< *       7  Lagrangian radii \(>0: RSCALE; =2, 3, 4: output units 6, 7, 12;) N
(< *                 =5: density & rms velocity at given radii on unit 26 & 27;) N
(< *                 =6: Lagrangian radii for two mass groups on unit 31 & 32.) N
(< *       8  Primordial binaries \(=1 & >=3; >0: BINOUT; >2: BINDAT; >3: HIDAT\).) N
(---) N
(> *       7  Lagrangian radii \(>0: RSCALE; =2, 3, 4: output on unit 6 & 7\).) N
(> *       8  Primordial binaries \(=1 & 3; >0: BINOUT; >2: BINDAT; >3: HIDAT\).) N
(177,178c128) N
(< *      14  External force \(=1: standard tidal field; =2: point-mass galaxy;) N
(< *             =3: point-mass + disk + halo + Plummer; =4: Plummer sphere\).) N
(---) N
(> *      14  External force \(=1: standard tidal field; =2: not implemented\).) N
(183,184c133,136) N
(< *      19  Mass loss \(=1: old supernova scheme; =3: Eggleton, Tout & Hurley\).) N
(< *      20  Initial mass function \(=1: Scalo; =2,4,6: Kroupa; =3,5: Eggleton\).) N
(---) N
(> *      19  Mass loss \(=1: supernova scheme; =3: Eggleton, Tout & Hurley\).) N
(> *      20  Initial mass function \(=1: Tout; =2,4: Kroupa; =3,5: Eggleton\).) N
(> *          >3 => mass ratio distr. as defined in imf2.f) N
(> *          =2 for KTG93 IMF with random pairing \(imf2.f\)) N
(187,189c139,142) N
(< *      23  Escaper removal \(>1: diagnostics in file ESC; =2: angles unit #6;) N
(< *                           >=3: initialization  & integration of tidal tail\).) N
(< *      24  Initial conditions for subsystem \(routine SCALE; KZ\(24\) = #\).) N
(---) N
(> *                               \(=4: starlab input format\)) N
(> *      23  Removal of escapers \(=1: isolated cluster; =2: diag; ) N
(> *                               =3: tidal cut       ; =4: diag\).) N
(> *      24  Initial conditions for subsystems \(routine SCALE and input from dat) N
(.10\).) N
(192c145,146) N
(< *      27  Tidal effects \(=1: circularization; =2: Press-Teukolsky; =3: GR\).) N
(---) N
(> *      27  Two-body tidal interaction \(n = 1.5: type 3 & 5; n = 3: others\).) N
(> *      27  Tidal circularization & collisions \(R_coll = 0.75*\(R_1 + R_2\)\).) N
(195c149) N
(< *      30  Chain regularization \(=1: basic; >1: extra output; >2: each step\).) N
(---) N
(> *      30  Chain regularization \(>=2: main output; >2: diagnostic output\).) N
(199,205c153,180) N
(< *      34  Roche-lobe overflow \(not implemented yet\). ) N
(< *      35  Time offset \(global time from TTOT = TIME + TOFF; offset = 100\).) N
(< *      36  Step reduction for hierarchical systems \(not recommended\).) N
(< *      37  Fast time-step criterion \(>0: STEP; >1: STEPR; not recommended\).) N
(< *      38  Force polynomial corrections \(=0: I > N; not recommended\).) N
(< *      39  No unique density centre \(skips velocity modification of RS\(I\)\).) N
(< *      40  Increase of neighbour numbers if <NNB> < NNBMAX/2.) N
(---) N
(> *      34  Roche lobe overflow \(not implemented yet\).) N
(> *      35  Time offset \(global time from TTOT = TIME + DTOFF\).) N
(> *      36  Step reduction for hierarchical systems.) N
(> *      37  Fast time-step criterion \(>0: STEP; >1: STEPR\).) N
(> *      38  No force polynomial corrections \(I <= N; block-step version\).) N
(> *      39  shape analysis by routine ellan \(=2\) with Ch. Theis) N
(> *      40  adjust neighbour number to optimal neighbour number.) N
(> *       ---------------------------------------------------------------------) N
(> *) N
(> *) N
(> *       Options BK\(J\)   \(for binpop_4new.f\)) N
(> *       *************) N
(> *) N
(> *       ---------------------------------------------------------------------) N
(> *       1  =0: no proto-star evolution                                       ) N
(> *          =1:"proto-star" evol. of ecc,period in binpop_4new.f           ) N
(> *       2  = -1: use NBGR and REDUCE in binpop_pk.f) N
(> *          =0:flat distr. in semi-major axis                                 ) N
(> *          =1:f=0.034388logP                                                 ) N
(> *          =2:f=3.5logP/[100+\(logP\)**2]                                      ) N
(OUT) (Page 56/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (28/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (57-58) 29
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *             KZ\(40\)=1,2 are 1st and 2nd iterations                          ) p n
(> *          =3:f=2.3\(logP-1\)/[45+\(logP-1\)**2]                                 ) N
(> *          =4:f=2.5\(logP-1\)/[45+\(logP-1\)**2] -- derived in K2) N
(> *               NOTE: in routine adjust.f KZ\(40\)>0 is used to adjust         ) N
(> *                     neighbour number                                       ) N
(> *          =5:f = Duquennoy&Mayor \(1991\), i.e. Gaussian in logP ) N
(> *       4  =1: file peri_hyperbol.dat opened and written to \(see ksint.f\)) N
(> *          =0: not opened) N
(229,231c204,208) N
(< *       NFAST   Fast particles included in LISTV \(option 18\).) N
(< *       NBFAST  Fast particles included in neighbour list \(option 18\).) N
(< *       NBLOCK  Number of blocks \(block-step version\).) N
(---) N
(> *       NFAST   Fast particle included in LISTV \(option 18\).) N
(> *       NBFAST  Fast particle included in neighbour list \(option 18\).) N
(> *       NBREF   Boundary reflections \(option 29; suppressed\).) N
(> *       NBLOCK  Number of irregular blocks \(block-step version\).) N
(> *       NBLCKR  Number of regular blocks \(block-step version\) \(R.Sp.\)) N
(245d221) N
(< *       NMARG   Marginal merger stability \(accepted after 10,000 tries\).) N
(247d222) N
(< *       NEWHI   New hierarchical systems \(counted by routine HIARCH\).) N
(251c226) N
(< *       NDISS   Tidal dissipations at pericentre \(option 27\).) N
(---) N
(> *       NDISS   Tidal dissipation at pericentre \(option 27\).) N
(253c228) N
(< *       NSYNC   Number of synchronous binaries \(option 27\).) N
(---) N
(> *       NSYNC   Number of synchronous binaries \(a < RSYNC; option 27\).) N
(258,265d232) N
(< *       NRG     Red giants.) N
(< *       NHE     Helium stars.) N
(< *       NRS     Red supergiants.) N
(< *       NNH     Naked Helium stars.) N
(< *       NWD     White dwarfs.) N
(< *       NSN     Neutron stars.) N
(< *       NBH     Black holes.) N
(< *       NBS     Blue stragglers.) N
(289,292c256) N
(< *      19       Circularizing binary \(c.m. value\).) N
(< *      20       Circularized binary.) N
(< *      21       First Roche stage \(inactive\).) N
(< *      22       Second Roche stage.) N
(---) N
(> *      20       Circularized binary \(c.m. value\).) N
(1,2c1,2) N
(< 2054 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/delay.f) N
(< nbody6compare/delay.f) N
(---) N
(> 1937 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/delay.f) N
(> nbody6++compare/delay.f) N
(27,31c27,28) N
(< *      Preserve contents of KSAVE during chain regularization.) N
(<           IF \(NCH.EQ.0\) THEN) N
(<               KSAVE\(1\) = 0) N
(<               KSAVE\(2\) = 0) N
(<           END IF) N
(---) N
(>           KSAVE\(1\) = 0) N
(>           KSAVE\(2\) = 0) N
(1,2c1,2) N
(< 7314 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/derqp3.f) N
(< nbody6compare/derqp3.f) N
(---) N
(> 7314 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/derqp3.f) N
(> nbody6++compare/derqp3.f) N
(1,2c1,2) N
(< 9994 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/derqp4.f) N
(OUT) (Page 57/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< nbody6compare/derqp4.f) p n
(---) N
(> 9994 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/derqp4.f) N
(> nbody6++compare/derqp4.f) N
(1,2c1,2) N
(< 11946 2006-09-07 19:29 /work/Umi2/spurzem/5/nbody6compare/derqp.f) N
(< nbody6compare/derqp.f) N
(---) N
(> 11676 2001-08-04 17:17 /work/Umi2/spurzem/5/nbody6++compare/derqp.f) N
(> nbody6++compare/derqp.f) N
(349c349) N
(<           IF \(ECC.LT.0.003.AND.IMCIRC.EQ.0.AND.VSTAR1.LT.100.0\) THEN) N
(---) N
(>           IF \(ECC.LT.0.003.AND.IMCIRC.EQ.0\) THEN) N
(411,417d410) N
(< *       Avoid apocentre region of secondary binary \(algorithmic confusion\).) N
(<           ELSE IF \(RB.GT.SEMI.AND.IMCIRC.GT.0\) THEN) N
(<               JC = 0) N
(<               ITER = 0) N
(<               IMCIRC = 0) N
(<               ICOLL = 0) N
(<               KCOLL = .false.) N
(433a427) N
(> ) N
(1,2c1,2) N
(< 3533 2004-05-11 13:03 /work/Umi2/spurzem/5/nbody6compare/difsy1.f) N
(< nbody6compare/difsy1.f) N
(---) N
(> 3497 1999-03-23 10:20 /work/Umi2/spurzem/5/nbody6++compare/difsy1.f) N
(> nbody6++compare/difsy1.f) N
(16c16) N
(<       PARAMETER  \(NMX=80,NMX7=7*NMX\)) N
(---) N
(>       PARAMETER  \(NMX=80\)) N
(25d24) N
(<       DATA DT /NMX7*0.0D0/) N
(64c63) N
(<       G=H/M) N
(---) N
(>       G=H/\(M\)) N
(1,2c1,2) N
(< 3215 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/difsy3.f) N
(< nbody6compare/difsy3.f) N
(---) N
(> 3180 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/difsy3.f) N
(> nbody6++compare/difsy3.f) N
(16c16) N
(<       PARAMETER  \(NMX=17,NMX7=7*NMX\)) N
(---) N
(>       PARAMETER  \(NMX=17\)) N
(23d22) N
(<       DATA DT /NMX7*0.0D0/) N
(61c60) N
(<       G=H/M) N
(---) N
(>       G=H/\(M\)) N
(125c124) N
(<       IF\(FYBAD\)THEN) N
(---) N
(>       IF\(FY BAD\)THEN) N
(1,2c1,2) N
(< 3200 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/difsy4.f) N
(< nbody6compare/difsy4.f) N
(---) N
(> 3165 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/difsy4.f) N
(> nbody6++compare/difsy4.f) N
(16c16) N
(<       PARAMETER  \(NMX=25,NMX7=7*NMX\)) N
(---) N
(OUT) (Page 58/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (29/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (59-60) 30
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       PARAMETER  \(NMX=25\)) p n
(23d22) N
(<       DATA DT /NMX7*0.0D0/) N
(61c60) N
(<       G=H/M) N
(---) N
(>       G=H/\(M\)) N
(125c124) N
(<       IF\(FYBAD\)THEN) N
(---) N
(>       IF\(FY BAD\)THEN) N
(1,2c1,2) N
(< 1503 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/efac2.f) N
(< nbody6compare/efac2.f) N
(---) N
(> 1504 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/efac2.f) N
(> nbody6++compare/efac2.f) N
(51a52) N
(> ) N
(1,2c1,2) N
(< 1510 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/efac3.f) N
(< nbody6compare/efac3.f) N
(---) N
(> 1511 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/efac3.f) N
(> nbody6++compare/efac3.f) N
(51a52) N
(> ) N
(1,2c1,2) N
(< 2484 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/endreg.f) N
(< nbody6compare/endreg.f) N
(---) N
(> 2484 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/endreg.f) N
(> nbody6++compare/endreg.f) N
(1,2c1,2) N
(< 2513 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/energy.f) N
(< nbody6compare/energy.f) N
(---) N
(> 2327 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/energy.f) N
(> nbody6++compare/energy.f) N
(9d8) N
(< *) N
(25,26c24,26) N
(<       I = 1) N
(<    20 JMIN = I + 1) N
(---) N
(> *) N
(>       DO 20 I = 1,NTOT) N
(>       JMIN = I + 1) N
(31a32,38) N
(> *) N
(>       IPAIR = 0) N
(>       IF \(I.GT.N\)  THEN) N
(> *       Binding energy at center of mass position without binary members) N
(>           IPAIR = I - N) N
(>       END IF) N
(> *) N
(32a40,41) N
(>       POTI = 0.D00) N
(> *       POTI contains potential at particles position to be stored later \(R.Sp) N
(.\)) N
(34,35c43,45) N
(<       DO 30 J = JMIN,N) N
(<           IF \(BODY\(J\).EQ.0.0D0\) GO TO 30) N
(---) N
(>       DO 30 J = 1,N) N
(>       IF \(J.EQ.I .OR. J.EQ.2*IPAIR-1 .OR. J.EQ.2*IPAIR .OR.) N
(>      *    BODY\(J\).EQ.0.0D0 .OR. BODY\(I\).EQ.0.0D0\)  GO TO 30) N
(39c49,52) N
(<           POTJ = POTJ + BODY\(J\)/SQRT\(A1*A1 + A2*A2 + A3*A3\)) N
(OUT) (Page 59/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>       A4 = BODY\(J\)/DSQRT \(A1*A1 + A2*A2 + A3*A3\)) N
(>       POTI = POTI - A4) N
(> *  also J.LT.N?) N
(>       IF\(J.GE.JMIN\)POTJ = POTJ + A4) N
(41c54,55) N
(< *) N
(---) N
(> *       Store potential in shared vector first \(R.Sp.\)) N
(>       PHIDBL\(I\) = POTI) N
(43,44c57) N
(<       I = I + 1) N
(<       IF \(I.LT.N\) GO TO 20) N
(---) N
(>    20 CONTINUE) N
(50a64) N
(> *) N
(53,57c67,69) N
(< *       Obtain the tidal potential energy for linearized external field. ) N
(<       IF \(KZ\(14\).EQ.0\) THEN) N
(< *       Note: ETIDE holds accumulated tidal energy if KZ\(14\) = 3.) N
(<           ETIDE = 0.0D0) N
(<       ELSE IF \(KZ\(14\).LE.2\) THEN) N
(---) N
(> *       Obtain the tidal potential if external field is present.) N
(>       ETIDE = 0.0D0) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(59,73d70) N
(<       ELSE IF \(KZ\(14\).EQ.4.OR.\(KZ\(14\).EQ.3.AND.MP.GT.0.0D0\)\) THEN) N
(< *       Include optional tidal energy and virial for Plummer potential.) N
(<           ETIDE = 0.0) N
(<           VIR = 0.0) N
(<           DO 50 I = 1,N) N
(<               RI2 = AP2) N
(<               DO 45 K = 1,3) N
(<                   RI2 = RI2 + X\(K,I\)**2) N
(<    45         CONTINUE) N
(<               FM = BODY\(I\)*MP/\(RI2*SQRT\(RI2\)\)) N
(<               DO 48 K = 1,3) N
(<                   VIR = VIR - FM*X\(K,I\)**2) N
(<    48         CONTINUE) N
(<               ETIDE = ETIDE - BODY\(I\)*MP/SQRT\(RI2\)) N
(<    50     CONTINUE) N
(1,2c1,2) N
(< 1715 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/erel3.f) N
(< nbody6compare/erel3.f) N
(---) N
(> 1715 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/erel3.f) N
(> nbody6++compare/erel3.f) N
(1,2c1,2) N
(< 1451 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/erel4.f) N
(< nbody6compare/erel4.f) N
(---) N
(> 1451 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/erel4.f) N
(> nbody6++compare/erel4.f) N
(1,2c1,2) N
(< 1523 1997-03-01 11:44 /work/Umi2/spurzem/5/nbody6compare/erel.f) N
(< nbody6compare/erel.f) N
(---) N
(> 1523 1997-03-01 11:44 /work/Umi2/spurzem/5/nbody6++compare/erel.f) N
(> nbody6++compare/erel.f) N
(1,2c1,2) N
(< 19463 2006-02-19 19:36 /work/Umi2/spurzem/5/nbody6compare/escape.f) N
(< nbody6compare/escape.f) N
(---) N
(> 18913 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/escape.f) N
(> nbody6++compare/escape.f) N
(0a1,4) N
(> # 1 "escape.F") N
(OUT) (Page 60/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (30/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (61-62) 31
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> # 1 "<built-in>") p n
(> # 1 "<command line>") N
(> # 1 "escape.F") N
(4,5c8,9) N
(< *       Escaper removal.) N
(< *       ----------------) N
(---) N
(> * Escaper removal.) N
(> * ----------------) N
(8,14c12,15) N
(<       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(<       CHARACTER*11  WHICH1) N
(<       LOGICAL  FIRST) N
(<       SAVE  FIRST) N
(<       DATA  FIRST /.TRUE./) N
(---) N
(>       COMMON/BINARY/ CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(>      & HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(>      & NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(>       CHARACTER*11 WHICH1) N
(17c18) N
(< *       Adopt twice the tidal radius as escape condition.) N
(---) N
(> * Adopt twice the tidal radius as escape condition.) N
(19c20,26) N
(<       IF \(KZ\(27\).EQ.3\) RESC2 = 1000.0) N
(---) N
(> * For tidal cutoff check only energy) N
(>       IF\(KZ\(23\).GE.3\)THEN) N
(>           RESC2 = 0.D0) N
(>           ETID = ZMASS/RTIDE) N
(>           ZMOLD = ZMASS) N
(>       END IF) N
(> *) N
(22a30) N
(>       NCRIT2 = 0) N
(29c37) N
(< *       Set the distance \(squared\) with respect to the density centre.) N
(---) N
(> * Set the distance \(squared\) with respect to the density centre.) N
(31,32c39,40) N
(<     5 RI2 = \(X\(1,I\) - RDENS\(1\)\)**2 + \(X\(2,I\) - RDENS\(2\)\)**2 + ) N
(<      &                               \(X\(3,I\) - RDENS\(3\)\)**2) N
(---) N
(>     5 RI2 = \(X\(1,I\) - RDENS\(1\)\)**2 + \(X\(2,I\) - RDENS\(2\)\)**2 +) N
(>      & \(X\(3,I\) - RDENS\(3\)\)**2) N
(34d41) N
(<       VI2 = XDOT\(1,I\)**2 + XDOT\(2,I\)**2 + XDOT\(3,I\)**2) N
(36c43,44) N
(< *       See whether escape is indicated \(retain ghost particles\).) N
(---) N
(>       IF\(KZ\(23\).LE.2\) THEN) N
(> * See whether escape is indicated \(retain ghost particles\).) N
(39c47) N
(< *       Find distance to the nearest neighbour and calculate potential.) N
(---) N
(> * Find distance to the nearest neighbour and calculate potential.) N
(44c52) N
(<      &                                      \(X\(3,I\) - X\(3,J\)\)**2) N
(---) N
(>      & \(X\(3,I\) - X\(3,J\)\)**2) N
(50c58) N
(<     8     CONTINUE) N
(---) N
(>     8 CONTINUE) N
(52c60) N
(< *       Check escape criterion for external fields or isolated system.) N
(OUT) (Page 61/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Check escape criterion for tidal case or isolated system.) N
(54,55c62,88) N
(<           IF \(KZ\(14\).EQ.4.OR.KZ\(14\).EQ.3\) THEN) N
(<               EI = EI - MP/SQRT\(RI2 + AP2\)) N
(---) N
(>           IF \(KZ\(14\).GT.0.OR.EI.GT.0.0\) GO TO 30) N
(>           IF \(NAME\(I\).LT.0\) GO TO 30) N
(>       END IF) N
(> *) N
(>       ELSE) N
(> * Check tidal cutoff criterion - use last computed phi-value) N
(> * Find distance to the nearest neighbour) N
(>           POTI = 0.0D0) N
(>           NNB = LIST\(1,I\)) N
(>           RJMIN2 = 1.0D+10) N
(>           DO 9 L = 1,NNB) N
(>               J = LIST\(L+1,I\)) N
(>               RIJ2 = \(X\(1,I\) - X\(1,J\)\)**2 + \(X\(2,I\) - X\(2,J\)\)**2 +) N
(>      & \(X\(3,I\) - X\(3,J\)\)**2) N
(>               IF \(RIJ2.LT.RJMIN2\) THEN) N
(>                   RJMIN2 = RIJ2) N
(>                   JMIN = J) N
(>               END IF) N
(>     9 CONTINUE) N
(>           VI2 = XDOT\(1,I\)**2 + XDOT\(2,I\)**2 + XDOT\(3,I\)**2) N
(>           POTI = -PHIDBL\(I\)) N
(> * Check escape criterion for tidal case or isolated system.) N
(>           EI = 0.5*VI2 - POTI + ETID) N
(> *) N
(>           IF \(EI.GT.0.0.AND.RI2.GT.RTIDE2\) THEN) N
(>           NCRIT2 = NCRIT2 + 1) N
(>           GO TO 30) N
(57d89) N
(<           IF \(\(KZ\(14\).GT.0.AND.KZ\(14\).NE.4\).OR.EI.GT.0.0\) GO TO 30) N
(66c98) N
(< *       Form centre of mass terms.) N
(---) N
(> * Form centre of mass terms.) N
(71c103) N
(<    14     CONTINUE) N
(---) N
(>    14 CONTINUE) N
(75,78c107,110) N
(<       STEPI = MIN\(STEPI,1.0D0\)) N
(<       JLAST = MIN\(NCORR,NMAX\)) N
(<       WRITE \(6,18\)  N, NSESC, NBESC, ZMASS, BE\(3\), CMR\(4\), RESC, STEPI,) N
(<      &              RSI, ZMASS/FLOAT\(N\), NCRIT1, \(JLIST\(J\),J=1,JLAST\)) N
(---) N
(>       JLAST = MIN\(2*NCORR,NMAX\)) N
(>       if\(rank.eq.0\)) N
(>      &WRITE \(6,18\) N, NSESC, NBESC, ZMASS, BE\(3\), CMR\(4\), RESC, STEPI,) N
(>      & RSI, ZMASS/FLOAT\(N\), NCRIT1, \(JLIST\(J\),J=1,JLAST\)) N
(80c112) N
(<      &                                        I6,2X,6I6,/,5\(10X,20I6,/\)\)) N
(---) N
(>      & I6,2X,6I6,/,5\(10X,20I6,/\)\)) N
(82,85c114,117) N
(<       IF \(KZ\(23\).EQ.2.AND.KZ\(14\).EQ.1\) THEN) N
(<           JLAST = MIN\(2*NCORR,LMAX\)) N
(<           WRITE \(6,20\)  \(ILIST\(J\),J=1,JLAST\)) N
(<    20     FORMAT \(/,' ESCAPE ANGLES ',11\(2I4,2X\),9\(/,15X,11\(2I4,2X\)\)\)) N
(---) N
(>       IF \(KZ\(23\).EQ.2.OR.KZ\(23\).EQ.4\)THEN) N
(>           JLAST = MIN\(2*NCORR,NMAX\)) N
(>           if\(rank.eq.0\) WRITE \(6,20\) \(ILIST\(J\),J=1,JLAST\)) N
(>    20 FORMAT \(/,' ESCAPE ANGLES ',11\(2I4,2X\),9\(/,15X,11\(2I4,2X\)\)\)) N
(88c120) N
(< *       Check updating of global index for chain c.m.) N
(OUT) (Page 62/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (31/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (63-64) 32
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Check updating of global index for chain c.m.) N
(93c125) N
(< *       Set phase indicator < 0 for new NLIST in routine INTGRT \(Hermite\).) N
(---) N
(> * Set phase indicator < 0 for new NLIST in routine INTGRT \(Hermite\).) N
(99,100c131,132) N
(<      &                                 \(X\(3,JMIN\) - RDENS\(3\)\)**2) N
(< *       See whether nearest body satisfies escape condition or RIJ > 10*RMIN.) N
(---) N
(>      & \(X\(3,JMIN\) - RDENS\(3\)\)**2) N
(> * See whether nearest body satisfies escape condition or RIJ > 10*RMIN.) N
(102a135,141) N
(> *) N
(>       IF\(KZ\(23\).GE.3\)THEN) N
(>           VI2 = XDOT\(1,JMIN\)**2 + XDOT\(2,JMIN\)**2 + XDOT\(3,JMIN\)**2) N
(>           EI = 0.5*VI2 + PHIDBL\(JMIN\) + ETID) N
(>           IF\(EI.GT.0.D0\) GO TO 40) N
(>       END IF) N
(> *) N
(105,106c144,145) N
(<      &     \(XDOT\(2,I\) - XDOT\(2,JMIN\)\)**2 +) N
(<      &     \(XDOT\(3,I\) - XDOT\(3,JMIN\)\)**2) N
(---) N
(>      & \(XDOT\(2,I\) - XDOT\(2,JMIN\)\)**2 +) N
(>      & \(XDOT\(3,I\) - XDOT\(3,JMIN\)\)**2) N
(108c147) N
(< *       Check velocity of binary component in case of bound pair.) N
(---) N
(> * Check velocity of binary component in case of bound pair.) N
(111c150) N
(< *       Retain escaper if dynamical effect on neighbour is significant.) N
(---) N
(> * Retain escaper if dynamical effect on neighbour is significant.) N
(114c153) N
(< *       Form optional output diagnostics.) N
(---) N
(> * Form optional output diagnostics.) N
(122c161) N
(< *       Escape angles with respect to the X-axis and XY-plane.) N
(---) N
(> * Escape angles with respect to the X-axis and XY-plane.) N
(127c166) N
(< *       Accumulate escaper names and save current name in case I > N.) N
(---) N
(> * Accumulate escaper names and save current name in case I > N.) N
(135,140c174) N
(< *       Check initialization of tidal tail integration for 3D model.) N
(<       IF \(KZ\(23\).GE.3.AND.KZ\(14\).EQ.3\) THEN) N
(<           CALL TAIL0\(I\)) N
(<       END IF) N
(< *) N
(< *       Obtain binding energy of body #I and update optional tidal radius.) N
(---) N
(> * Obtain binding energy of body #I and update optional tidal radius.) N
(142c176) N
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LT.3\) THEN) N
(---) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(146,149d179) N
(<       ELSE IF \(KZ\(14\).EQ.4.OR.KZ\(14\).EQ.3\) THEN) N
(< *       Include optional Plummer sphere and update tidal radius.) N
(<           POTI = POTI + MP/SQRT\(RI2 + AP2\)) N
(<           RTIDE = RTIDE0*ZMASS**0.3333) N
(153c183,189) N
(< *       Correct total energy \(also ZKIN & POT for consistency\).) N
(---) N
(> * Update tidal radius in case of tidal cutoff \(R.Sp.\)) N
(>       IF\(KZ\(23\).GE.3\)THEN) N
(OUT) (Page 63/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           RTOLD = RTIDE) p n
(>           RTIDE = RTIDE*\(ZMASS/ZMOLD\)**0.3333) N
(>       END IF) N
(> *) N
(> * Correct total energy.) N
(155,156d190) N
(<       ZKIN = ZKIN - ZK) N
(<       POT = POT - BODY\(I\)*POTI) N
(158c192) N
(< *       Update total mass and save energy & number of single escapers.) N
(---) N
(> * Update total mass and save energy & number of single escapers.) N
(166,171c200,201) N
(< *       Include optional escape output on unit 11.) N
(<       IF \(KZ\(23\).GT.1\) THEN) N
(<           IF \(FIRST\) THEN) N
(<               OPEN \(UNIT=11,STATUS='NEW',FORM='FORMATTED',FILE='ESC'\)) N
(<               FIRST = .FALSE.) N
(<           END IF) N
(---) N
(> * Include optional escape output on unit 11.) N
(>       IF \(KZ\(23\).EQ.2.OR.KZ\(23\).EQ.4\) THEN) N
(175,176c205,206) N
(< *       Distinguish between tidal field and isolated system \(ECRIT at RTIDE\).) N
(<           IF \(KZ\(14\).GT.0.AND.KZ\(14\).LE.2\) THEN) N
(---) N
(> * Distinguish between tidal field and isolated system \(ECRIT at RTIDE\).) N
(>           IF \(KZ\(14\).GT.0\) THEN) N
(186,188c216,223) N
(<           WRITE \(11,45\)  TESC, BESC, EESC, VKM, KSTARI, NAME\(I\)) N
(<    45     FORMAT \(F8.1,3F6.1,I4,I6\)) N
(<           CALL FLUSH\(11\)) N
(---) N
(> ) N
(> ) N
(> ) N
(>           WRITE \(11,45\) TESC, BESC, EESC, VKM, KSTARI) N
(>    45 FORMAT \(F8.1,3F6.1,I4\)) N
(> ) N
(> ) N
(> ) N
(191c226) N
(< *       Reduce particle number & total membership and check NNBMAX.) N
(---) N
(> * Reduce particle number & total membership and check NNBMAX.) N
(194,197c229,232) N
(<       NNBMAX = MIN\(\(N - NPAIRS\)/2,NNBMAX\)) N
(<       ZNBMAX = 0.9*NNBMAX) N
(<       ZNBMIN = MAX\(0.2*NNBMAX,1.0\)) N
(< *       Set indicator for removal of c.m. or KS components.) N
(---) N
(>       NNBMAX = MIN\(N/2,NNBMAX\)) N
(>       ZNBMAX = 0.9*FLOAT\(NNBMAX\)) N
(>       ZNBMIN = MAX\(0.01*FLOAT\(NNBMAX\),1.0\)) N
(> * Set indicator for removal of c.m. or KS components.) N
(200c235) N
(< *       Update COMMON arrays to remove the escaper and correct F & FDOT.) N
(---) N
(> * Update COMMON arrays to remove the escaper and correct F & FDOT.) N
(203c238) N
(< *       Delete escaper from neighbour lists and reduce higher locations.) N
(---) N
(> * Delete escaper from neighbour lists and reduce higher locations.) N
(208c243) N
(<    70     IF \(LIST\(L,J\).NE.I\) GO TO 130) N
(---) N
(>    70 IF \(LIST\(L,J\).NE.I\) GO TO 130) N
(210c245) N
(< *       Move up the remaining list members and reduce membership by one.) N
(OUT) (Page 64/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (32/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (65-66) 33
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Move up the remaining list members and reduce membership by one.) N
(213c248) N
(<    80     CONTINUE) N
(---) N
(>    80 CONTINUE) N
(215,221c250,256) N
(< *       Reduce the steps to minimize error effect \(do not allow DT < 0\).) N
(< *         STEP\(J\) = MAX\(0.5D0*STEP\(J\),TIME - T0\(J\)\)) N
(< *         STEPR\(J\) = MAX\(0.5D0*STEPR\(J\),TIME - T0R\(J\)\)) N
(< *       Add body #J to time-step list unless already a member. ) N
(< *         IF \(T0\(J\) + STEP\(J\).LT.TLIST\) THEN) N
(< *             CALL NLMOD\(J,1\)) N
(< *         END IF) N
(---) N
(> * Reduce the steps to minimize error effect \(do not allow DT < 0\).) N
(> * STEP\(J\) = MAX\(0.5D0*STEP\(J\),TIME - T0\(J\)\)) N
(> * STEPR\(J\) = MAX\(0.5D0*STEPR\(J\),TIME - T0R\(J\)\)) N
(> * Add body #J to time-step list unless already a member.) N
(> * IF \(T0\(J\) + STEP\(J\).LT.TLIST\) THEN) N
(> * CALL NLMOD\(J,1\)) N
(> * END IF) N
(224c259) N
(< *       Add a distant body as neighbour if list only contains escaper.) N
(---) N
(> * Add a distant body as neighbour if list only contains escaper.) N
(226c261) N
(<   100     K = K + 1) N
(---) N
(>   100 K = K + 1) N
(228c263) N
(<      &                                  \(X\(3,J\) - X\(3,K\)\)**2) N
(---) N
(>      & \(X\(3,J\) - X\(3,K\)\)**2) N
(234,235c269,270) N
(< *       Reduce higher particle locations by one.) N
(<   130     IF \(LIST\(L,J\).GT.I\) LIST\(L,J\) = LIST\(L,J\) - 1) N
(---) N
(> * Reduce higher particle locations by one.) N
(>   130 IF \(LIST\(L,J\).GT.I\) LIST\(L,J\) = LIST\(L,J\) - 1) N
(240c275) N
(< *       Modify time-step list due to escaper removal \(-2 for extra test\).) N
(---) N
(> * Modify time-step list due to escaper removal \(-2 for extra test\).) N
(243c278) N
(< *       Update list of old KS components \(remove #I and rename > I\).) N
(---) N
(> * Update list of old KS components \(remove #I and rename > I\).) N
(247c282) N
(< *       Remove both components of pair and reduce membership by two.) N
(---) N
(> * Remove both components of pair and reduce membership by two.) N
(251c286) N
(<   165         CONTINUE) N
(---) N
(>   165 CONTINUE) N
(256c291) N
(< *       Reduce higher particle locations by one \(separate loop for pairs\).) N
(---) N
(> * Reduce higher particle locations by one \(separate loop for pairs\).) N
(261,263c296,298) N
(< *       Update list of high velocity particles \(remove #I and rename > I\).) N
(<       NNV = LISTV\(1\)) N
(<       DO 190 L = 2,NNV+1) N
(---) N
(> * Update list of high velocity particles \(remove #I and rename > I\).) N
(>       NNB = LISTV\(1\)) N
(>       DO 190 L = 2,NNB+1) N
(265,266c300,301) N
(OUT) (Page 65/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Remove escaper and reduce the membership.) p n
(<               DO 185 K = L,NNV) N
(---) N
(> * Remove escaper and reduce the membership.) N
(>               DO 185 K = L,NNB) N
(268c303) N
(<   185         CONTINUE) N
(---) N
(>   185 CONTINUE) N
(271c306) N
(< *       Reduce higher particle locations by one \(or three for c.m.\).) N
(---) N
(> * Reduce higher particle locations by one \(or three for c.m.\).) N
(278c313) N
(< *       Check special case of second KS component removal.) N
(---) N
(> * Check special case of second KS component removal.) N
(281c316) N
(< *       See whether the escaper is a single particle or c.m.) N
(---) N
(> * See whether the escaper is a single particle or c.m.) N
(284c319) N
(< *       Prepare removal of regularized pair.) N
(---) N
(> * Prepare removal of regularized pair.) N
(287c322) N
(< *       Skip correction if ghost is also merged binary \(NAMEI = 0 below\).) N
(---) N
(> * Skip correction if ghost is also merged binary \(NAMEI = 0 below\).) N
(295c330) N
(<           PMIN  = SEMI*\(1.0 - ECC\)) N
(---) N
(>           PMIN = SEMI*\(1.0 - ECC\)) N
(301c336) N
(< *       Obtain two-body elements of ghost binary and update energies.) N
(---) N
(> * Obtain two-body elements of ghost binary and update energies.) N
(316c351) N
(< *       Update total energy \(ECOLL with EB < -1 & #27 > 0 affects BINOUT\).) N
(---) N
(> * Update total energy \(ECOLL with EB < -1 & #27 > 0 affects BINOUT\).) N
(318d352) N
(<       EBIN = EBIN - EB) N
(320c354) N
(< *       Check optional diagnostics for hierarchical systems.) N
(---) N
(> * Check optional diagnostics for hierarchical systems.) N
(326c360,364) N
(< *       Distinguish between actual and ghost binary \(mergers come later\).) N
(---) N
(> * Specify binary type \(0: standard; -1: merged binary\).) N
(>       M = 0) N
(>       IF \(NAMEI.LE.0\) M = -1) N
(> *) N
(> * Distinguish between actual and ghost binary \(mergers come later\).) N
(330c368) N
(< *       Include rare case of higher-order system \(4, 5 or 6 members\).) N
(---) N
(> * Include rare case of higher-order system \(4, 5 or 6 members\).) N
(335c373) N
(<   195         CONTINUE) N
(---) N
(>   195 CONTINUE) N
(339,340c377,378) N
(<   196         CONTINUE) N
(< *       Identify quartet, quintuplet or sextuplet.) N
(---) N
(>   196 CONTINUE) N
(> * Identify quartet, quintuplet or sextuplet.) N
(OUT) (Page 66/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (33/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (67-68) 34
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(343c381) p n
(< *       Include both types of quintuplet: [[B,S],B] and [[B,B],S].) N
(---) N
(> * Include both types of quintuplet: [[B,S],B] and [[B,B],S].) N
(351d388) N
(<               ZM3 = \(CM\(3,JM\) + CM\(4,JM\)\)*ZMBAR) N
(355,360c392,396) N
(<               WRITE \(6,199\)  WHICH1, NAME\(2*IPAIR-1\), NAME\(2*IPAIR\),) N
(<      &                       NAME\(I3HJ\), ZM1, ZM2, ZM3, EB3, SEMI3, PB3) N
(<   199         FORMAT \(/,A11,' ESCAPE    NM =',3I6,'  M =',3F6.2,) N
(<      &                    '  EB3 =',F8.4,'  A3 =',1P,E8.1,'  P3 =',E8.1\)) N
(< *       Copy actual name of outer component for KS binary output.) N
(<               NAME2 = NAME\(I3HJ\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      & WRITE \(6,199\) WHICH1, NAME\(2*IPAIR-1\), NAME\(2*IPAIR\),) N
(>      & NAME\(I3HJ\), ZM1, ZM2, EB3, SEMI3, PB3) N
(>   199 FORMAT \(/,A11,' ESCAPE    NM =',3I6,'  M =',2F5.1,) N
(>      & '  EB3 =',F8.4,'  A3 =',1P,E8.1,'  P3 =',E8.1\)) N
(363,371c399,409) N
(<           VI = SQRT\(0.5*VI2*ZMASS/ABS\(ZKIN\)\)) N
(<           WRITE \(6,200\)  IPAIR, NAME\(2*IPAIR-1\), NAME2,) N
(<      &                   KSTAR\(2*IPAIR-1\), KSTAR\(2*IPAIR\), KSTARI,) N
(<      &                   LIST\(2,2*IPAIR\), BODY\(2*IPAIR-1\)*ZMBAR,) N
(<      &                   BODY\(2*IPAIR\)*ZMBAR, EB, RATIO, VI, ECC, EI, PB) N
(<   200     FORMAT \(/,' BINARY ESCAPE    KS =',I5,'  NM =',2I6,) N
(<      &                '  K* =',4I3,'  M =',2F5.1,'  EB =',F8.4,) N
(<      &                '  R*/PM =',F5.2,'  V/<V> =',F5.2,'  E =',F5.2,) N
(<      &                '  EI =',F8.5,'  P =',1P,E8.1\)) N
(---) N
(>           if\(rank.eq.0\)then) N
(>           VI = SQRT\(0.5*VI2*ZMASS/ZKIN\)) N
(>           WRITE \(6,200\) IPAIR, NAME\(2*IPAIR-1\), NAME2,) N
(>      & KSTAR\(2*IPAIR-1\), KSTAR\(2*IPAIR\), KSTARI,) N
(>      & LIST\(2,2*IPAIR\), BODY\(2*IPAIR-1\)*ZMBAR,) N
(>      & BODY\(2*IPAIR\)*ZMBAR, EB, RATIO, VI, ECC, EI, PB) N
(>   200 FORMAT \(/,' BINARY ESCAPE    KS =',I5,'  NM =',2I6,) N
(>      & '  K* =',4I3,'  M =',2F5.1,'  EB =',F8.4,) N
(>      & '  R*/PM =',F5.2,'  V/<V> =',F5.2,'  E =',F5.2,) N
(>      & '  EI =',F8.5,'  P =',1P,E8.1\)) N
(>           end if) N
(373,378c411,417) N
(<           WRITE \(6,202\)  IPAIR, NAME\(2*IPAIR-1\), NAME\(2*IPAIR\),) N
(<      &                   KSTAR\(2*IPAIR-1\), KSTAR\(2*IPAIR\), KSTAR\(I\),) N
(<      &                   CM\(3,IM\)*SMU, CM\(4,IM\)*SMU, EB1, ECC, SEMI, PB) N
(<   202     FORMAT \(/,' QUAD ESCAPE    KS =',I5,'  NM =',2I6,) N
(<      &                '  K* =',3I3,'  M =',2F5.1,'  EB =',F8.4,) N
(<      &                '  E =',F7.3,'  A =',1P,E8.1,'  P =',E8.1\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      & WRITE \(6,202\) IPAIR, NAME\(2*IPAIR-1\), NAME\(2*IPAIR\),) N
(>      & LIST\(2,2*IPAIR\), KSTAR\(JM\), CM\(3,IM\)*ZMBAR,) N
(>      & CM\(4,IM\)*ZMBAR, EB1, ECC, SEMI, PB) N
(>   202 FORMAT \(/,' QUAD ESCAPE    KS =',I5,'  NM =',2I6,) N
(>      & '  K* =',2I3,'  M =',2F5.1,'  EB =',F8.4,) N
(>      & '  E =',F7.3,'  A =',1P,E8.1,'  P =',E8.1\)) N
(383c422) N
(< *       Accumulate escaping binary energies and increase the counter.) N
(---) N
(> * Accumulate escaping binary energies and increase the counter.) N
(394c433) N
(<       IF \(NAMEI.GT.0\) THEN) N
(---) N
(>       IF \(M.EQ.0\) THEN) N
(400c439) N
(< *       Reduce particle number, pair index & single particle index. ) N
(---) N
(> * Reduce particle number, pair index & single particle index.) N
(405c444) N
(OUT) (Page 67/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Move up all tables of regularized pairs below IPAIR.) p n
(---) N
(> * Move up all tables of regularized pairs below IPAIR.) N
(410c449) N
(< *       Increase index for removing KS components.) N
(---) N
(> * Increase index for removing KS components.) N
(413c452) N
(< *       Remove COMMON arrays of the second component before the first.) N
(---) N
(> * Remove COMMON arrays of the second component before the first.) N
(416c455) N
(< *       Reduce NTOT by 3 and N by 2 when KS pair escapes.) N
(---) N
(> * Reduce NTOT by 3 and N by 2 when KS pair escapes.) N
(421c460) N
(< *       Check selection of possible ghost in higher-order system.) N
(---) N
(> * Check selection of possible ghost in higher-order system.) N
(428c467) N
(<   208     CONTINUE) N
(---) N
(>   208 CONTINUE) N
(435c474) N
(< *       Include the case of escaping merger.) N
(---) N
(> * Include the case of escaping merger.) N
(438c477) N
(< *       Locate current position in the merger table \(standard case\).) N
(---) N
(> * Locate current position in the merger table \(standard case\).) N
(443c482) N
(< *       Skip on failed detection just in case.) N
(---) N
(> * Skip on failed detection just in case.) N
(446c485) N
(< *       Include case of higher-order system \(outer single or binary\).) N
(---) N
(> * Include case of higher-order system \(outer single or binary\).) N
(449c488) N
(< *       Determine the ghost index.) N
(---) N
(> * Determine the ghost index.) N
(453,454c492,493) N
(<   215     CONTINUE) N
(< *       Specify nominal escape distance for ghost removal.) N
(---) N
(>   215 CONTINUE) N
(> * Specify nominal escape distance for ghost removal.) N
(456c495) N
(< *       Define possible KS pair index for quadruple system correction.) N
(---) N
(> * Define possible KS pair index for quadruple system correction.) N
(460c499) N
(< *       Consider current ghost unless deeper hierarchy is present.) N
(---) N
(> * Consider current ghost unless deeper hierarchy is present.) N
(463c502) N
(< *       Search for c.m. name one level below current \(NAMEI < 0\).) N
(---) N
(> * Search for c.m. name one level below current \(NAMEI < 0\).) N
(467,468c506,507) N
(<   220         CONTINUE) N
(< *       Use previous merger index to look for binary ghost at earlier level.) N
(---) N
(>   220 CONTINUE) N
(> * Use previous merger index to look for binary ghost at earlier level.) N
(472c511) N
(<   225         CONTINUE) N
(OUT) (Page 68/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (34/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (69-70) 35
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>   225 CONTINUE) N
(476c515) N
(< *       Adopt original solution on failure to identify binary.) N
(---) N
(> * Adopt original solution on failure to identify binary.) N
(479c518) N
(< *       Set nominal escape distance of any new ghost \(I3HI <= N possible\).) N
(---) N
(> * Set nominal escape distance of any new ghost \(I3HI <= N possible\).) N
(484c523) N
(< *       Copy merger energy to respective energy bins \(primordial or new\).) N
(---) N
(> * Copy merger energy to respective energy bins \(primordial or new\).) N
(492c531) N
(< *       Reduce membership if IM is last \(otherwise done in RESET\).) N
(---) N
(> * Reduce membership if IM is last \(otherwise done in RESET\).) N
(497c536) N
(< *       Identify merged ghost particle \(single body or binary c.m.\).) N
(---) N
(> * Identify merged ghost particle \(single body or binary c.m.\).) N
(502c541) N
(< *       Include search over lower level on failed identification.) N
(---) N
(> * Include search over lower level on failed identification.) N
(506c545) N
(<   232     CONTINUE) N
(---) N
(>   232 CONTINUE) N
(509c548) N
(< *       Skip if correct ghost not identified \(note I3HI # JCOMP if JM # IM\).) N
(---) N
(> * Skip if correct ghost not identified \(note I3HI # JCOMP if JM # IM\).) N
(512c551) N
(< *       Form two-body elements and period of inner binary.) N
(---) N
(> * Form two-body elements and period of inner binary.) N
(522c561) N
(< *       Include extra corrections for mergers between binary pairs.) N
(---) N
(> * Include extra correction for mergers between binary pairs.) N
(528c567,568) N
(<               IF \(JM.EQ.NMERGE\) NMERGE = NMERGE - 1) N
(---) N
(> * Copy smaller index for QUAD binary output.) N
(>               IM = JM) N
(535c575) N
(<   235     CONTINUE) N
(---) N
(>   235 CONTINUE) N
(542,547c582,588) N
(<           WRITE \(6,240\)  NAME1, NAMEG\(JM\), KSTAR1, KSTAR\(JCOMP\),) N
(<      &                   KSTARM\(JM\), CM\(1,JM\)*ZMBAR, CM\(2,JM\)*ZMBAR,) N
(<      &                   EB, ECC0, PMIN/PCRIT, SEMI0, PB) N
(<   240     FORMAT \(/,' HIARCH ESCAPE    NM =',2I6,'  K* =',3I3,) N
(<      &              '  M =',2F5.1,'  EB =',F8.4,'  E =',F7.3,) N
(<      &              '  PM/PC =',1P,E8.1,'  A =',E8.1,'  P =',E8.1\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      & WRITE \(6,240\) NAME1, NAMEG\(JM\), KSTAR1, KSTAR\(JCOMP\),) N
(>      & KSTARM\(JM\), CM\(1,JM\)*ZMBAR, CM\(2,JM\)*ZMBAR,) N
(>      & EB, ECC0, PMIN/PCRIT, SEMI0, PB) N
(>   240 FORMAT \(/,' HIARCH ESCAPE    NM =',2I6,'  K* =',3I3,) N
(>      & '  M =',2F5.1,'  EB =',F8.4,'  E =',F7.3,) N
(>      & '  PM/PC =',1P,E8.1,'  A =',E8.1,'  P =',E8.1\)) N
(549c590) N
(< *       Remove the ghost particle \(NAME = 0 & EB = 0 for second binary\).) N
(---) N
(OUT) (Page 69/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * Remove the ghost particle \(NAME = 0 & EB = 0 for second binary\).) p n
(1,2c1,2) N
(< 2030 2006-02-15 19:32 /work/Umi2/spurzem/5/nbody6compare/events.f) N
(< nbody6compare/events.f) N
(---) N
(> 2106 2005-03-11 12:58 /work/Umi2/spurzem/5/nbody6++compare/events.f) N
(> nbody6++compare/events.f) N
(28c28) N
(<           WRITE \(6,15\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(6,15\)) N
(32c32,33) N
(<           WRITE \(6,20\)  NMDOT, NRG, NHE, NRS, NNH, NWD, NSN, NBH, NBS,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  NMDOT, NRG, NHE, NRS, NNH, NWD, NSN, NBH, NBS,) N
(57c58) N
(<           WRITE \(6,30\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(6,30\)) N
(60c61,62) N
(<           WRITE \(6,35\)  NDISS, NTIDE, NSYNC, NCOLL, EBIN, ECOLL,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,35\)  NDISS, NTIDE, NSYNC, NCOLL, EBIN, ECOLL,) N
(67a70,71) N
(> ) N
(> ) N
(1,2c1,2) N
(< 8664 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/evolve.f) N
(< nbody6compare/evolve.f) N
(---) N
(> 8856 2005-03-11 16:10 /work/Umi2/spurzem/5/nbody6++compare/evolve.f) N
(> nbody6++compare/evolve.f) N
(7a8) N
(> *) N
(16c17) N
(< *     NBSTAT = NBSTAT + 1) N
(---) N
(>       NBSTAT = NBSTAT + 1) N
(54a56) N
(>       if\(rank.eq.0\)then) N
(62a65) N
(>       end if) N
(103c106,107) N
(<               WRITE \(4,100\)  NAME\(J\), EB, SEMIJ, ECCJ, RIJ, GEFF, P,RDOT) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(4,100\)  NAME\(J\), EB, SEMIJ, ECCJ, RIJ, GEFF, P,RDOT) N
(125c129) N
(<           WRITE \(4,100\)  NAME\(JMIN\), \(WORK\(K\),K=1,7\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(4,100\)  NAME\(JMIN\), \(WORK\(K\),K=1,7\)) N
(224c228,229) N
(<               WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(230c235,236) N
(<               WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(236c242,243) N
(<               WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(244c251,252) N
(OUT) (Page 70/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (35/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (71-72) 36
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) p n
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(4,50\)  LEVEL, TIME, NAME\(I\), NAME\(J2\), EB, SEMI,) N
(1,2c1,2) N
(< 1858 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/expand.f) N
(< nbody6compare/expand.f) N
(---) N
(> 1859 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/expand.f) N
(> nbody6++compare/expand.f) N
(60a61) N
(> ) N
(1,2c1,2) N
(< 2378 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/extend.f) N
(< nbody6compare/extend.f) N
(---) N
(> 2378 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/extend.f) N
(> nbody6++compare/extend.f) N
(1,2c1,2) N
(< 2345 2005-11-01 19:11 /work/Umi2/spurzem/5/nbody6compare/fchain.f) N
(< nbody6compare/fchain.f) N
(---) N
(> 1636 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/fchain.f) N
(> nbody6++compare/fchain.f) N
(10c10) N
(<       REAL*8  XI\(3\),XIDOT\(3\),DX\(3\),DV\(3\),FIRR\(3\),FD\(3\),XIS\(3\),VIS\(3\)) N
(---) N
(>       REAL*8  XI\(3\),XIDOT\(3\),DX\(3\),DV\(3\),FIRR\(3\),FD\(3\)) N
(13,28c13) N
(< *       Use c.m. values for correction of perturbed KS \(call from KCPERT\).) N
(<       I2 = 0) N
(<       IF \(I.LT.IFIRST\) THEN) N
(<           IPAIR = KVEC\(I\)) N
(<           IF \(I.EQ.2*IPAIR\) I2 = 1) N
(<           ICM = N + IPAIR) N
(< *       Save local variables for individual chain contributions.) N
(<           DO 1 K = 1,3) N
(<               XIS\(K\) = XI\(K\)) N
(<               VIS\(K\) = XIDOT\(K\)) N
(<               XI\(K\) = X\(K,ICM\)) N
(<               XIDOT\(K\) = XDOT\(K,ICM\)) N
(<     1     CONTINUE) N
(<       END IF) N
(< *) N
(< *       Evaluate terms for the original chain c.m. interaction.) N
(---) N
(> *       Subtract chain c.m. force from the current value \(I =< N\).) N
(41c26) N
(< *       Subtract force and first derivative from current values.) N
(---) N
(> *       Subtract force & first derivative.) N
(47,54d31) N
(< *       Restore XI & XIDOT for KS components \(perturbed case\).) N
(<       IF \(I.LT.IFIRST\) THEN) N
(<           DO 12 K = 1,3) N
(<               XI\(K\) = XIS\(K\)) N
(<               XIDOT\(K\) = VIS\(K\)) N
(<    12     CONTINUE) N
(<       END IF) N
(< *) N
(56c33) N
(<       IF \(IR.EQ.0.AND.I2.EQ.0\) THEN) N
(---) N
(>       IF \(IR.EQ.0\) THEN) N
(1,2c1,2) N
(< 1132 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fclose.f) N
(< nbody6compare/fclose.f) N
(---) N
(> 1132 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/fclose.f) N
(OUT) (Page 71/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> nbody6++compare/fclose.f) p n
(1,2c1,2) N
(< 1939 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fcloud.f) N
(< nbody6compare/fcloud.f) N
(---) N
(> 1929 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/fcloud.f) N
(> nbody6++compare/fcloud.f) N
(28c28) N
(<               A9 = 3.0*\(A\(1\)*A\(4\) + A\(2\)*A\(5\) + A\(3\)*A\(6\)\)/RIJ2) N
(---) N
(>               A9 = 3.0*\(A\(1\)*A\(4\) + A\(2\)*A\(5\) + A\(3\)*A\(6\)\)) N
(47c47) N
(<               A9 = 3.0*\(A\(1\)*A\(4\) + A\(2\)*A\(5\) + A\(3\)*A\(6\)\)/RIJ2) N
(---) N
(>               A9 = 3.0*\(A\(1\)*A\(4\) + A\(2\)*A\(5\) + A\(3\)*A\(6\)\)) N
(1,2c1,2) N
(< 4175 2006-09-27 18:09 /work/Umi2/spurzem/5/nbody6compare/fcorr.f) N
(< nbody6compare/fcorr.f) N
(---) N
(> 4229 2000-04-13 20:22 /work/Umi2/spurzem/5/nbody6++compare/fcorr.f) N
(> nbody6++compare/fcorr.f) N
(4,5c4,5) N
(< *       Total force corrections due to masss loss.) N
(< *       ------------------------------------------) N
(---) N
(> *       Total force corrections due to mass loss.) N
(> *       -----------------------------------------) N
(86c86) N
(< *       Use neighbour list of #J to distinguish irregular & regular terms.) N
(---) N
(> *       Use neighbour list to distinguish irregular & regular terms.) N
(88c88) N
(<           DO 25 L = 2,NNB1) N
(---) N
(>           DO 30 L = 2,NNB1) N
(96a97,110) N
(> *       Reduce the step and see whether body #J should be added to NLIST.) N
(> *                 STEP\(J\) = MAX\(0.5D0*STEP\(J\),TIME - T0\(J\)\)) N
(>                   IF \(T0\(J\) + STEP\(J\).LT.TLIST\) THEN) N
(>                       CALL NLMOD\(J,1\)) N
(>                   END IF) N
(>                   GO TO 40) N
(>               ELSE IF \(LIST\(L,J\).GT.I\) THEN) N
(>                   DO 25 K = 1,3) N
(>                       F\(K,J\) = F\(K,J\) - 0.5*A\(K\)*A5) N
(>                       FR\(K,J\) = FR\(K,J\) - A\(K\)*A5) N
(>                       FDOT\(K,J\) = FDOT\(K,J\) - ONE6*A\(K+3\)) N
(>                       D1R\(K,J\) = D1R\(K,J\) - A\(K+3\)) N
(>                       FRDOT\(K,J\) = FRDOT\(K,J\) - A\(K+3\)) N
(>    25             CONTINUE) N
(99,105d112) N
(<    25     CONTINUE      ) N
(<           DO 30 K = 1,3) N
(<               F\(K,J\) = F\(K,J\) - 0.5*A\(K\)*A5) N
(<               FR\(K,J\) = FR\(K,J\) - A\(K\)*A5) N
(<               FDOT\(K,J\) = FDOT\(K,J\) - ONE6*A\(K+3\)) N
(<               D1R\(K,J\) = D1R\(K,J\) - A\(K+3\)) N
(<               FRDOT\(K,J\) = FRDOT\(K,J\) - A\(K+3\)) N
(110c117) N
(<       EMDOT = EMDOT - DM*POTJ + 0.5*DM*VI2) N
(---) N
(>       ECDOT = ECDOT - DM*POTJ + 0.5*DM*VI2) N
(112,113c119,120) N
(< *       Modify energy loss further for c.m. body.) N
(<       IF \(I.GT.N\) THEN) N
(---) N
(> *       Check energy correction due to velocity kick.) N
(>       IF \(I.GT.N.AND.IKICK\) THEN) N
(117,119c124,126) N
(OUT) (Page 72/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (36/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (73-74) 37
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       See whether linearized tidal terms should be included.) p n
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LT.3\) THEN) N
(<           EMDOT = EMDOT - 0.5*DM*\(TIDAL\(1\)*X\(1,I\)**2 +) N
(---) N
(> *       See whether tidal terms should be included.) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(>           ECDOT = ECDOT - 0.5*DM*\(TIDAL\(1\)*X\(1,I\)**2 +) N
(123,132d129) N
(< *       Check optional Plummer potential.) N
(<       IF \(KZ\(14\).EQ.4.OR.KZ\(14\).EQ.3\) THEN) N
(<           RI2 = AP2) N
(<           DO 50 K = 1,3) N
(<               RI2 = RI2 + X\(K,I\)**2) N
(<   50      CONTINUE) N
(<           EMDOT = EMDOT - DM*MP/SQRT\(RI2\)) N
(<       END IF) N
(< *) N
(< *       Accumulate energy loss for conservation check.) N
(file /work/Umi2/spurzem/5/nbody6++compare/fdisk.f does not exist) N
(file /work/Umi2/spurzem/5/nbody6++compare/fhalo.f does not exist) N
(1,2c1,2) N
(< 2177 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ficorr.f) N
(< nbody6compare/ficorr.f) N
(---) N
(> 1862 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/ficorr.f) N
(> nbody6++compare/ficorr.f) N
(42d41) N
(<               FIDOT\(K,J\) = FIDOT\(K,J\) - A\(K+3\)) N
(64,66c63,65) N
(< *       See whether linearized tidal terms should be included.) N
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LT.3\) THEN) N
(<           ECDOT = ECDOT - 0.5*DM*\(TIDAL\(1\)*X\(1,I\)**2 +) N
(---) N
(> *       See whether tidal terms should be included.) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(>           EMDOT = EMDOT - 0.5*DM*\(TIDAL\(1\)*X\(1,I\)**2 +) N
(70,78d68) N
(< *       Check optional Plummer potential.) N
(<       IF \(KZ\(14\).EQ.4.OR.KZ\(14\).EQ.3\) THEN) N
(<           RI2 = AP2) N
(<           DO 50 K = 1,3) N
(<               RI2 = RI2 + X\(K,I\)**2) N
(<   50      CONTINUE) N
(<           ECDOT = ECDOT - DM*MP/SQRT\(RI2\)) N
(<       END IF) N
(< *) N
(1,2c1,2) N
(< 1583 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/findj.f) N
(< nbody6compare/findj.f) N
(---) N
(> 1583 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/findj.f) N
(> nbody6++compare/findj.f) N
(1,2c1,2) N
(< 3932 2006-02-14 16:10 /work/Umi2/spurzem/5/nbody6compare/flyby.f) N
(< nbody6compare/flyby.f) N
(---) N
(> 3422 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/flyby.f) N
(> nbody6++compare/flyby.f) N
(13c13) N
(<       RJMIN2 = 1000.0) N
(---) N
(>       RJMIN2 = 1.0) N
(76,77d75) N
(<       RJJ = 0.0) N
(<       VJJ = 0.0) N
(80,81d77) N
(<           RJJ = RJJ + \(X\(K,JCOMP\) - X\(K,J\)\)**2) N
(<           VJJ = VJJ + \(XDOT\(K,JCOMP\) - XDOT\(K,J\)\)**2) N
(98,106d93) N
(OUT) (Page 73/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(< *       Increase the cross section for quadruples.) N
(<       IF \(JCOMP.GT.N\) THEN) N
(<           SEMI2 = -0.5*BODY\(JCOMP\)/H\(JCOMP-N\)) N
(<           APO = APO + ABS\(SEMI2\)) N
(<       END IF) N
(< *) N
(<       SEMIJ = 2.0/SQRT\(RJJ\) - VJJ/\(BODY\(JCOMP\) + BODY\(J\)\)) N
(<       SEMIJ = 1.0/SEMIJ) N
(109,112d95) N
(<           IF \(SEMI.LT.0.0.AND.GAMMA\(IPAIR\).LT.0.5\) THEN) N
(<               ITERM = 0) N
(<               GO TO 20) N
(<           END IF) N
(120a104) N
(> ) N
(file /work/Umi2/spurzem/5/nbody6++compare/fnuc.f does not exist) N
(1,2c1,2) N
(< 4071 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fpcorr.f) N
(< nbody6compare/fpcorr.f) N
(---) N
(> 4610 2001-08-15 16:39 /work/Umi2/spurzem/5/nbody6++compare/fpcorr.f) N
(> nbody6++compare/fpcorr.f) N
(1c1) N
(<       SUBROUTINE FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT\)) N
(---) N
(>       SUBROUTINE FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT,FIRR,FREG,FD,FDR,KLIST\)) N
(9c9,10) N
(<      &        A\(12\),F2DOT\(3\),F3DOT\(4\)) N
(---) N
(>      &        A\(12\),F1DOT\(3\),F2DOT\(3\),F3DOT\(4\)) N
(>       REAL*8 FIRR\(3\),FREG\(3\),FD\(3\),FDR\(3\),FMPI\(3\),FDMPI\(3\)) N
(10a12) N
(>       INTEGER KLIST\(LMAX\)) N
(12a15,16) N
(>       NNB0 = KLIST\(1\)) N
(> *) N
(20a25,26) N
(>           FMPI\(K\) = 0.5D0*\(FREG\(K\) + FIRR\(K\)\)) N
(>           FDMPI\(K\) = ONE6*\(FDR\(K\) + FD\(K\)\)) N
(24d29) N
(<       NNB0 = LIST\(1,I\)) N
(34,35d38) N
(< *) N
(< *       Use c.m. values of XDOT, F & FDOT for single KS components.) N
(36a40) N
(> *       Use c.m. values of XDOT, F & FDOT for single KS components.) N
(38c42) N
(< *         STEPJ = STEP\(JCM\)) N
(---) N
(>           STEPJ = STEP\(JCM\)) N
(40c44,45) N
(< *) N
(---) N
(>           S3 = 3.0*S) N
(> *       Predict because we are in parallel section \(R.Sp.\)) N
(42,45c47,52) N
(<               A\(K\) = X\(K,J\) - XI\(K\)) N
(<               A\(K+3\) = XDOT\(K,J\) - XIDOT\(K\)) N
(<               A\(K+6\) = 2.0*\(F\(K,JCM\) - F\(K,I\)\)) N
(<               A\(K+9\) = 6.0*\(FDOT\(K,JCM\) - FDOT\(K,I\)\)) N
(---) N
(>               A\(K\) = \(\(FDOT\(K,JCM\)*S + F\(K,JCM\)\)*S + X0DOT\(K,JCM\)\)*S +) N
(>      &                                                 X0\(K,JCM\) - XI\(K\)) N
(>               A\(K+3\) = \(FDOT\(K,JCM\)*S3 + 2.0*F\(K,JCM\)\)*S + X0DOT\(K,JCM\)-) N
(>      &                                                         XIDOT\(K\)) N
(>               A\(K+6\) = 2.0*\(F\(K,JCM\) - FMPI\(K\)\)) N
(>               A\(K+9\) = 6.0*\(FDOT\(K,JCM\) - FDMPI\(K\)\)) N
(50c57) N
(OUT) (Page 74/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (37/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (75-76) 38
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *         STEPJ = STEP\(J\)) p n
(---) N
(>           STEPJ = STEP\(J\)) N
(53,54c60) N
(< *) N
(< *       Predict F & FDOT of body #J to order FDOT.) N
(---) N
(> *       Predict because we are in parallel section \(R.Sp.\)) N
(56c62,63) N
(<               A\(K\) = X\(K,J\) - XI\(K\)) N
(---) N
(>               A\(K\) = \(\(FDOT\(K,J\)*S + F\(K,J\)\)*S + X0DOT\(K,J\)\)*S +) N
(>      &                                                 X0\(K,J\) - XI\(K\)) N
(59,60c66,67) N
(<               A\(K+6\) = 2.0*\(FDOT\(K,J\)*S3 + F\(K,J\) - F\(K,I\)\)) N
(<               A\(K+9\) = 6.0*\(FDOT\(K,J\) - FDOT\(K,I\)\)) N
(---) N
(>               A\(K+6\) = 2.0*\(FDOT\(K,J\)*S3 + F\(K,J\) - FMPI\(K\)\)) N
(>               A\(K+9\) = 6.0*\(FDOT\(K,J\) - FDMPI\(K\)\)) N
(82,83c89) N
(< *       Suppress F1DOT terms \(already done in REGINT\).) N
(< *         F1DOT\(K\) = F1DOTK*A14) N
(---) N
(>           F1DOT\(K\) = F1DOTK*A14) N
(102c108) N
(< *             F1DOT\(K\) = -F1DOT\(K\)) N
(---) N
(>               F1DOT\(K\) = -F1DOT\(K\)) N
(110c116) N
(< *         SAVE1\(K\) = SAVE1\(K\) + F1DOT\(K\)) N
(---) N
(>           SAVE1\(K\) = SAVE1\(K\) + F1DOT\(K\)) N
(122,123c128) N
(< *       Note that corrected value of D1 & D1R already set in routine REGINT.) N
(< *         D1\(K,I\) = D1\(K,I\) + SAVE1\(K\)) N
(---) N
(>           D1\(K,I\) = D1\(K,I\) + SAVE1\(K\)) N
(125a131) N
(> *       No correction of D1R because it is actually correct from regint.) N
(1,2c1,2) N
(< 896 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fpert.f) N
(< nbody6compare/fpert.f) N
(---) N
(> 896 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/fpert.f) N
(> nbody6++compare/fpert.f) N
(1,2c1,2) N
(< 4267 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fpoly1.f) N
(< nbody6compare/fpoly1.f) N
(---) N
(> 4271 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/fpoly1.f) N
(> nbody6++compare/fpoly1.f) N
(10d9) N
(< *) N
(49a49) N
(> *) N
(94a95) N
(> *) N
(108a110) N
(> *) N
(1,2c1,2) N
(< 4475 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/fpoly2.f) N
(< nbody6compare/fpoly2.f) N
(---) N
(> 4474 2002-02-20 13:30 /work/Umi2/spurzem/5/nbody6++compare/fpoly2.f) N
(> nbody6++compare/fpoly2.f) N
(10d9) N
(< *) N
(15a15,17) N
(> *       Include an initial skip for primordial binaries \(large derivatives\).) N
(OUT) (Page 75/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *     IF \(NBIN0.GT.0.AND.TIME.EQ.0.0D0\) GO TO 80) p n
(> *) N
(27,29d28) N
(< *       Include an initial skip for primordial binaries \(large derivatives\).) N
(<       IF \(NBIN0.GT.0.AND.TIME.EQ.0.0D0\) GO TO 80) N
(< *) N
(119c118) N
(< *       Advance the neighbour list until last member is identified. ) N
(---) N
(> *       Advance the neighbour list until last member is identified.) N
(125a125) N
(> *) N
(1,2c1,2) N
(< 3429 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/freeze.f) N
(< nbody6compare/freeze.f) N
(---) N
(> 3430 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/freeze.f) N
(> nbody6++compare/freeze.f) N
(30c30) N
(< *       Specify regularized time \(based on Baumgarte & Stielel, 1974\).) N
(---) N
(> *       Specify regularized time \(based on Stiefel & Scheifele, p. 85\).) N
(file /work/Umi2/spurzem/5/nbody6++compare/gcinit.f does not exist) N
(file /work/Umi2/spurzem/5/nbody6++compare/gcint.f does not exist) N
(1,2c1,2) N
(< 1182 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/ghost.f) N
(< nbody6compare/ghost.f) N
(---) N
(> 1182 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/ghost.f) N
(> nbody6++compare/ghost.f) N
(1,2c1,2) N
(< 6787 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/gntage.f) N
(< nbody6compare/gntage.f) N
(---) N
(> 6789 2003-06-26 01:43 /work/Umi2/spurzem/5/nbody6++compare/gntage.f) N
(> nbody6++compare/gntage.f) N
(228a229,230) N
(> ) N
(> ) N
(1,2c1,2) N
(< 2413 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hcorr.f) N
(< nbody6compare/hcorr.f) N
(---) N
(> 1718 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/hcorr.f) N
(> nbody6++compare/hcorr.f) N
(8,10d7) N
(<       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(21c18) N
(< *       Define c.m. index and old semi-major axis.) N
(---) N
(> *       Define c.m. index and save old elements & reduced mass.) N
(24,45c21,23) N
(< *) N
(< *       Distinguish different cases \(KS, triple or outer ghost of quadruple\).) N
(<       IF \(BODY\(I\).GT.0.0D0\) THEN) N
(<           ZMU0 = BODY\(I1\)*BODY\(I2\)/BODY\(J\)) N
(<       ELSE) N
(<           IM = 0) N
(<           JJ = I) N
(<           IF \(I.LT.IFIRST\) JJ = N + KVEC\(I\)) N
(< *       Determine merger index for inner and outer binary masses.) N
(<           DO 1 K = 1,NMERGE) N
(<               IF \(NAMEG\(K\).EQ.NAME\(JJ\)\) IM = K) N
(<     1     CONTINUE) N
(<           IF \(IM.EQ.0\) THEN) N
(<               WRITE \(6,5\) NAME\(I\), NAME\(JJ\), \(NAMEG\(K\),K=1,NMERGE\)) N
(<     5         FORMAT \(' DANGER HCORR!    NMI NMJJ NMG ',12I6\)) N
(OUT) (Page 76/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (38/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (77-78) 39
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               STOP) p n
(<           END IF) N
(< *       Form old reduced mass from inner and outer binary.) N
(<           ZM1 = CM\(1,IM\) + CM\(2,IM\)) N
(<           ZM2 = CM\(3,IM\) + CM\(4,IM\)) N
(<           ZMU0 = ZM1*ZM2/BODY\(J\)) N
(<       END IF) N
(---) N
(> *     ECC2 = \(1.0 - R\(IPAIR\)/SEMI0\)**2 + TDOT2\(IPAIR\)**2/\(BODY\(J\)*SEMI0\)) N
(> *     ECC = SQRT\(ECC2\)) N
(>       ZMU0 = BODY\(I1\)*BODY\(I2\)/BODY\(J\)) N
(52,56c30) N
(<       IF \(BODY\(I\).GT.0.0D0\) THEN) N
(<           ZMU1 = \(BODY\(I1\) - DM\)*BODY\(I2\)/BODY\(J\)) N
(<       ELSE) N
(<           ZMU1 = ZM1*\(ZM2 - DM\)/BODY\(J\)) N
(<       END IF) N
(---) N
(>       ZMU1 = \(BODY\(I1\) - DM\)*BODY\(I2\)/BODY\(J\)) N
(69a44,46) N
(> *       Set new mass temporarily to be consistent with routine EXPAND.) N
(>       BODY\(I\) = BODY\(I\) - DM) N
(> *) N
(72a50,52) N
(> *       Restore the component mass here to allow updating in routine MDOT.) N
(>       BODY\(I\) = BODY\(I\) + DM) N
(> *) N
(75a56) N
(> ) N
(1,2c1,2) N
(< 9811 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hiarch.f) N
(< nbody6compare/hiarch.f) N
(---) N
(> 9678 2002-06-14 23:09 /work/Umi2/spurzem/5/nbody6++compare/hiarch.f) N
(> nbody6++compare/hiarch.f) N
(17,21d16) N
(< *       Open unit #10 the first time.) N
(<       IF \(FIRST\) THEN) N
(<           OPEN \(UNIT=10,STATUS='NEW',FORM='FORMATTED',FILE='HIARCH'\)) N
(<           FIRST = .FALSE.) N
(< *) N
(22a18) N
(>       IF \(FIRST\) THEN) N
(24c20) N
(<               WRITE \(10,1\)  RBAR, BODYM*ZMBAR, BODY1*ZMBAR, TSCALE,) N
(---) N
(>               WRITE \(12,1\)  RBAR, BODYM*ZMBAR, BODY1*ZMBAR, TSCALE,) N
(37c33) N
(<           WRITE \(10,2\)) N
(---) N
(>           WRITE \(12,2\)) N
(41c37) N
(<           WRITE \(10,3\)) N
(---) N
(>           WRITE \(12,3\)) N
(200c196) N
(<           WRITE \(10,10\)  TTOT, SEMI, SEMI1, ECC1, PMIN, TK1, Q,) N
(---) N
(>           WRITE \(12,10\)  TTOT, SEMI, SEMI1, ECC1, PMIN, TK1, Q,) N
(251c247) N
(<           WRITE \(10,20\)  TTOT, SQRT\(RI\)/RC, SEMI, ECC, PMIN, TK1,) N
(---) N
(>           WRITE \(12,20\)  TTOT, SQRT\(RI\)/RC, SEMI, ECC, PMIN, TK1,) N
(255c251) N
(<           CALL FLUSH\(10\)) N
(---) N
(>           CALL FLUSH\(12\)) N
(280a277,278) N
(> ) N
(OUT) (Page 77/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> ) p n
(1,2c1,2) N
(< 9222 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hidat.f) N
(< nbody6compare/hidat.f) N
(---) N
(> 8391 2002-07-31 07:17 /work/Umi2/spurzem/5/nbody6++compare/hidat.f) N
(> nbody6++compare/hidat.f) N
(12c12) N
(< *     REAL*4  EB\(KMAX\),ECM\(KMAX\)) N
(---) N
(>       REAL*4  EB\(KMAX\),ECM\(KMAX\)) N
(14c14) N
(<       SAVE  FIRST) N
(---) N
(>       SAVE  FIRST ) N
(17,18c17) N
(< *) N
(< *       Write formatted data bank on unit 87.) N
(---) N
(> *       Write formatted data bank on unit 13.) N
(20d18) N
(<           OPEN \(UNIT=87,STATUS='NEW',FORM='FORMATTED',FILE='HIDAT'\)) N
(22c20) N
(<           WRITE \(87,1\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(13,1\)) N
(30d27) N
(<           ZMM = 0.0) N
(33d29) N
(<               IF \(NAME\(I\).LT.0\) ZMM = ZMM + BODY\(I\)) N
(35,38c31,33) N
(<           ZMM = ZMM*ZMBAR/FLOAT\(NMERGE - MULT\)) N
(<           WRITE \(87,3\)  NPAIRS, NRUN, N, NC, NMERGE, MULT, NEWHI, TTOT,) N
(<      &                  ZMM) N
(<     3     FORMAT \(/,I6,I4,I6,3I4,I6,F9.1,F6.2\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(13,3\)  NPAIRS, NRUN, N, NC, NMERGE, MULT, NEWHI, TIME) N
(>     3     FORMAT \(/,I6,I4,I6,3I4,I6,F9.1\)) N
(51d45) N
(<           KCM = KSTARM\(IM\)) N
(74c68) N
(< *             EB\(IPAIR\) = CM\(1,IM\)*CM\(2,IM\)*HM\(IM\)/BODYCM) N
(---) N
(>               EB\(IPAIR\) = CM\(1,IM\)*CM\(2,IM\)*HM\(IM\)/BODYCM) N
(94c88) N
(< *             EB\(IPAIR\) = CM\(1,IM\)*CM\(2,IM\)*HM\(IM\)/BODYCM) N
(---) N
(>               EB\(IPAIR\) = CM\(1,IM\)*CM\(2,IM\)*HM\(IM\)/BODYCM) N
(135c129,130) N
(<                   WRITE \(6,20\)  NAME\(J1\), NAME\(J\), ANGLE, E1, PMIN,) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,20\)  NAME\(J1\), NAME\(J\), ANGLE, E1, PMIN,) N
(149d143) N
(<               KCM = KSTAR\(ICM\)) N
(151,152c145,146) N
(< *       Locate the first KS component \(former c.m. hence subtract NZERO\).) N
(<               DO 23 K = 1,IFIRST) N
(---) N
(> *       Locate the massive KS component \(former c.m. hence subtract NZERO\).) N
(>               DO 24 K = 1,IFIRST) N
(154c148) N
(<    23         CONTINUE) N
(---) N
(>    24         CONTINUE) N
(156,171d149) N
(< *       Include the case of [[B,S],[B,S]] which requires more work.) N
(<               IF \(BODY\(J\).EQ.0.0D0\) THEN) N
(OUT) (Page 78/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (39/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (79-80) 40
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<                   JM = 0) p n
(<                   DO 24 K = 1,NMERGE) N
(<                       IF \(NAMEM\(IM\).EQ.NAMEG\(K\)\) JM = K) N
(<    24             CONTINUE) N
(<                   IF \(JM.EQ.0\) GO TO 30) N
(<                   J = 0) N
(< *       Employ new ghost identification to find the corresponding c.m index.) N
(<                   DO 25 K = N+1,NTOT) N
(<                       IF \(NAME\(K\).EQ.NAMEM\(JM\)\) J = K) N
(<    25             CONTINUE) N
(<                   IF \(J.EQ.0\) GO TO 30) N
(<                   J = 2*\(J - N\)) N
(< *       Note that both the triple masses \(M1,M2\) are saved in CM\(1->4,JM\).) N
(<               END IF) N
(191c169) N
(< *             EB\(IPAIR\) = BODYJ1*BODYJ2*H\(JPAIR\)/BODYCM) N
(---) N
(>               EB\(IPAIR\) = BODYJ1*BODYJ2*H\(JPAIR\)/BODYCM) N
(199c177) N
(< *       Evaluate the potential energy of c.m.) N
(---) N
(> *       Evaluate the potential energy of c.m..) N
(201,202c179,180) N
(<           DO 26 K = IFIRST,NTOT) N
(<               IF \(K.EQ.ICM\) GO TO 26) N
(---) N
(>           DO 25 K = IFIRST,NTOT) N
(>               IF \(K.EQ.ICM\) GO TO 25) N
(206c184) N
(<    26     CONTINUE) N
(---) N
(>    25     CONTINUE) N
(217c195) N
(< *         ECM\(IPAIR\) = 0.5*VJ2 - PHI) N
(---) N
(>           ECM\(IPAIR\) = 0.5*VJ2 - PHI) N
(220,221c198,201) N
(<           WRITE \(87,28\)  NAME\(J1\), NAM2, NAME\(J2\), KSTAR\(J1\), KSTAR\(J\),) N
(<      &                   KCM, M1, M2, M3, RI, EMAX, E0, E1, P0, P1) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(13,28\)  NAME\(J1\), NAM2, NAME\(J2\), KSTAR\(J1\), KSTAR\(J\),) N
(>      &                   KSTARM\(IM\), M1, M2, M3, RI, EMAX, E0, E1,) N
(>      &                   P0, P1) N
(224c204) N
(<       CALL FLUSH\(87\)) N
(---) N
(>       CALL FLUSH\(13\)) N
(235a216) N
(> ) N
(1,2c1,2) N
(< 3955 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/himax2.f) N
(< nbody6compare/himax2.f) N
(---) N
(> 4174 2001-05-20 16:20 /work/Umi2/spurzem/5/nbody6++compare/himax2.f) N
(> nbody6++compare/himax2.f) N
(4c4) N
(< *       Maximum eccentricity of inner hierarchical binary.) N
(---) N
(> *       Maximum eccentricity of outer hierarchical binary.) N
(8c8,12) N
(<       REAL*8  A1\(3\),A2\(3\),XREL\(3\),VREL\(3\),EI\(3\),HI\(3\),HO\(3\),BHAT\(3\)) N
(---) N
(>       COMMON/BINARY/  CM\(4,MMAX\),YREL\(3,MMAX\),ZREL\(3,MMAX\),) N
(>      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(>      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(>       REAL*8  A1\(3\),A2\(3\),XREL\(3\),VREL\(3\),EI\(3\),HI\(3\),HO\(3\),BHAT\(3\),) N
(>      &        EVEC\(3\)) N
(26c30) N
(OUT) (Page 79/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       A12 = 0.0) p n
(---) N
(>     4 A12 = 0.0) N
(54c58) N
(< *       Construct the Runge-Lenz vector \(Heggie & Rasio 1995, IAU174, Eq.5\).) N
(---) N
(> *       Construct the Runge-Lenz vector \(Heggie & Rasio 1995, Eq.\(5\)\).) N
(59a64) N
(>           EVEC\(K\) = EI\(K\)) N
(1,2c1,2) N
(< 4411 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/himax.f) N
(< nbody6compare/himax.f) N
(---) N
(> 4303 1999-12-23 13:14 /work/Umi2/spurzem/5/nbody6++compare/himax.f) N
(> nbody6++compare/himax.f) N
(9,10c9,10) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(---) N
(>      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),TMDIS\(MMAX\),) N
(>      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\),IFLAGM\(MMAX\)) N
(12c12) N
(<      &        UI\(4\),V\(4\)) N
(---) N
(>      &        UI\(4\),V\(4\),EVEC\(3\)) N
(31,35d30) N
(< *       Ensure that unperturbed binary is resolved.) N
(<       IF \(LIST\(1,2*IPAIR-1\).EQ.0.OR.X\(1,JCOMP\).EQ.X\(1,I\)\) THEN) N
(<           CALL RESOLV\(IPAIR,1\)) N
(<       END IF) N
(< *) N
(37c32) N
(<       A12 = 0.0) N
(---) N
(>     4 A12 = 0.0) N
(68c63) N
(< *       Construct the Runge-Lenz vector \(Heggie & Rasio 1995, IAU174, Eq.5\).) N
(---) N
(> *       Construct the Runge-Lenz vector \(Heggie & Rasio 1995, Eq.\(5\)\).) N
(73a69) N
(>           EVEC\(K\) = EI\(K\)) N
(1,2c1,2) N
(< 5282 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hipop.f) N
(< nbody6compare/hipop.f) N
(---) N
(> 5039 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/hipop.f) N
(> nbody6++compare/hipop.f) N
(0a1,4) N
(> # 1 "hipop.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "hipop.F") N
(4,5c8,9) N
(< *       Initial hierarchical population.) N
(< *       --------------------------------) N
(---) N
(> * Initial hierarchical population.) N
(> * --------------------------------) N
(8,14c12,22) N
(<       REAL*8  XORB\(2\),VORB\(2\),XREL\(3\),VREL\(3\),PX\(3\),QX\(3\),) N
(<      &        BS\(MMAX\),XS\(3,MMAX\),VS\(3,MMAX\)) N
(<       REAL*4  RAN2) N
(< *) N
(< *) N
(< *       Read input parameters \(same usage as routine BINPOP\).) N
(<       READ \(5,*\)  NHI, SEMI0, ECC0, RATIO, RANGE, ICIRC) N
(---) N
(>       REAL*8 XORB\(2\),VORB\(2\),XREL\(3\),VREL\(3\),PX\(3\),QX\(3\),) N
(>      & BS\(MMAX\),XS\(3,MMAX\),VS\(3,MMAX\)) N
(OUT) (Page 80/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (40/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (81-82) 41
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       REAL*4 RAN2) p n
(> *) N
(> # 21 "hipop.F") N
(> * recover random number sequence from COMMON variable IDUM1.) N
(>       KDUM = IDUM1) N
(> *) N
(> * Read input parameters \(same usage as routine BINPOP\).) N
(>       if\(rank.eq.0\)READ \(5,*\) NHI, SEMI0, ECC0, RATIO, RANGE, ICIRC) N
(> # 34 "hipop.F") N
(16c24) N
(<       WRITE \(6,1\)  NHI, SEMI0, ECC0, RATIO, RANGE, ICIRC) N
(---) N
(>       WRITE \(6,1\) NHI, SEMI0, ECC0, RATIO, RANGE, ICIRC) N
(18,19c26,27) N
(<      &              '  E =',F6.2,'  RATIO =',F4.1,'  RANGE =',F6.1,) N
(<      &              '  ICIRC =',I2,/\)) N
(---) N
(>      & '  E =',F6.2,'  RATIO =',F4.1,'  RANGE =',F6.1,) N
(>      & '  ICIRC =',I2,/\)) N
(22,23c30,31) N
(<           WRITE \(6,2\)  NBIN0, NHI) N
(<     2     FORMAT \(5X,'FATAL ERROR!   NBIN0 =',I4,'  NHI =',I4\)) N
(---) N
(>           WRITE \(6,2\) NBIN0, NHI) N
(>     2 FORMAT \(5X,'FATAL ERROR!   NBIN0 =',I4,'  NHI =',I4\)) N
(27c35) N
(< *       Introduce binary components by splitting the primary.) N
(---) N
(> * Introduce binary components by splitting the primary.) N
(30,33c38,41) N
(< *       Randomize perihelion, node & inclination.) N
(<           PI = TWOPI*RAN2\(IDUM1\)) N
(<           OMEGA = TWOPI*RAN2\(IDUM1\)) N
(<           ZI = 0.5*TWOPI*RAN2\(IDUM1\)) N
(---) N
(> * Randomize perihelion, node & inclination.) N
(>           PI = TWOPI*RAN2\(KDUM\)) N
(>           OMEGA = TWOPI*RAN2\(KDUM\)) N
(>           ZI = 0.25*TWOPI*RAN2\(KDUM\)) N
(35c43) N
(< *       Set transformation elements \(Brouwer & Clemence p. 35\).) N
(---) N
(> * Set transformation elements \(Brouwer & Clemence p. 35\).) N
(41c49) N
(<           QX\(3\) = COS\(PI\)*SIN\(ZI\) ) N
(---) N
(>           QX\(3\) = COS\(PI\)*SIN\(ZI\)) N
(43c51) N
(< *       Determine two-body elements for original binary.) N
(---) N
(> * Determine two-body elements for original binary.) N
(55c63) N
(<     5     CONTINUE) N
(---) N
(>     5 CONTINUE) N
(64,65c72,73) N
(< *       Specify component masses \(primary fraction range 0.5 - 0.9\).) N
(<           Q0 = 0.5 + 0.4*RAN2\(IDUM1\)) N
(---) N
(> * Specify component masses \(primary fraction range 0.5 - 0.9\).) N
(>           Q0 = 0.5 + 0.4*RAN2\(KDUM\)) N
(72c80) N
(< *       Choose random \(thermalized\) or fixed eccentricity.) N
(---) N
(> * Choose random \(thermalized\) or fixed eccentricity.) N
(74c82) N
(<               ECC2 = RAN2\(IDUM1\)) N
(---) N
(>               ECC2 = RAN2\(KDUM\)) N
(OUT) (Page 81/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(80c88) p n
(< *       Select semi-major axis from uniform distribution in log\(A\) or SEMI0.) N
(---) N
(> * Select semi-major axis from uniform distribution in log\(A\) or SEMI0.) N
(82,89c90,92) N
(<    10     IF \(RANGE.GT.0.0\) THEN) N
(<               IF \(ITER.LE.5\) THEN) N
(<                   EXP = RAN2\(IDUM1\)*LOG10\(RANGE\)) N
(<                   SEMI = SEMI1/10.0**EXP) N
(<               ELSE) N
(< *       Shrink by factor 2 if no success after 5 iterations.) N
(<                   SEMI = 0.5*SEMI) N
(<               END IF) N
(---) N
(>    10 IF \(RANGE.GT.0.0\) THEN) N
(>               EXP = RAN2\(KDUM\)*LOG10\(RANGE\)) N
(>               SEMI = SEMI0/10.0**EXP) N
(94c97) N
(< *       Check stability criterion \(maximum 12 tries including inclination\).) N
(---) N
(> * Check standard stability criterion \(maximum of 10 tries\).) N
(97,99c100,101) N
(<           PCRIT = 2.8*XFAC**0.4*SEMI) N
(<           YFAC = 1.0 - 0.3*ZI/3.1415) N
(<           PCRIT = YFAC*PCRIT) N
(---) N
(>           FE = 1.0) N
(>           PCRIT = 2.8*FE*XFAC**0.4*SEMI) N
(101c103) N
(<           IF \(PMIN.LT.PCRIT.AND.ITER.LE.12.AND.SEMI.LT.SEMI0\) GO TO 10) N
(---) N
(>           IF \(PMIN.LT.PCRIT.AND.ITER.LT.10\) GO TO 10) N
(105,107c107,109) N
(<           WRITE \(6,20\)  ITER, ECC, ECC1, PMIN, PCRIT, P0, P1) N
(<    20     FORMAT \(' HIERARCHY:    IT E E1 PMIN PCRIT P0 P1 ',) N
(<      &                            I4,2F7.3,1P,4E9.1\)) N
(---) N
(>           WRITE \(6,20\) ITER, ECC, ECC1, PMIN, PCRIT, P0, P1) N
(>    20 FORMAT \(' HIERARCHY:    IT E E1 PMIN PCRIT P0 P1 ',) N
(>      & I4,2F7.3,1P,4E9.1\)) N
(109c111) N
(< *       Specify relative motion at apocentre and sum binding energy.) N
(---) N
(> * Specify relative motion at apocentre and sum binding energy.) N
(116c118) N
(< *       Transform to relative variables.) N
(---) N
(> * Transform to relative variables.) N
(120c122) N
(<    25     CONTINUE) N
(---) N
(>    25 CONTINUE) N
(122c124) N
(< *       Save old secondary and set global variables for each component.) N
(---) N
(> * Save old secondary and set global variables for each component.) N
(130c132) N
(<    30     CONTINUE) N
(---) N
(>    30 CONTINUE) N
(133c135) N
(< *       Move single particles down by NHI to make room for outer components.) N
(---) N
(> * Move single particles down by NHI to make room for outer components.) N
(141c143) N
(<    45     CONTINUE) N
(---) N
(>    45 CONTINUE) N
(145c147) N
(OUT) (Page 82/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (41/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (83-84) 42
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Place hierarchical components immediately after the binaries.) p n
(---) N
(> * Place hierarchical components immediately after the binaries.) N
(152c154) N
(<    55     CONTINUE) N
(---) N
(>    55 CONTINUE) N
(155c157) N
(< *       Update the particle number and reset NHI \(might be used elsewhere\).) N
(---) N
(> * Update the particle number.) N
(159c161,163) N
(<       NHI = 0) N
(---) N
(> *) N
(> * Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(1,2c1,2) N
(< 2788 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/histab.f) N
(< nbody6compare/histab.f) N
(---) N
(> 2790 2003-06-23 19:31 /work/Umi2/spurzem/5/nbody6++compare/histab.f) N
(> nbody6++compare/histab.f) N
(96a97,98) N
(> ) N
(> ) N
(1,2c1,2) N
(< 5574 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hivel.f) N
(< nbody6compare/hivel.f) N
(---) N
(> 3618 2001-08-06 16:36 /work/Umi2/spurzem/5/nbody6++compare/hivel.f) N
(> nbody6++compare/hivel.f) N
(10c10) N
(< *       Copy membership and add 1 for analogy with HARP/GRAPE.) N
(---) N
(> *       Copy membership and add 1 for analogy with HARP.) N
(34c34,35) N
(<               WRITE \(29,3\)  LI, NAME\(LI\), SQRT\(RL2\), SQRT\(VL2\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(29,3\)  LI, NAME\(LI\), SQRT\(RL2\), SQRT\(VL2\)) N
(36d36) N
(<               CALL FLUSH\(29\)) N
(71,72c71) N
(< *       Add any new high-velocity particles \(save F**2 > N & STEP < DTMIN\).) N
(<       NHV = 0) N
(---) N
(> *       Add any new high-velocity particles \(skip F**2 > N & STEP < DTMIN\).) N
(74a74,76) N
(> *       Adopt geometric mean of close encounter and core mass force.) N
(>           IF \(FI2.GT.FLOAT\(N\).OR.STEP\(I\).LT.DTMIN.OR.) N
(>      &        STEPR\(I\).LT.20.0*DTMIN\) GO TO 10) N
(78,87c80) N
(< *       Form a list of recently ejected candidates.) N
(<           IF \(FI2.GT.FLOAT\(N\).OR.STEP\(I\).LT.DTMIN.OR.) N
(<      &        STEPR\(I\).LT.20.0*DTMIN\) THEN) N
(<               IF \(VI2.GT.VMAX2\) THEN) N
(<                   NHV = NHV + 1) N
(<                   JLIST\(NHV\) = I) N
(<               END IF) N
(<               GO TO 10) N
(<           END IF) N
(<           IF \(VI2.GT.VMAX2.AND.RI2.LT.4.0*RSCALE**2\) THEN) N
(---) N
(>           IF \(VI2.GT.VMAX2.AND.RI2.LT.9.0*RSCALE**2\) THEN) N
(97c90,91) N
(<               WRITE \(29,9\)  TIME+TOFF, NHI-1, I, NAME\(I\), KSTAR\(I\),) N
(---) N
(>               if\(rank.eq.0\)) N
(OUT) (Page 83/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      &        WRITE \(29,9\)  TIME+TOFF, NHI, I, NAME\(I\), KSTAR\(I\),) p n
(101d94) N
(<               CALL FLUSH\(29\)) N
(105,151d97) N
(< *       Consider single fast particle or hyperbolic two-body motion.) N
(<       IF \(\(NHV.EQ.1.OR.NHV.EQ.2\).AND.NHI.LT.MLV-NHV\) THEN) N
(< *       Compare any candidates with existing members.) N
(<           DO 20 K = 1,NHV) N
(<               DO 15 L = 2,NHI) N
(<                   IF \(JLIST\(K\).EQ.LISTV\(L\)\) GO TO 30) N
(<    15         CONTINUE) N
(<    20     CONTINUE) N
(<           I1 = JLIST\(1\)) N
(< *       Include single particles without further tests.) N
(<           IF \(NHV.EQ.1\) THEN) N
(<               NHI = NHI + 1) N
(<               LISTV\(1\) = LISTV\(1\) + 1) N
(<               NFAST = NFAST + 1) N
(<               LISTV\(NHI\) = I1) N
(<               WRITE \(29,22\)  TTOT, NHI-1, NAME\(I1\), IPHASE, STEP\(I1\)) N
(<    22         FORMAT \(' HIVEL ADD    T NHI NM IPH DT ',) N
(<      &                               F10.4,I4,I6,I4,1P,E10.2\)) N
(<               GO TO 30) N
(<           END IF) N
(< *       Evaluate two-body energy.) N
(<           I2 = JLIST\(2\)) N
(<           RIJ2 = 0.0) N
(<           VIJ2 = 0.0) N
(<           RDOT = 0.0) N
(<           DO 25 K = 1,3) N
(<               RIJ2 = RIJ2 + \(X\(K,I1\) - X\(K,I2\)\)**2) N
(<               VIJ2 = VIJ2 + \(XDOT\(K,I1\) - XDOT\(K,I2\)\)**2) N
(<               RDOT = RDOT + \(X\(K,I1\) - X\(K,I2\)\)*\(XDOT\(K,I1\)-XDOT\(K,I2\)\)) N
(<    25     CONTINUE) N
(<           RIJ = SQRT\(RIJ2\)) N
(<           SEMI = 2.0/RIJ - VIJ2/\(BODY\(I1\) + BODY\(I2\)\)) N
(< *       Accept outwards hyperbolic motion arising from recent interaction.) N
(<           IF \(SEMI.LT.0.0.AND.RIJ.LT.10.0*RMIN.AND.RDOT.GT.0.0\) THEN) N
(<               NHI = NHI + 1) N
(<               LISTV\(NHI\) = I1) N
(<               NHI = NHI + 1) N
(<               LISTV\(NHI\) = I2) N
(<               LISTV\(1\) = LISTV\(1\) + 2) N
(<               NFAST = NFAST + 2) N
(<               WRITE \(29,28\) TTOT, NHI-1, NAME\(I1\), NAME\(I2\), IPHASE, RIJ) N
(<    28         FORMAT \(' HIVEL ADD    T NHI NM IPH RIJ ',) N
(<      &                               F10.4,I4,2I6,I4,1P,E10.2\)) N
(<           END IF) N
(<       END IF) N
(< *) N
(<    30 CONTINUE) N
(159a106) N
(> ) N
(1,2c1,2) N
(< 5031 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hmdot2.f) N
(< nbody6compare/hmdot2.f) N
(---) N
(> 5081 2002-06-12 23:18 /work/Umi2/spurzem/5/nbody6++compare/hmdot2.f) N
(> nbody6++compare/hmdot2.f) N
(97c97,98) N
(<           WRITE \(6,15\)  NAME\(J\), KSTAR\(J\), KSTAR\(IGHOST\), SQRT\(ECC2\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      *    WRITE \(6,15\)  NAME\(J\), KSTAR\(J\), KSTAR\(IGHOST\), SQRT\(ECC2\),) N
(140c141,142) N
(<           WRITE \(6,30\)  NAME\(J\), KSTAR\(J\), IMERGE, KM, M1, DMS, PMIN,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      *    WRITE \(6,30\)  NAME\(J\), KSTAR\(J\), IMERGE, KM, M1, DMS, PMIN,) N
(OUT) (Page 84/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (42/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (85-86) 43
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(148a151,152) p n
(> ) N
(> ) N
(1,2c1,2) N
(< 4943 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hmdot.f) N
(< nbody6compare/hmdot.f) N
(---) N
(> 4634 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/hmdot.f) N
(> nbody6++compare/hmdot.f) N
(21c21) N
(< *       Decide between #I1 and ghost \(NB! choose I1 first if TEV equal\).) N
(---) N
(> *       Decide which component needs updating by comparing evolution times.) N
(23c23) N
(<       IF \(TEV\(I1\).LE.TEV\(J\)\) J = I1) N
(---) N
(>       IF \(TEV\(I1\).LT.TEV\(J\)\) J = I1) N
(28c28) N
(<       IF \(KSTARM\(IMERGE\).LT.0.OR.BODY\(ICM\).EQ.0.0D0\) IQUIT = .TRUE.) N
(---) N
(>       IF \(KSTARM\(IMERGE\).LT.0\) IQUIT = .TRUE.) N
(30c30) N
(< *       Quit for mis-identification, tidal evolution or double merger.) N
(---) N
(> *       Quit for mis-identification or advanced evolution.) N
(61,76d60) N
(< *       Evaluate old separation, square regularized velocity, t'' & ECC.) N
(<       RI = 0.0D0) N
(<       V20 = 0.0) N
(<       TD2 = 0.0) N
(<       DO 10 K = 1,4) N
(<           RI = RI + UM\(K,IMERGE\)**2) N
(<           V20 = V20 + UMDOT\(K,IMERGE\)**2) N
(<           TD2 = TD2 + 2.0*UM\(K,IMERGE\)*UMDOT\(K,IMERGE\)) N
(<    10 CONTINUE) N
(<       ECC2 = \(1.0 - RI/SEMI0\)**2 + TD2**2/\(SEMI0*ZMB0\)) N
(<       ECC = SQRT\(ECC2\)) N
(< *) N
(< *       Determine inclination and YFAC \(use #I1 as first KS component\).) N
(<       CALL HIMAX\(I1,IMERGE,ECC,SEMI0,EMAX,EMIN,ZI,TG,EDAV\)) N
(<       YFAC = 1.0 - 0.3*ZI/180.0) N
(< *) N
(79c63) N
(<       PCRIT = 2.8*XFAC**0.4*SEMI2*YFAC) N
(---) N
(>       PCRIT = 2.8*XFAC**0.4*SEMI2) N
(90,93c74,87) N
(< *       Check condition for sequential circularization.) N
(<       RP = SEMI0*\(1.0 - ECC\)) N
(<       DR = ABS\(RP - 4.0*RADIUS\(J\)\)) N
(<       IF \(KZ\(27\).GT.0.AND.DR.GT.0.01*RP.AND.) N
(---) N
(> *       Evaluate old separation, square regularized velocity & t''.) N
(>       RI = 0.0D0) N
(>       V20 = 0.0) N
(>       TD2 = 0.0) N
(>       DO 10 K = 1,4) N
(>           RI = RI + UM\(K,IMERGE\)**2) N
(>           V20 = V20 + UMDOT\(K,IMERGE\)**2) N
(>           TD2 = TD2 + 2.0*UM\(K,IMERGE\)*UMDOT\(K,IMERGE\)) N
(>    10 CONTINUE) N
(> *) N
(> *       Check condition for likely tidal dissipation \(TCIRC not possible\).) N
(>       ECC2 = \(1.0 - RI/SEMI0\)**2 + TD2**2/\(SEMI0*ZMB0\)) N
(>       RP = SEMI0*\(1.0 - SQRT\(ECC2\)\)) N
(>       IF \(KZ\(27\).GT.1.AND.RP.LT.3.0*RADIUS\(J\).AND.) N
(95c89) N
(<           WRITE \(6,15\)  NAME\(J\), KSTAR\(J\), KSTARM\(IMERGE\), ECC,) N
(---) N
(OUT) (Page 85/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           WRITE \(6,15\)  NAME\(J\), KSTAR\(J\), KSTARM\(IMERGE\), SQRT\(ECC2\),) p n
(117c111) N
(< *       Note: no need to update XREL & VREL for RESET \(c.m. error cancels\).) N
(---) N
(> *       Note no need to update XREL & VREL for RESTART \(c.m. error cancels\).) N
(135,141c129,133) N
(< *       Print some diagnostics on significant mass loss.) N
(<       IF \(DMS.GT.0.005*M1\) THEN) N
(<           WRITE \(6,30\)  NAME\(J\), KSTAR\(J\), IMERGE, KM, M1, DMS, PMIN,) N
(<      &                  PCRIT, SEMI2, SEMI1, DECORR) N
(<    30     FORMAT \(' HMDOT    NAM K* IM KM M1 DM PM PC A A1 DE ',) N
(<      &                       I6,3I4,2F6.2,1P,4E10.2,0P,F10.6\)) N
(<       END IF) N
(---) N
(> *       Print some diagnostics.) N
(>       WRITE \(6,30\)  NAME\(J\), KSTAR\(J\), IMERGE, KM, M1, DMS, PMIN, PCRIT,) N
(>      &              SEMI2, SEMI1, DECORR) N
(>    30 FORMAT \(' HMDOT    NAM K* IM KM M1 DM PM PC A A1 DE ',) N
(>      &                   I6,3I4,2F6.2,1P,4E10.2,0P,F10.6\)) N
(145a138) N
(> ) N
(1,2c1,2) N
(< 1593 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hotsys.f) N
(< nbody6compare/hotsys.f) N
(---) N
(> 1584 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/hotsys.f) N
(> nbody6++compare/hotsys.f) N
(0a1,4) N
(> # 1 "hotsys.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "hotsys.F") N
(4,5c8,9) N
(< *       Hot initial system.) N
(< *       -------------------) N
(---) N
(> * Hot initial system.) N
(> * -------------------) N
(8a13) N
(> # 18 "hotsys.F") N
(10c15) N
(< *       Determine the rms velocity from current kinetic energy.) N
(---) N
(> * Determine the rms velocity from current kinetic energy.) N
(15c20) N
(<     5     CONTINUE) N
(---) N
(>     5 CONTINUE) N
(19c24) N
(< *       Define GM & PC in cgs units and form velocity scale in km/sec.) N
(---) N
(> * Define GM & PC in cgs units and form velocity scale in km/sec.) N
(24c29) N
(< *       Ensure ZMBAR & RBAR > 0 \(=0: assume <M>/Sun = 1, RBAR = 1 pc\).) N
(---) N
(> * Ensure ZMBAR & RBAR > 0 \(=0: assume <M>/Sun = 1, RBAR = 1 pc\).) N
(28c33) N
(< *       Scale to working units of RBAR in pc & ZMBAR in solar masses.) N
(---) N
(> * Scale to working units of RBAR in pc & ZMBAR in solar masses.) N
(31,32c36,40) N
(< *       Read central velocity dispersion and form scaling factor.) N
(<       READ \(5,*\)  SIGMA0) N
(---) N
(> * Read central velocity dispersion and form scaling factor.) N
(>       if\(rank.eq.0\)READ \(5,*\) SIGMA0) N
(> ) N
(> ) N
(> ) N
(OUT) (Page 86/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (43/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (87-88) 44
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(35c43) p n
(< *       Scale the velocities to central velocity dispersion of SIGMA0 km/sec.) N
(---) N
(> * Scale the velocities to central velocity dispersion of SIGMA0 km/sec.) N
(40c48) N
(<    15     CONTINUE) N
(---) N
(>    15 CONTINUE) N
(43c51) N
(< *       Rescale crossing time, output times & termination time.) N
(---) N
(> * Rescale crossing time, output times & termination time.) N
(52c60) N
(<       WRITE \(6,30\)  SIGMA0, VRMS, VSCALE) N
(---) N
(>       WRITE \(6,30\) SIGMA0, VRMS, VSCALE) N
(54c62) N
(<      &                                              '  VSCALE =',F6.3,/\)) N
(---) N
(>      & '  VSCALE =',F6.3,/\)) N
(1,2c1,2) N
(< 974 2003-11-08 17:13 /work/Umi2/spurzem/5/nbody6compare/hpsort.f) N
(< nbody6compare/hpsort.f) N
(---) N
(> 972 2005-03-11 11:18 /work/Umi2/spurzem/5/nbody6++compare/hpsort.f) N
(> nbody6++compare/hpsort.f) N
(9,10c9,10) N
(<       REAL*8 Array\(45\)) N
(<       INTEGER Indx\(45\)) N
(---) N
(>       REAL*8 Array\(N\)) N
(>       INTEGER Indx\(N\)) N
(1,2c1,2) N
(< 19188 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/hrdiag.f) N
(< nbody6compare/hrdiag.f) N
(---) N
(> 19188 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/hrdiag.f) N
(> nbody6++compare/hrdiag.f) N
(1,2c1,2) N
(< 5683 2006-09-02 12:18 /work/Umi2/spurzem/5/nbody6compare/hrplot.f) N
(< nbody6compare/hrplot.f) N
(---) N
(> 6866 2006-06-20 02:26 /work/Umi2/spurzem/5/nbody6++compare/hrplot.f) N
(> nbody6++compare/hrplot.f) N
(15c15) N
(<       WRITE \(82,1\)  NPAIRS, TPHYS) N
(---) N
(>       if\(rank.eq.0\) WRITE \(82,1\)  NPAIRS, TPHYS) N
(19c19) N
(<       WRITE \(83,1\)  NS, TPHYS) N
(---) N
(>       if\(rank.eq.0\) WRITE \(83,1\)  NS, TPHYS) N
(35c35) N
(<                   WRITE \(6,3\)  I, NCH) N
(---) N
(>                   if\(rank.eq.0\) WRITE \(6,3\)  I, NCH) N
(45a46,57) N
(> * 1. Patch by Jarrod against fpe's \(A. Ernst\)) N
(>          IF\(\(KW.LE.1.OR.KW.EQ.7\).AND.AGE.GT.TM\)THEN) N
(>             AGE = 0.999D0*TM) N
(>          ELSEIF\(KW.LE.9.AND.AGE.GT.TN\)THEN) N
(>             IF\(KW.LE.6\)THEN) N
(>                AGE = MIN\(AGE,0.9999D0*TSCLS\(11\)\)) N
(>             ELSE) N
(>                AGE = MIN\(AGE,0.9999D0*TSCLS\(5\)\)) N
(>                AGE = MIN\(AGE,0.99D0*TN\)) N
(>             ENDIF) N
(>          ENDIF) N
(> * End patch) N
(OUT) (Page 87/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(71c83) p n
(<                   AGE = MAX\(TPLOT,TEV0\(J1\)\)*TSTAR - EPOCH\(J1\)) N
(---) N
(>                   AGE = MAX\(TPLOT,TEV0\(J\)\)*TSTAR - EPOCH\(J1\)) N
(72a85,89) N
(> * 2. Patch by Jarrod against fpe's \(A. Ernst\)  ) N
(>                   IF\(AGE.GT.TN\)THEN) N
(>                     AGE = MIN\(0.98D0*TN,TEV0\(J\)*TSTAR - EPOCH\(J\)\)) N
(>                   ENDIF) N
(> * End patch) N
(90,91c107,108) N
(<                   AGE = MAX\(TPLOT,TEV0\(J1\)\)*TSTAR - EPOCH\(J1\)) N
(<                   KW = KSTAR\(J1\)) N
(---) N
(>                   AGE = MAX\(TPLOT,TEV0\(J2\)\)*TSTAR - EPOCH\(J2\)) N
(>                   KW = KSTAR\(J2\)) N
(92a110,114) N
(> * 3. Patch by Jarrod against fpe's \(A. Ernst\)) N
(>                   IF\(AGE.GT.TN\)THEN) N
(>                     AGE = MIN\(0.98D0*TN,TEV0\(J\)*TSTAR - EPOCH\(J\)\)) N
(>                   ENDIF) N
(> * End patch) N
(99c121,133) N
(<               CALL STAR\(KW2,M0,M2,TM,TN,TSCLS,LUMS,GB,ZPARS\)) N
(---) N
(>               CALL STAR\(KW2,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS\)) N
(> * 4. Patch by Jarrod against fpe's \(A. Ernst\)) N
(>               IF\(\(KW2.LE.1.OR.KW2.EQ.7\).AND.AGE.GT.TM\)THEN) N
(>                  AGE = 0.999D0*TM) N
(>               ELSEIF\(KW2.LE.9.AND.AGE.GT.TN\)THEN) N
(>                  IF\(KW2.LE.6\)THEN) N
(>                     AGE = MIN\(AGE,0.9999D0*TSCLS\(11\)\)) N
(>                  ELSE) N
(>                     AGE = MIN\(AGE,0.9999D0*TSCLS\(5\)\)) N
(>                     AGE = MIN\(AGE,0.99D0*TN\)) N
(>                  ENDIF) N
(>               ENDIF) N
(> * End patch              ) N
(101c135) N
(<      &                    RM2,LUM2,KW2,MC,RCC\)) N
(---) N
(>      &                    RM2,LUM2,KW,MC,RCC\)) N
(120,124c154,157) N
(<               TE1 = 0.25*\(ZL1 - 2.0*R1\) + 3.7) N
(<               TE2 = 0.25*\(ZL2 - 2.0*R2\) + 3.7) N
(<               WRITE \(82,5\)  NAME\(J1\), NAME\(J2\), KW, KW2, KSTAR\(ICM\),) N
(<      &            RI, ECC, PB, SEMI, M1, M2, ZL1, ZL2, R1, R2, TE1, TE2) N
(<     5         FORMAT \(2I6,2I3,I4,F6.1,F6.3,10F7.3\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(82,5\)TTOT, NAME\(J1\), NAME\(J2\), KW, KW2, KSTAR\(ICM\),) N
(>      &                    RI, ECC, PB, SEMI, M1, M2, ZL1, ZL2, R1, R2) N
(>     5         FORMAT \(1X,1P,D15.7,2I8,3I5,10D15.5\)) N
(136,137c169,171) N
(<               WRITE \(83,10\)  NAME\(I\), KW, RI, M1, ZL1, R1, TE) N
(<    10         FORMAT \(I6,I3,F6.1,4F7.3\)) N
(---) N
(>               if\(rank.eq.0\) ) N
(>      &    WRITE \(83,10\)  TTOT, NAME\(I\), KW, RI, M1, ZL1, R1) N
(>    10         FORMAT \(1X,1P,D15.7,I8,I5,4D15.5\)) N
(141,142d174) N
(< *       Update next plotting time.) N
(<       TPLOT = TPLOT + DTPLOT) N
(148a181,182) N
(> ) N
(> ) N
(1,2c1,2) N
(< 390 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/iblock.f) N
(< nbody6compare/iblock.f) N
(OUT) (Page 88/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (44/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (89-90) 45
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> 390 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/iblock.f) N
(> nbody6++compare/iblock.f) N
(12c12) N
(<       DO 1 K = 2,40) N
(---) N
(>       DO 1 K = 2,64) N
(1,2c1,2) N
(< 1903 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ichain.f) N
(< nbody6compare/ichain.f) N
(---) N
(> 1903 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/ichain.f) N
(> nbody6++compare/ichain.f) N
(1,2c1,2) N
(< 3643 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/imf2.f) N
(< nbody6compare/imf2.f) N
(---) N
(> 3730 2005-03-09 14:24 /work/Umi2/spurzem/5/nbody6++compare/imf2.f) N
(> nbody6++compare/imf2.f) N
(6d5) N
(< *       BODY10,BODYN are in M_sun.) N
(9,11c8,10) N
(<       REAL*4  RAN2) N
(<       REAL*8  IMFBD) N
(<       REAL*8  LM,UM,BCM) N
(---) N
(>       REAL*4 RAN2) N
(>       REAL*8  BTMP\(NMAX\)) N
(>       REAL*8  LM,UM,ZM,IMFBD) N
(13d11) N
(<       COMMON/WORK1/  BCM\(NMAX\)) N
(15c13) N
(< *=========================  if KZ\(20\)=2:) N
(---) N
(> *=========================) N
(22c20) N
(< *       Generate initial mass function \(N-NBIN0 singles & 2*NBIN0 binaries\).) N
(---) N
(> * recover random number sequence from COMMON variable IDUM1.) N
(23a22,23) N
(> *) N
(> *       Generate initial mass function \(KZ\(20\) = 2 or > 2\).) N
(40c40) N
(<           IF \(ZM.GE.BODYN.AND.ZM.LE.BODY10\) THEN) N
(---) N
(>           IF \(ZM.GT.BODYN.AND.ZM.LT.BODY10\) THEN) N
(53c53) N
(<           BCM\(I\) = BODY\(2*I-1\) + BODY\(2*I\)) N
(---) N
(>           BTMP\(I\) = BODY\(2*I-1\) + BODY\(2*I\)) N
(59c59) N
(<           CALL SORT1\(NBIN0,BCM,JLIST\)) N
(---) N
(>           CALL SORT1\(NBIN0,BTMP,JLIST\)) N
(79,80c79,80) N
(<           BODY\(NBIN0-I+1\) = BCM\(I\)) N
(<           ZMB = ZMB + BCM\(I\)) N
(---) N
(>           BODY\(NBIN0-I+1\) = BTMP\(I\)) N
(>           ZMB = ZMB + BTMP\(I\)) N
(83,85c83,87) N
(<       WRITE \(6,45\)  NBIN0, BODY\(1\), BODY\(NBIN0\), ZMB/FLOAT\(NBIN0\)) N
(<    45 FORMAT \(//,12X,'BINARY STAR IMF:    NB =',I5,) N
(<      &               '  RANGE =',1P,2E10.2,'  <MB> =',E9.2\)) N
(---) N
(>       if\(rank.eq.0\)then) N
(>       WRITE \(6,45\)  NBIN0, BODY\(1\), BODY\(NBIN0\), ZMB, ZMB/FLOAT\(NBIN0\)) N
(>    45 FORMAT \(/,12X,'BINARY STAR IMF:   NB =',I5,'  RANGE =',1P,2E10.2,) N
(>      &     ' ZMB =',E9.2,'  <MB> =',E9.2\)) N
(OUT) (Page 89/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       end if) p n
(93c95) N
(<           BCM\(NS\) = BODY\(NBIN0+L\)) N
(---) N
(>           BTMP\(NS\) = BODY\(NBIN0+L\)) N
(98c100) N
(<       CALL SORT1\(NS,BCM,JLIST\)) N
(---) N
(>       CALL SORT1\(NS,BTMP,JLIST\)) N
(103,104c105,106) N
(<           BODY\(N-I+1\) = BCM\(I\)) N
(<           ZMS = ZMS + BCM\(I\)) N
(---) N
(>           BODY\(N-I+1\) = BTMP\(I\)) N
(>           ZMS = ZMS + BTMP\(I\)) N
(107,109c109,112) N
(<       WRITE \(6,80\)  N-NBIN0, BODY\(NBIN0+1\), BODY\(N\), ZMS/FLOAT\(N-NBIN0\)) N
(<    80 FORMAT \(/,12X,'SINGLE STAR IMF:    NS =',I5,'  RANGE =',1P,2E10.2,) N
(<      &                                            '  <MS> =',E9.2\)) N
(---) N
(>       if\(rank.eq.0\)) N
(>      &WRITE \(6,80\)N-NBIN0,BODY\(NBIN0+1\),BODY\(N\),ZMS,ZMS/FLOAT\(N-NBIN0\)) N
(>    80 FORMAT \(/,12X,'SINGLE STAR IMF:   NS =',I5,'  RANGE =',1P,2E10.2,) N
(>      &     ' ZMS =',E9.2,'  <MS> =',E9.2\)) N
(112c115,117) N
(<    90 ZMBAR = ZMASS/FLOAT\(N\)) N
(---) N
(>    90 CONTINUE) N
(> *       Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(1,2c1,2) N
(< 19966 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/imfbd.f) N
(< nbody6compare/imfbd.f) N
(---) N
(> 19400 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/imfbd.f) N
(> nbody6++compare/imfbd.f) N
(1,8c1) N
(< C) N
(< C Note: this routine contains the correction from Carsten Weidner) N
(< C       \(Nov.2004\), that for LOM above a certain value the integral) N
(< C       was not computed correctly.) N
(< C) N
(< C) N
(< C===========================================================) N
(<       REAL*8 FUNCTION IMFBD\(XX,LOM,UPM\)) N
(---) N
(>       real*8 FUNCTION IMFBD\(XX,LOM,UPM\)) N
(17,18c10) N
(< * \(For equal masses, LOM=UPM and IMFBD = UPM.\)) N
(< * LOM and UPM must be kept unchanged.) N
(---) N
(> * For equal masses, LOM=UPM and IMFBD = UPM.) N
(22,27c14,19) N
(<       REAL*8    ML,MH,M0,M1,M2,MU) N
(<       REAL*8    ALPHA0,ALPHA1,ALPHA2,ALPHA3,ALPHA4) N
(<       REAL*8    K,XH,X0,X1,X2,XU,MUP) N
(<       REAL*8    MTOT,MASSH,MASS0,MASS1,MASS2,MASSU) N
(<       REAL*8    XX,LOM,UPM,LM,UM,ZM) N
(<       REAL*8    BETA,INTGR,MINTGR,MGEN,XIN) N
(---) N
(>       REAL*8   ML,MH,M0,M1,M2,MU) N
(>       REAL*8   ALPHA0,ALPHA1,ALPHA2,ALPHA3,ALPHA4) N
(>       REAL*8   K,XH,X0,X1,X2,XU,MUP) N
(>       REAL*8   MTOT,MASSH,MASS0,MASS1,MASS2,MASSU) N
(>       REAL*8   XX,LOM,UPM,LM,UM,ZM) N
(>       REAL*8   BETA,INTGR,MINTGR,MGEN,XIN) N
(39,46d30) N
(< c      DATA    ML,     MH,    M0,      M1,      M2,    MU/) N
(< c     &      0.01D0, 0.08D0, 0.5D0,  1.0D0,   8.0D0, 100.0D0/) N
(OUT) (Page 90/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (45/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (91-92) 46
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< c      DATA      ALPHA0, ALPHA1, ALPHA2, ALPHA3, ALPHA4/) p n
(< c     &          0.3D0,  1.3D0,  2.2D0,   2.7D0,  2.7D0/) N
(< *) N
(< *) N
(< C       Standard of average IMF:) N
(< *) N
(48c32) N
(<      &      0.01D0, 0.08D0, 0.5D0,  1.0D0,   8.0D0, 100.0D0/) N
(---) N
(>      &      0.01D0, 0.08D0, 0.5D0,  1.0D0,   5.0D0, 100.0D0/) N
(50,51c34) N
(<      &          0.3D0,  1.3D0,  2.3D0,   2.3D0,  2.3D0/) N
(< *) N
(---) N
(>      &          1.3D0,  1.3D0,  2.2D0,   2.7D0,  2.7D0/) N
(54,57d36) N
(< C      DATA    ML,     MH,    M0,      M1,      M2,    MU/) N
(< C     &      0.01D0, 0.08D0, 0.5D0,  1.0D0,   8.0D0, 150.0D0/) N
(< C      DATA      ALPHA0, ALPHA1, ALPHA2, ALPHA3, ALPHA4/) N
(< C     &          0.3D0,  1.3D0,  2.3D0,   2.35D0,  2.35D0/) N
(58a38,41) N
(> c      DATA    ML,     MH,    M0,      M1,      M2,    MU/) N
(> c     &      2.D0, 2.D0, 2.D0,  2.0D0,   5.0D0, 500.0D0/) N
(> c      DATA      ALPHA0, ALPHA1, ALPHA2, ALPHA3, ALPHA4/) N
(> c     &          1.3D0,  -0.3D0,  2.2D0,   -.7D0,  7.D0/) N
(63,66c46,49) N
(< C      DATA   ML,       MH,    M0,      M1,      M2,    MU/) N
(< C     &     0.01D0,   0.08D0, 0.08D0,   1.0D0,  8.0D0, 100.0D0/) N
(< C      DATA    ALPHA0,  ALPHA1,   ALPHA2,  ALPHA3, ALPHA4/) N
(< C     &        0.3D0,   0.3D0,    1.2D0,   2.3D0,  2.3D0/) N
(---) N
(> c      DATA   ML,       MH,    M0,      M1,      M2,    MU/) N
(> c     &     0.01D0,   0.08D0, 0.5D0,   1.0D0,  5.0D0, 100.0D0/) N
(> c      DATA    ALPHA0,  ALPHA1,   ALPHA2,  ALPHA3, ALPHA4/) N
(> c     &        2.3D0,   2.3D0,    2.3D0,   2.3D0,  2.3D0/) N
(660a644) N
(> ) N
(1,2c1,2) N
(< 1773 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/imf.f) N
(< nbody6compare/imf.f) N
(---) N
(> 1692 2005-03-09 14:16 /work/Umi2/spurzem/5/nbody6++compare/imf.f) N
(> nbody6++compare/imf.f) N
(10,11d9) N
(< *       Generate Scalo IMF \(Eggleton, Fitchett & Tout, Ap.J. 347, 998\).) N
(<       ITER = 1) N
(14a13,14) N
(> *       Generate Scalo IMF \(Eggleton, Fitchett & Tout, Ap.J. 347, 998\).) N
(>       ITER = 1) N
(49c49) N
(<       WRITE \(6,20\)  BODY\(1\), BODY\(N\), ZMASS/FLOAT\(N\)) N
(---) N
(>       if\(rank.eq.0\)WRITE \(6,20\) BODY\(1\), BODY\(N\), ZMASS, ZMASS/FLOAT\(N\)) N
(51,54c51) N
(<      &                                '  BODY\(N\) =',E9.2,'  <M> =',E9.2\)) N
(< *) N
(< *       Replace input value by actual mean mass in solar units.) N
(<       ZMBAR = ZMASS/FLOAT\(N\)) N
(---) N
(>      &           '  BODY\(N\) =',E9.2,' ZMASS =',E9.2,'  <M> =',E9.2\)) N
(1,2c1,2) N
(< 23991 2006-02-16 12:13 /work/Umi2/spurzem/5/nbody6compare/impact.f) N
(< nbody6compare/impact.f) N
(---) N
(> 24880 2003-06-26 01:12 /work/Umi2/spurzem/5/nbody6++compare/impact.f) N
(> nbody6++compare/impact.f) N
(7a8,10) N
(>       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(>      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(OUT) (Page 91/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) p n
(12,13c15,16) N
(<       SAVE  NWARN) N
(<       DATA  NWARN /0/) N
(---) N
(>       SAVE  NMARG,NWARN) N
(>       DATA  NMARG,NWARN /0,0/) N
(162,163c165) N
(< *     IF \(\(APO.GT.0.01*RMIN.OR.JCOMP.GT.N\).AND.PMIN.GT.1.5*APO\) GO TO 30) N
(<       IF \(\(APO.GT.0.01*RMIN.OR.JCOMP.GT.N\).AND.PMIN.GT.APO\) GO TO 30) N
(---) N
(>       IF \(\(APO.GT.0.01*RMIN.OR.JCOMP.GT.N\).AND.PMIN.GT.1.5*APO\) GO TO 30) N
(171,172c173,174) N
(< *       Skip chain for pericentre outside 1.5*SEMI*\(1 + ECC\).) N
(<       IF \(JCOMP.LE.N.AND.PMIN.GT.1.5*APO\) THEN) N
(---) N
(> *       Check almost stable triples \(factor 1.2 is experimental\).) N
(>       IF \(JCOMP.LE.N.AND.PMIN.GT.2.5*SEMI\) THEN) N
(174,177c176,195) N
(< *         WRITE \(6,12\) ECC1, PMIN, RSTAB) N
(< *  12     FORMAT \(' HISTAB    E1 PM RSTAB ',F8.4,1P,4E10.2\)) N
(<           IF \(PMIN.GT.0.9*RSTAB\) GO TO 30) N
(<           GO TO 100) N
(---) N
(>           RA = SEMI1*\(1.0 + ECC1\)) N
(>           IF \(SEMI1.LT.0.0\) RA = RIJ) N
(>           GI = PERT*\(RA/RIJ\)**3) N
(> *       Use estimated apocentre perturbation for decision-making.) N
(>           IF \(PMIN.GT.1.2*RSTAB\) THEN) N
(>               IF \(GI.LT.0.05\) GO TO 30) N
(> *       Choose chain for critical case of highly eccentric outer orbit.) N
(>               IF \(ECC1.LT.0.95\) GO TO 100) N
(>           ELSE IF \(PMIN.GT.RSTAB\) THEN) N
(> *       Treat marginally stable triple according to external perturbation.) N
(>               IF \(GI.LT.0.05\) GO TO 30) N
(>               IF \(GI.LT.1.0.OR.ECC1.LT.0.9\) GO TO 100) N
(>           END IF) N
(>       END IF) N
(> *) N
(> *       Specify maximum size of unperturbed motion.) N
(>       IF \(PERT2.GT.0.0\) THEN) N
(>          RPERT = \(100.0*GSTAR*\(BODY\(I\) + BODY\(JCOMP\)\)/\(2.0*PERT2\)\)**0.33) N
(>       ELSE) N
(>          RPERT = 10.0*SEMI) N
(179d196) N
(<       IF \(PMIN.GT.3.0*SEMI.AND.JCOMP.LE.N\) GO TO 40) N
(184c201) N
(< *      Compare with existing subsystem of same type \(if any\).) N
(---) N
(> *       Compare with existing subsystem of same type \(if any\).) N
(186,187d202) N
(<           PERIM = R\(IPAIR\) + RIJ) N
(<           IF \(JCOMP.GT.N\) PERIM = PERIM + R\(JPAIR\)) N
(189c204) N
(<           CALL PERMIT\(PERIM,IGO\)) N
(---) N
(>           CALL PERMIT\(RPERT,IGO\)) N
(192,193c207,208) N
(<               IF \(NWARN.LT.50\) WRITE \(6,18\)  PERIM) N
(<    18         FORMAT \(' IMPACT    TERMINATION REQUEST    PERIM',1P,E9.1\)) N
(---) N
(>               IF \(NWARN.LT.50.and.rank.eq.0\) WRITE \(6,19\)  RPERT) N
(>    19         FORMAT \(' IMPACT    TERMINATION REQUEST    RPERT',1P,E9.1\)) N
(202,203c217,219) N
(<           WRITE \(6,19\)  I, JCOMP, ECC, ECC1, SEMI1, RIJ, GAMMA\(IPAIR\)) N
(<    19     FORMAT \(' HYP CHAIN    I J E E1 A1 RIJ G  ',) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,18\)  I, JCOMP, ECC, ECC1, SEMI1, RIJ, GAMMA\(IPAIR\)) N
(OUT) (Page 92/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (46/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (93-94) 47
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>    18     FORMAT \(' HYP CHAIN    I J E E1 A1 RIJ G  ',) p n
(208c224,225) N
(<           WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\), R\(IPAIR\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\), R\(IPAIR\),) N
(218,228c235,242) N
(< *       Include any close single or c.m. perturber \(cf. routine SETSYS\).) N
(<       IF \(JMAX.NE.JCOMP.AND.SQRT\(RMAX2\).LT.MIN\(2.0D0*RSUM,RMIN\).AND.) N
(<      &    NAME\(JMAX\).GT.0\) THEN) N
(<           IF \(JCOMP.GT.N.AND.JMAX.GT.N\) THEN) N
(<               JCMAX = 0) N
(<           ELSE) N
(<               WRITE \(6,21\)  NAME\(JCOMP\), NAME\(JMAX\), RSUM, SQRT\(RMAX2\)) N
(<    21         FORMAT \(' B+2 CHAIN    NAM RSUM RMX ',2I7,1P,2E10.2\)) N
(<               CALL XVPRED\(JMAX,-1\)) N
(<               JCMAX = JMAX) N
(<           END IF) N
(---) N
(> *       Include any close single perturber \(cf. routine SETSYS\).) N
(>       IF \(JMAX.NE.JCOMP.AND.SQRT\(RMAX2\).LT.2.0*RIJ.AND.) N
(>      &    JMAX.LE.N.AND.NAME\(JMAX\).GT.0\) THEN) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,22\)  NAME\(JCOMP\), NAME\(JMAX\), RSUM, SQRT\(RMAX2\)) N
(>    22     FORMAT \(' B+2 CHAIN    NAM RSUM RMX ',2I6,1P,2E10.2\)) N
(>           CALL XVPRED\(JMAX,-1\)) N
(>           JCMAX = JMAX) N
(240c254) N
(< *       Check possible switch or inert assumption \(#27 > 0\) for B-B event.) N
(---) N
(> *       Replace unperturbed near-synchronous binary by inert body in CHAIN.) N
(243c257,258) N
(<           WRITE \(6,24\)  NAME\(I1\), NAME\(I2\), NAME\(K1\), NAME\(K1+1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,24\)  NAME\(I1\), NAME\(I2\), NAME\(K1\), NAME\(K1+1\),) N
(260c275,276) N
(<                   WRITE \(6,25\)  SEMI0, RIJ, R\(JPAIR\), GAMMA\(JPAIR\)) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,25\)  SEMI0, RIJ, R\(JPAIR\), GAMMA\(JPAIR\)) N
(275,276c291,292) N
(< *       Switch pair indices and rename JCOMP if JPAIR has smaller size.) N
(<           IF \(STEP\(J1\).LT.STEP\(I1\).AND.LIST\(1,I1\).GT.0\) THEN) N
(---) N
(> *       Switch pair indices and rename JCOMP if JPAIR has smaller step.) N
(>           IF \(STEP\(J1\).LT.STEP\(I1\)\) THEN) N
(305c321,322) N
(<           WRITE \(6,28\)  NAME\(I\), NAME\(JCOMP\), NAME\(JG\), ECC1, PMIN, RIJ) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,28\)  NAME\(I\), NAME\(JCOMP\), NAME\(JG\), ECC1, PMIN, RIJ) N
(380c397) N
(<           RT = 10.0*MAX\(RADIUS\(I1\),RADIUS\(I2\)\)) N
(---) N
(>           RT = 4.0*MAX\(RADIUS\(I1\),RADIUS\(I2\)\)) N
(390c407,408) N
(<               WRITE \(6,35\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,35\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(395c413) N
(<               KSTAR\(I\) = 19) N
(---) N
(>               KSTAR\(I\) = 0) N
(516c534,535) N
(< *         WRITE \(6,44\)  NMARG, ANGLE, YF, PMIN, YF*PCRIT, TK) N
(---) N
(> *         if\(rank.eq.0\)) N
(OUT) (Page 93/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *    &    WRITE \(6,44\)  NMARG, ANGLE, YF, PMIN, YF*PCRIT, TK) p n
(524c543,544) N
(<               WRITE \(6,45\)  NMARG, NAME\(I\), NAME\(JCOMP\), ANGLE, Q,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,45\)  NMARG, NAME\(I\), NAME\(JCOMP\), ANGLE, Q,) N
(530c550,551) N
(<               WRITE \(6,46\)  ECC1, PERT, RP, RSI, TK1) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,46\)  ECC1, PERT, RP, RSI, TK1) N
(542c563,564) N
(<               WRITE \(6,48\)  TIME+TOFF, Q, ECC, ECC1, SEMI, PMIN, PCRIT,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,48\)  TIME+TOFF, Q, ECC, ECC1, SEMI, PMIN, PCRIT,) N
(548c570,571) N
(<           WRITE \(73,49\)  TIME+TOFF, Q, ECC, ECC1, SEMI, PMIN, PCRIT,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(73,49\)  TIME+TOFF, Q, ECC, ECC1, SEMI, PMIN, PCRIT,) N
(559c582,583) N
(<           WRITE \(6,50\)  NMERGE) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,50\)  NMERGE) N
(588c612,613) N
(<               WRITE \(6,58\)  ECC1, EMAX, YFAC, PM, PCRIT, YFAC*PCRIT2, TG) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,58\)  ECC1, EMAX, YFAC, PM, PCRIT, YFAC*PCRIT2, TG) N
(593c618,619) N
(<               WRITE \(6,59\)  ECC1, EMAX, YFAC, PM, PCRIT, YFAC*PCRIT2, TG) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,59\)  ECC1, EMAX, YFAC, PM, PCRIT, YFAC*PCRIT2, TG) N
(603c629,630) N
(<               WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\),R\(IPAIR\),) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\),R\(IPAIR\),) N
(612,614c639,641) N
(<               WRITE \(6,60\)  NAME\(I1\), NAME\(JI\), NAME\(I1+1\), NAME\(J1\),) N
(<      &                      NAME\(JJ\), NAME\(J1+1\),  ECC, ECC1, R\(JPAIR\)) N
(<    60         FORMAT \(' HI MERGE    NM E E1 RJ ',6I6,2F7.3,1P,E10.2\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,60\)  NAME\(JI\), NAME\(JJ\), ECC, ECC1, R\(JPAIR\)) N
(>    60         FORMAT \(' HI MERGE    NM E E1 RJ ',2I6,2F7.3,1P,E10.2\)) N
(618c645,646) N
(<           WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\), R\(IPAIR\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  WHICH1, IPAIR, TIME+TOFF, H\(IPAIR\), R\(IPAIR\),) N
(635a664,665) N
(> ) N
(> ) N
(1,2c1,2) N
(< 1104 2004-04-02 12:00 /work/Umi2/spurzem/5/nbody6compare/inclin.f) N
(< nbody6compare/inclin.f) N
(---) N
(> 1077 1997-07-17 15:49 /work/Umi2/spurzem/5/nbody6++compare/inclin.f) N
(> nbody6++compare/inclin.f) N
(36d35) N
(<       FAC = MIN\(FAC,1.0D0\)) N
(1,2c1,2) N
(< 449 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/inext.f) N
(< nbody6compare/inext.f) N
(---) N
(OUT) (Page 94/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (47/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (95-96) 48
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> 449 2001-08-14 19:20 /work/Umi2/spurzem/5/nbody6++compare/inext.f) p n
(> nbody6++compare/inext.f) N
(1,2c1,2) N
(< 2614 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/input.f) N
(< nbody6compare/input.f) N
(---) N
(> 3117 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/input.f) N
(> nbody6++compare/input.f) N
(0a1,4) N
(> # 1 "input.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "input.F") N
(4,5c8,9) N
(< *       Parameter input.) N
(< *       ----------------) N
(---) N
(> * Parameter input.) N
(> * ----------------) N
(9a14) N
(> # 19 "input.F") N
(11c16) N
(< *       Make a formal call to define input parameters & counters.) N
(---) N
(> * Make a formal call to define input parameters & counters.) N
(14,22c19,36) N
(< *       Read & print the main input parameters.) N
(<       READ \(5,*\)  N, NFIX, NCRIT, NRAND, NNBMAX, NRUN) N
(<       READ \(5,*\)  ETAI, ETAR, RS0, DTADJ, DELTAT, TCRIT, QE, RBAR, ZMBAR) N
(<       READ \(5,*\)  \(KZ\(J\),J=1,40\)) N
(<       READ \(5,*\)  DTMIN, RMIN, ETAU, ECLOSE, GMIN, GMAX) N
(< *) N
(<       WRITE \(6,10\)) N
(<    10 FORMAT \(/////,15X,'N  NFIX  NCRIT  NRAND  NNBMAX  NRUN'\)) N
(<       WRITE \(6,12\)  N, NFIX, NCRIT, NRAND, NNBMAX, NRUN) N
(---) N
(>       IF\(rank.eq.0\)THEN) N
(> * Read & print the main input parameters.) N
(>          READ \(5,*\) N, NFIX, NCRIT, NRAND, NNBOPT, NRUN) N
(> C Termination time in physical units, TCRITp, read in nbody6.F) N
(>          READ \(5,*\) ETAI, ETAR, RS0, DTADJ, DELTAT, TCRIT,) N
(>      & QE, RBAR, ZMBAR) N
(>          READ \(5,*\) \(KZ\(J\),J=1,40\)) N
(>          READ \(5,*\) \(BK\(J\),J=1,10\)) N
(>          READ \(5,*\) DTMIN, RMIN, ETAU, ECLOSE, GMIN, GMAX) N
(>       END IF) N
(> *) N
(> # 61 "input.F") N
(> *) N
(> # 70 "input.F") N
(>       if\(rank.eq.0\)then) N
(>          WRITE \(6,10\)) N
(>    10 FORMAT \() N
(>          WRITE \(6,12\) N, NFIX, NCRIT, NRAND, NNBOPT, NRUN) N
(24,32c38,52) N
(<       WRITE \(6,15\)) N
(<    15 FORMAT \(//,12X,'ETAI      ETAR      RS0       DTADJ     DELTAT',) N
(<      &                        '    TCRIT     QE        RBAR      ZMBAR'\)) N
(<       WRITE \(6,20\)  ETAI, ETAR, RS0, DTADJ, DELTAT, TCRIT, QE, RBAR,) N
(<      &                                                             ZMBAR) N
(<    20 FORMAT \(/,9X,1P,10E10.1\)) N
(<       WRITE \(6,22\)) N
(<    22 FORMAT \(//,12X,'OPTIONS'\)) N
(<       WRITE \(6,24\)  \(J,J=1,40\)) N
(---) N
(> *) N
(> C New: \(Aug.1998, P.Kroupa\)) N
(>          WRITE\(6,15\)) N
(>    15 FORMAT \() N
(OUT) (Page 95/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      & '     DELTAT',) p n
(>      & '     TCRITp    TCRIT     QE',) N
(>      & '        RBAR       ZMBAR'\)) N
(>          WRITE \(6,20\) ETAI, ETAR, RS0, DTADJ, DELTAT, TCRITp, TCRIT,) N
(>      & QE, RBAR,) N
(>      & ZMBAR) N
(>    20 FORMAT \(/,10X,1P10E10.1\)) N
(> *) N
(>          WRITE \(6,22\)) N
(>    22 FORMAT \() N
(>          WRITE \(6,24\) \(J,J=1,40\)) N
(34c54) N
(<       WRITE \(6,26\)  \(KZ\(J\),J=1,40\)) N
(---) N
(>          WRITE \(6,26\) \(KZ\(J\),J=1,40\)) N
(36,40c56,67) N
(<       WRITE \(6,28\)) N
(<    28 FORMAT \(//,12X,'DTMIN     RMIN      ETAU      ECLOSE    GMIN',) N
(<      &                                                     '      GMAX'\)) N
(<       WRITE \(6,30\)  DTMIN, RMIN, ETAU, ECLOSE, GMIN, GMAX) N
(<    30 FORMAT \(/,9X,1P,6E10.1\)) N
(---) N
(>          WRITE \(6,21\)) N
(>    21 FORMAT \() N
(>          WRITE \(6,25\) \(J,J=1,10\)) N
(>    25 FORMAT \(/,9X,10I3\)) N
(>          WRITE \(6,27\) \(BK\(J\),J=1,10\)) N
(>    27 FORMAT \(/,9X,10I3\)) N
(>          WRITE \(6,28\)) N
(>    28 FORMAT \() N
(>      & '      GMAX'\)) N
(>          WRITE \(6,30\) DTMIN, RMIN, ETAU, ECLOSE, GMIN, GMAX) N
(>    30 FORMAT \(/,9X,1P6E10.1\)) N
(>       end if) N
(42c69,80) N
(< *       Perform a simple validation check on main input parameters.) N
(---) N
(> * Define total particle number & neighbour membership range.) N
(>       NTOT = N) N
(>       NZERO = N) N
(>       NNBMAX = MIN\(N/2,LMAX - 3\)) N
(>       ZNBMIN = MAX\(0.01*FLOAT\(NNBMAX\),1.0\)) N
(>       ZNBMAX = 0.9*FLOAT\(NNBMAX\)) N
(> * Save initial ETAI.) N
(>       ETA0 = ETAI) N
(>       RSMIN = RS0) N
(>       RC = RS0) N
(> *) N
(> * Perform a simple validation check on main input parameters.) N
(48c86) N
(< *       Read parameters for binary evolution analysis.) N
(---) N
(> * Read parameters for binary evolution analysis.) N
(50,54c88,101) N
(<           READ \(5,*\)  DELTAS, ORBITS\(1\), \(GPRINT\(J\),J=1,K\)) N
(<           WRITE \(6,40\)  DELTAS, ORBITS\(1\), \(GPRINT\(J\),J=1,K\)) N
(<    40     FORMAT \(//,12X,'DELTAS =',F6.2,'  ORBITS\(1\) =',F6.2,) N
(<      &                                            '  GPRINT\(J\) =',9F7.3\)) N
(< *       Modify binary output factor by perturbation at different levels.) N
(---) N
(>           if\(rank.eq.0\)then) N
(>           READ \(5,*\) DELTAS, ORBITS\(1\), \(GPRINT\(J\),J=1,K\)) N
(>           end if) N
(> *) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(OUT) (Page 96/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (48/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (97-98) 49
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *) p n
(>       if\(rank.eq.0\)WRITE \(6,40\) DELTAS, ORBITS\(1\), \(GPRINT\(J\),J=1,K\)) N
(>    40 FORMAT \() N
(>      & '  GPRINT\(J\) =',9F7.3\)) N
(> * Modify binary output factor by perturbation at different levels.) N
(57c104) N
(<    50     CONTINUE) N
(---) N
(>    50 CONTINUE) N
(60,61c107,119) N
(< *       Set random number skip for routine DATA.) N
(<       IDUM1 = NRAND) N
(---) N
(> C Old version:) N
(> * Set random number skip for routine DATA.) N
(> c IDUM1 = NRAND) N
(> C NEW version \(14.08.98, P.Kroupa\):) N
(> C* Set random number SEED for routine DATA.) N
(>       IDUM1 = -1*NRAND) N
(> c+++ Notify others of this change on log file:) N
(>       if\(rank.eq.0\)then) N
(>       write\(6,*\)) N
(>       write\(6,*\)' ****** NOTE: new random number seed initialisation!') N
(>       write\(6,*\)' ****** AND new ran2 from new ed. of Press et al.') N
(>       write\(6,*\)) N
(>       end if) N
(63,64d120) N
(< *       Save square of c.m. approximation parameter \(coupled to GMIN\).) N
(<       CMSEP2 = GMIN**\(-0.666666667\)) N
(66,75c122,123) N
(< *       Define total particle number & neighbour membership range.) N
(<       NTOT = N) N
(<       NZERO = N) N
(<       ZNBMIN = 0.2*FLOAT\(NNBMAX\)) N
(<       ZNBMAX = 0.9*FLOAT\(NNBMAX\)) N
(< *       Save initial ETAI.) N
(<       ETA0 = ETAI) N
(<       RSMIN = RS0) N
(<       RC = RS0) N
(< *       Temporary save of initial neighbour sphere for OUTPUT & NBLIST.) N
(---) N
(> * Save square of c.m. approximation parameter \(coupled to GMIN\).) N
(>       CMSEP2 = GMIN**\(-0.666666667\)) N
(1,2c1,2) N
(< 2635 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/insert.f) N
(< nbody6compare/insert.f) N
(---) N
(> 2515 2001-09-30 19:50 /work/Umi2/spurzem/5/nbody6++compare/insert.f) N
(> nbody6++compare/insert.f) N
(39a40,42) N
(>       IF \(LSTAR.GT.NNTB\) THEN) N
(>           LSTAR = \(LI + NNTB\)/2) N
(>       END IF) N
(44,51c47,51) N
(< *       Avoid division by zero \(unperturbed steps may also be quantized\).) N
(<       IF \(TBLIST.NE.TJ\) THEN) N
(<           FAC = \(TI - TJ\)/\(TBLIST - TJ\)) N
(<           LSTAR = LSTAR + FLOAT\(NNTB - LSTAR\)*FAC) N
(<           LSTAR = MAX\(LSTAR,LI+1\)) N
(<           LSTAR = MIN\(LSTAR,NNTB\)) N
(<           J = KBLIST\(LSTAR\)) N
(<       END IF) N
(---) N
(>       FAC = \(TI - TJ\)/\(TBLIST - TJ\)) N
(>       LSTAR = LSTAR + FLOAT\(NNTB - LSTAR\)*FAC) N
(>       LSTAR = MAX\(LSTAR,LI+1\)) N
(>       LSTAR = MIN\(LSTAR,NNTB\)) N
(>       J = KBLIST\(LSTAR\)) N
(67,71c67) N
(OUT) (Page 97/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           IF \(J.EQ.I\) THEN) p n
(<               LI = LI - 1) N
(<               GO TO 50) N
(<           END IF) N
(<           IF \(TI.LT.T0\(J\) + STEP\(J\)\) GO TO 20) N
(---) N
(>           IF \(LSTAR.GT.LI.AND.TI.LT.T0\(J\) + STEP\(J\)\) GO TO 20) N
(86c82,84) N
(<    50 RETURN) N
(---) N
(>    50 CONTINUE) N
(> *) N
(>       RETURN) N
(88a87) N
(> ) N
(1,2c1,2) N
(< 2654 2006-02-15 18:45 /work/Umi2/spurzem/5/nbody6compare/instar.f) N
(< nbody6compare/instar.f) N
(---) N
(> 1980 2006-06-20 02:33 /work/Umi2/spurzem/5/nbody6++compare/instar.f) N
(> nbody6++compare/instar.f) N
(8,10c8,9) N
(<       REAL*8  LUMS\(10\),TSCLS\(20\),GB\(10\)) N
(<       REAL*8  M0,M1,LUM,MC) N
(<       EXTERNAL  RZAMSF) N
(---) N
(>       REAL*8  LUMS\(10\),TSCLS\(20\),GB\(10\),TM,TN) N
(>       REAL*8  M0,M1,RM,LUM,AGE,MC,RCC) N
(15c14) N
(<       TPLOT = 0.0) N
(---) N
(>       TPLOT = 0.0D0) N
(29d27) N
(<       NBH = 0) N
(32,34c30) N
(<       NKICK = 0) N
(<       NBKICK = 0) N
(<       AGE = 0.D0) N
(---) N
(>       AGE = 0.d0) N
(40,41c36) N
(< *       Skip stellar evolution scheme for old routine MLOSS.) N
(<       IF \(KZ\(19\).EQ.1\) GO TO 20) N
(---) N
(> *     Set the Hydrogen & Helium abundances.) N
(43d37) N
(< *       Set the Hydrogen & Helium abundances.) N
(47c41,42) N
(< *       Set evolution parameters which depend solely on metallicity.) N
(---) N
(> *     Set evolution parameters which depend solely on metallicity.) N
(> *) N
(55,67c50,54) N
(<           IF \(M1.GT.0.1\) THEN) N
(<               KW = 1) N
(<               AGE = 0.0) N
(<               CALL STAR\(KW,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS\)) N
(<               CALL HRDIAG\(M0,AGE,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,) N
(<      &                    RM,LUM,KW,MC,RCC\)) N
(< *       Set initial look-up time 0.05 of main sequence time \(but < 10**7 yrs\).) N
(<               TEV\(I\) = MIN\(0.05*TM,10.0D0\)/TSTAR) N
(<           ELSE) N
(<               KW = 0) N
(<               RM = RZAMSF\(M1\)) N
(<               TEV\(I\) = 1.0D+10/TSTAR) N
(<           END IF) N
(---) N
(>           KW = 1) N
(>           AGE = 0.0) N
(OUT) (Page 98/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (49/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (99-100) 50
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           CALL STAR\(KW,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS\)) p n
(>           CALL HRDIAG\(M0,AGE,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,) N
(>      &                RM,LUM,KW,MC,RCC\)) N
(72,80c59,61) N
(<           IF \(KZ\(27\).EQ.3.AND.KZ\(28\).GT.0\) THEN) N
(<               RADIUS\(I\) = 1.0D-12/\(3.0*RBAR\)) N
(<               KW = 13) N
(<               TEV\(I\) = 1000.0) N
(<               M0 = 25.0) N
(<               EPOCH\(I\) = -15.0/TSTAR) N
(<               IF \(I.EQ.1\) WRITE \(6,5\)  M1, KW, RADIUS\(I\)*SU) N
(<     5         FORMAT \(/,12X,'FIRST STAR:    M K* R/SU ',F7.2,I4,1P,E9.1\)) N
(<           END IF) N
(---) N
(> *       Set initial look-up time 0.05 of main sequence time \(but < 10**7 yrs\).) N
(>           TEV\(I\) = MIN\(0.05*TM,10.0D0\)/TSTAR) N
(> *) N
(95c76) N
(<    20 DT = 1.0E-03/TSCALE) N
(---) N
(>       DT = 1.0E-03/TSCALE) N
(1,2c1,2) N
(< 13145 2006-09-09 19:13 /work/Umi2/spurzem/5/nbody6compare/intgrt.f) N
(< nbody6compare/intgrt.f) N
(---) N
(> 18656 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/intgrt.f) N
(> nbody6++compare/intgrt.f) N
(0a1,4) N
(> # 1 "intgrt.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "intgrt.F") N
(4,5c8,9) N
(< *       N-body integrator flow control.) N
(< *       -------------------------------) N
(---) N
(> * N-body integrator flow control.) N
(> * -------------------------------) N
(8,14c12,19) N
(<       COMMON/CLUMP/   BODYS\(NCMAX,5\),T0S\(5\),TS\(5\),STEPS\(5\),RMAXS\(5\),) N
(<      &                NAMES\(NCMAX,5\),ISYS\(5\)) N
(<       REAL*8  XI\(3\),XIDOT\(3\)) N
(<       INTEGER  NXTLST\(NMAX\),IBL\(LMAX\),NBLIST\(NMAX\),LISTQ\(NMAX\),NL\(20\)) N
(<       LOGICAL LOOP,LSTEPM) N
(<       SAVE IQ,ICALL,NQ,LQ,LOOP,LSTEPM,STEPM,ISAVE,JSAVE) N
(<       DATA IQ,ICALL,LQ,LOOP,LSTEPM,STEPM /0,2,11,.TRUE.,.FALSE.,0.03125/) N
(---) N
(>       COMMON/CLUMP/ BODYS\(NCMAX,5\),T0S\(5\),TS\(5\),STEPS\(5\),RMAXS\(5\),) N
(>      & NAMES\(NCMAX,5\),ISYS\(5\)) N
(>       INTEGER JHIST,JHISTR) N
(>       LOGICAL LSHRNK,LSTEPM) N
(>       EXTERNAL SHORT) N
(>       COMMON/BLKLVL/JHIST\(0:NMAX\),JHISTR\(0:NMAX\)) N
(>       INTEGER NXTLST\(NMAX\),IREG\(NMAX\),NBLIST\(NMAX\),IBL\(LMAX\)) N
(>       COMMON/STSTAT/ TINIT,NIR,NIB,NRGL,NKS) N
(15a21,25) N
(> ) N
(> ) N
(> ) N
(> ) N
(>       INTEGER IMPI\(LMAX,NMAX\),JMPI\(11,maxpe\)) N
(17,18c27,28) N
(< *       Enforce level search on return, except new and terminated KS.) N
(<       IF \(IPHASE.NE.1.AND.IPHASE.NE.2\) LOOP = .TRUE.) N
(---) N
(>       SAVE IQ,ICALL,LSTEPM,STEPM) N
(>       DATA IQ,ICALL,LSTEPM,STEPM /0,2,.FALSE.,0.03125/) N
(20c30) N
(< *       Update quantized value of STEPM for large N \(first time only\).) N
(OUT) (Page 99/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Update quantized value of STEPM for large N \(first time only\).) N
(27c37) N
(< *       Search for high velocities after escape or KS/chain termination.) N
(---) N
(> * Search for high velocities after escape or KS/chain termination.) N
(32c42) N
(< *       Reset control & regularization indicators.) N
(---) N
(> * Reset control & regularization indicators.) N
(34a45) N
(> * Initialize end-point of integration times and set TMIN.) N
(36,37c47) N
(<       DTM = 1.0) N
(< *       Initialize end-point of integration times and set TMIN and DTM.) N
(---) N
(> * Initialize end-point of integration times and set TMIN and DTM.) N
(39,48c49,52) N
(<           TIMENW\(I\) = T0\(I\) + STEP\(I\)) N
(<           TMIN = MIN\(TIMENW\(I\),TMIN\)) N
(<           DTM = MIN\(DTM,STEP\(I\)\)) N
(<  1000 CONTINUE) N
(< *) N
(< *       Determine level for the smallest step \(ignore extreme values\).) N
(<       LQS = 20) N
(<       DO 1001 L = 6,20) N
(<           IF \(DTM.EQ.DTK\(L\)\) THEN) N
(<               LQS = L) N
(---) N
(>          TIMENW\(I\) = T0\(I\) + STEP\(I\)) N
(>           IF\(TIMENW\(I\).LT.TMIN\)THEN) N
(>              TMIN = TIMENW\(I\)) N
(>              IMIN = I) N
(50c54) N
(<  1001 CONTINUE) N
(---) N
(>  1000 CONTINUE) N
(52,53d55) N
(< *       Specify upper level for optimized membership.) N
(<       LQB = LQS - 4) N
(56,57d57) N
(< *       Enforce new block step search on significant changes.) N
(<       TLISTQ = TIME) N
(59,101c59,60) N
(< *       Check updating new list of block steps with T0 + STEP =< TLISTQ.) N
(<     1 ICALL = ICALL + 1) N
(< *       Reset TMIN second & third time after change to catch new chain step.) N
(<       IF \(TIME.GE.TLISTQ.OR.ICALL.LE.3\) THEN) N
(< *       Update interval by optimization at major times \(sqrt of N-NPAIRS\).) N
(<           IF \(DMOD\(TLISTQ,2.0D0\).EQ.0.0D0.OR.LOOP\) THEN) N
(<               LOOP = .FALSE.) N
(<               DO 10 L = 1,20) N
(<                   NL\(L\) = 0) N
(<    10         CONTINUE) N
(<               DO 14 I = IFIRST,NTOT) N
(< *       Count steps at five different levels for the smallest values.) N
(<                   DO 12 L = LQB,LQS) N
(<                       IF \(STEP\(I\).LT.DTK\(L\)\) NL\(L\) = NL\(L\) + 1) N
(<    12             CONTINUE) N
(<    14         CONTINUE) N
(<               NLSUM = 0) N
(< *       Determine interval by summing smallest steps until near sqrt\(N-N_b\).) N
(<               NSQ = SQRT\(FLOAT\(N - NPAIRS\)\)) N
(<               LQ = LQS) N
(<               DO 15 L = LQS,LQB,-1) N
(<                   NLSUM = NLSUM + NL\(L\)) N
(<                   IF \(NLSUM.LE.NSQ\) LQ = L) N
(<    15         CONTINUE) N
(< *             WRITE \(6,16\)  TIME+TOFF,NQ,NLSUM,LQ,\(NL\(K\),K=LQB,LQS\)) N
(OUT) (Page 100/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (50/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (101-102) 51
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *  16         FORMAT \(' LEVEL CHECK:    T NQ NLSUM LQ NL  ',) p n
(< *    &                                  F9.3,3I5,2X,7I4\)) N
(<           END IF) N
(< *) N
(< *       Increase interval by optimized value.) N
(<           NQ = 0) N
(<           TMIN = 1.0D+10) N
(<    18     TLISTQ = TLISTQ + DTK\(LQ\)) N
(<           DO 20 I = IFIRST,NTOT) N
(<               IF \(TIMENW\(I\).LE.TLISTQ\) THEN) N
(<                   NQ = NQ + 1) N
(<                   LISTQ\(NQ\) = I) N
(<                   TMIN = MIN\(TIMENW\(I\),TMIN\)) N
(<               END IF) N
(<    20     CONTINUE) N
(< *       Increase interval in rare case of zero membership.) N
(<           IF \(NQ.EQ.0\) GO TO 18) N
(<       END IF) N
(---) N
(> * Find all particles due at next block time.) N
(>     1 CONTINUE) N
(103,104c62) N
(< *       Find all particles in next block \(TIMENW = TMIN\).) N
(<       CALL INEXT\(NQ,LISTQ,TMIN,NXTLEN,NXTLST\)) N
(---) N
(>       NXTLEN = 0) N
(106,111c64,85) N
(< *       Set new time and save block time \(for regularization terminations\).) N
(<       I = NXTLST\(1\)) N
(<       TIME = T0\(I\) + STEP\(I\)) N
(<       TBLOCK = TIME) N
(<       LI = 0) N
(<       IPRED = 0) N
(---) N
(> * Reset TSMALL second time after main change to catch new small steps.) N
(>       ICALL = ICALL + 1) N
(>       IF \(ICALL.EQ.2\) GO TO 999) N
(> *) N
(> * determine next block particles without assuming) N
(> * sorted time step list \(R.Sp.\)) N
(> *) N
(>       DO 5 J = IFIRST, NTOT) N
(>          IF\(DABS\(TIMENW\(J\)-TMIN\).LT.DTK\(40\)\) THEN) N
(>             NXTLEN = NXTLEN + 1) N
(>             NXTLST\(NXTLEN\) = J) N
(>          END IF) N
(>   5 CONTINUE) N
(> *) N
(> * if\(ixxxx.gt.0\)then) N
(> * if\(time.gt.2.0D0\)) N
(> * *print*,' nxtlen,block=',nxtlen,\(name\(nxtlst\(k\)\),k=1,nxtlen\)) N
(> * if\(ixxxx.gt.3\)ixxxx=0) N
(> * end if) N
(> *) N
(> * Update short timestep list for regularization search.) N
(>       CALL SHORT\(NXTLEN,NXTLST\)) N
(113,114c87,89) N
(< *       Re-determine list if current time exceeds boundary.) N
(<       IF \(TIME.GT.TLISTQ\) GO TO 1) N
(---) N
(> * Set new time and save block time \(for regularization terminations\).) N
(>       TIME = TMIN) N
(>       TBLOCK = TIME) N
(116c91) N
(< *       Check option for advancing interstellar clouds.) N
(---) N
(> * Check option for advancing interstellar clouds.) N
(121,138c96,103) N
(< *       Check optional integration of cluster guiding centre.) N
(OUT) (Page 101/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       IF \(KZ\(14\).EQ.3.OR.KZ\(14\).EQ.4\) THEN) p n
(<           IF \(KZ\(14\).EQ.3.AND.DMOD\(TIME,STEPX\).EQ.0.0D0\) THEN) N
(<               CALL GCINT) N
(<           END IF) N
(< *       Include mass loss by gas expulsion \(Kroupa et al. MN 321, 699\).) N
(<           IF \(MPDOT.GT.0.0D0.AND.TIME + TOFF.GT.TDELAY\) THEN) N
(<               MP = MP0/\(1.0 + MPDOT*\(TIME + TOFF - TDELAY\)\)) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       Include commensurability test \(may be suppressed if no problems\).) N
(< *     IF \(DMOD\(TIME,STEP\(I\)\).NE.0.0D0\) THEN) N
(< *         WRITE \(6,25\)  I, NAME\(I\), NSTEPI, TIME, STEP\(I\), TIME/STEP\(I\)) N
(< *  25     FORMAT \(' DANGER!   I NM # TIME STEP T/DT ',) N
(< *    &                        2I6,I11,F12.5,1P,E9.1,0P,F16.4\)) N
(< *         STOP) N
(< *     END IF) N
(---) N
(> * Include commensurability test \(may be suppressed if no problems\).) N
(> * IF \(STEP\(IMIN\).LT.1.0E-15.OR.DMOD\(TIME,STEP\(IMIN\)\).NE.0.0D0\) THEN) N
(> * WRITE \(6,1005\) IMIN, NAME\(IMIN\), NSTEPI, TIME, STEP\(IMIN\),) N
(> * & TIME/STEP\(IMIN\)) N
(> *1005 FORMAT \(' DANGER!   I NM # TIME STEP T/DT ',) N
(> * & 2I5,I11,F12.5,1P,E9.1,0P,F16.4\)) N
(> * CALL ABORT) N
(> * END IF) N
(140c105) N
(< *       Check for new regularization at end of block.) N
(---) N
(> * Check for new regularization at end of block.) N
(144,146d108) N
(< *       Copy the saved component indices.) N
(<           ICOMP = ISAVE) N
(<           JCOMP = JSAVE) N
(150c112) N
(< *       Check next adjust time before beginning a new block.) N
(---) N
(> * Check next adjust time before beginning a new block.) N
(157c119) N
(< *       Check output time in case DTADJ & DELTAT not commensurate.) N
(---) N
(> * Also check output time in case DTADJ & DELTAT not commensurate.) N
(164c126) N
(< *       See whether to advance any close encounters at first new time.) N
(---) N
(> * See whether to advance any close encounters at first new time.) N
(165a128) N
(>             call cputim\(tt5\)) N
(166a130,132) N
(>             call cputim\(tt6\)) N
(>             ttks = ttks + \(tt6-tt5\)*60.) N
(> *) N
(170c136,183) N
(< *       Check regular force condition for small block memberships.) N
(---) N
(> * Check regularization criterion for single particles.) N
(>       IKS = 0) N
(>       ISMIN = 0) N
(>       DSMIN = DTMIN) N
(> * Search only in prepared list of short-step particles. \(R.Sp.\)) N
(>       ISHORT = LSHORT\(1\)) N
(>       DO 50 L = 2,ISHORT+1) N
(>           I = LSHORT\(L\)) N
(> * Search for minimum timestep candidate for not ordered steps \(R.Sp.\)) N
(> * Beware that members of LSHORT may be members of KS pair \(R.Sp.\)) N
(>           IF \(STEP\(I\).LT.DTMIN.AND.STEP\(I\).LT.DSMIN.AND.I.LE.N.AND.) N
(>      & I.GE.IFIRST\) THEN) N
(>               DSMIN = STEP\(I\)) N
(>               ISMIN = I) N
(OUT) (Page 102/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (51/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (103-104) 52
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           END IF) p n
(>    50 CONTINUE) N
(> *) N
(> * See whether dominant body can be regularized.) N
(>       IF\(ISMIN.GT.0\) THEN) N
(>           CALL SEARCH\(ISMIN,IKS\)) N
(> *) N
(> * Include close encounter search for low-eccentric massive binaries.) N
(>       IF \(IKS.EQ.0.AND.STEP\(ISMIN\).LT.4.0*DTMIN\) THEN) N
(> * Consider massive single bodies in absence of subsystems.) N
(>           IF \(ISMIN.LE.N.AND.BODY\(I\).GT.2.0*BODYM.AND.NSUB.EQ.0\) THEN) N
(> *) N
(> * Obtain two-body elements and relative perturbation.) N
(>               JMIN = 0) N
(>               CALL ORBIT\(ISMIN,JMIN,SEMI,ECC,GI\)) N
(> *) N
(>               EB = -0.5*BODY\(ISMIN\)*BODY\(JMIN\)/SEMI) N
(>               IF \(EB.LT.EBH.AND.GI.LT.0.25.AND.JMIN.GE.IFIRST\) THEN) N
(>                   APO = SEMI*\(1.0 + ECC\)) N
(> * Check eccentricity \(cf. max perturbation\) and neighbour radius.) N
(>                   IF \(ECC.LT.0.5.AND.APO.LT.0.02*RS\(ISMIN\)\) THEN) N
(> * PRINT*, ' KS TRY: NAM E A EB ',) N
(> * * NAME\(ISMIN\), NAME\(JMIN\), ECC, SEMI, EB) N
(> * CALL FLUSH\(6\)) N
(>                       IKS = IKS + 1) N
(>                       ICOMP = ISMIN) N
(>                       JCOMP = JMIN) N
(>                   END IF) N
(>               END IF) N
(>           END IF) N
(>       END IF) N
(>       END IF) N
(> *) N
(> * Check regular force condition for small block memberships.) N
(178c191) N
(<    28     CONTINUE) N
(---) N
(>    28 CONTINUE) N
(181,182c194,197) N
(< *       Decide between merging of neighbour lists or full N prediction.) N
(<       IF \(NXTLEN.LE.10.AND.IR.EQ.0\) THEN) N
(---) N
(> * Choose between predicting all neighbours or full N.) N
(> * Warning do not distribute prediction on PEs for consistency) N
(>           call cputim\(tt1\)) N
(>       IF \(NXTLEN.LT.10.AND.IR.EQ.0\) THEN) N
(184c199) N
(< *       Initialize pointers for neighbour lists.) N
(---) N
(> * Initialize pointers for neighbour lists.) N
(187c202) N
(<    30     CONTINUE) N
(---) N
(>    30 CONTINUE) N
(189c204) N
(< *       Merge all neighbour lists \(with absent members of IBL added\).) N
(---) N
(> * Merge all neighbour lists \(with absent members of NXTLST added\).) N
(192c207) N
(< *       Predict coordinates & velocities of neighbours and #I to order FDOT.) N
(---) N
(> * Predict coordinates & velocities of neighbours and #I to order FDOT.) N
(193a209,210) N
(>           NBFLAG = 1) N
(>           IPRED = 0) N
(205c222) N
(<    35     CONTINUE) N
(---) N
(>    35 CONTINUE) N
(OUT) (Page 103/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(207d223) p n
(<           IPRED = 1) N
(208a225,226) N
(>           NBFLAG = 1) N
(>           IPRED = 1) N
(219c237) N
(<    40     CONTINUE) N
(---) N
(>  40 CONTINUE) N
(222c240,242) N
(< *       Resolve perturbed KS pairs with c.m. prediction after NBSORT.) N
(---) N
(> * Resolve any KS coordinates & velocities using most recent c.m.) N
(>       IF \(NPAIRS.GT.0\) THEN) N
(> * Resolve perturbed KS pairs with c.m. prediction after NBSORT.) N
(227c247) N
(< *       Ignore c.m. prediction after full N loop \(all active KS needed\).) N
(---) N
(> * Ignore c.m. prediction after full N loop \(all active KS needed\).) N
(240,243c260,263) N
(<           ZZ = 1.0) N
(< *       Distinguish between low and high-order prediction of U & UDOT.) N
(<           IF \(GAMMA\(JPAIR\).GT.1.0D-04\) ZZ = 0.0) N
(<           CALL KSRES2\(JPAIR,J1,J2,ZZ\)) N
(---) N
(>           IZZ = -1) N
(> * Predict ALL binaries even unperturbed ones for parallel code \(R.Sp.\)) N
(>           ZZ = 0.0) N
(>           CALL KSRES2\(JPAIR,J1,J2,ZZ,IZZ\)) N
(247c267,293) N
(< *       Save new time \(output time at TIME > TADJ\) and increase # blocks.) N
(---) N
(>       END IF) N
(> * Resolve Chain if it is in block or in neighbour lists \(RS Nov. 03\).) N
(>       IF\(NCH.GT.0\) THEN) N
(>       ICHPR = 0) N
(> * First check whether chain c.m. is in current block \(ICHPR = 2\).) N
(>           DO 46 L = 1,NXTLEN) N
(>               I = NXTLST\(L\)) N
(>               IF\(I.EQ.ICH\) ICHPR = 2) N
(>  46 CONTINUE) N
(> * Second check whether neighbour lists contain chain c.m. \(ICHPR = 1\).) N
(>           IF \(ICHPR.EQ.0\) THEN) N
(>               DO 47 L = 1,NXTLEN) N
(>                   I = NXTLST\(L\)) N
(>                   NNB1 = LIST\(1,I\) + 1) N
(> * Second check whether neighbour lists contain chain c.m. \(ICHPR = 1\).) N
(>                   DO 48 K = 2,NNB1) N
(>                       J = LIST\(K,I\)) N
(>                       IF \(J.GT.ICH\) GO TO 47) N
(>                       IF \(J.EQ.ICH\) ICHPR = 1) N
(>  48 CONTINUE) N
(>  47 CONTINUE) N
(>           END IF) N
(>           IF \(ICHPR.GT.1\) CALL CHLIST\(ICH\)) N
(>           IF \(ICHPR.GT.0\) CALL XCPRED\(0\)) N
(>       END IF) N
(> *) N
(> * Save new time \(output time at TIME> TADJ\) and increase # of blocks.) N
(252,262c298,375) N
(< *       Advance the pointer \(<= NXTLEN\) and select next particle index.) N
(<    50 LI = LI + 1) N
(<       IF \(LI.GT.NXTLEN\) GO TO 1) N
(<       I = NXTLST\(LI\)) N
(<       TIME = T0\(I\) + STEP\(I\)) N
(< *) N
(< *       See whether the regular force needs to be updated \(IR > 0\).) N
(<       IF \(T0R\(I\) + STEPR\(I\).LE.TIME\) THEN) N
(<           IR = 1) N
(OUT) (Page 104/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (52/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (105-106) 53
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       ELSE) p n
(<           IR = 0) N
(---) N
(>                   call cputim\(tt2\)) N
(>           ttnbp = ttnbp + \(tt2-tt1\)*60.) N
(> *) N
(> * Initialize counters for irregular & regular integrations.) N
(>       NREG = 0) N
(> *) N
(> * Advance the irregular step for all particles in the current block.) N
(> * Block-Step Level Diagnostics \(R.Sp. 29.Apr. 1993\)) N
(>           IF\(KZ\(33\).GT.0\)JHIST\(NXTLEN\) = JHIST\(NXTLEN\) + 1) N
(> *) N
(> ) N
(> ) N
(> ) N
(> *) N
(>       DO 701 L = 1,NXTLEN) N
(> *) N
(>           I = NXTLST\(L\)) N
(> *) N
(>       CALL NBINT\(I,NBFLAG\)) N
(> *) N
(>  701 CONTINUE) N
(> *) N
(>           call cputim\(tt3\)) N
(>           ttirr = ttirr + \(tt3-tt2\)*60.) N
(> *) N
(> # 443 "intgrt.F") N
(> *) N
(>        DO 71 L = 1,NXTLEN) N
(>           I = NXTLST\(L\)) N
(> * Save new block step and update T0 & next time) N
(>           T0\(I\) = TIME) N
(>           TIMENW\(I\) = T0\(I\) + STEP\(I\)) N
(> *) N
(> * Set non-zero indicator for new regular force.) N
(>           IF \(T0R\(I\) + STEPR\(I\).LE.TIME\) THEN) N
(>               NREG = NREG + 1) N
(>               IREG\(NREG\) = I) N
(>           ELSE) N
(> * Extrapolate regular force & first derivatives to obtain F & FDOT.) N
(>               DTR = TIME - T0R\(I\)) N
(>               DO 65 K = 1,3) N
(>                   F\(K,I\) = 0.5*\(FRDOT\(K,I\)*DTR + FR\(K,I\) + FI\(K,I\)\)) N
(>                   FDOT\(K,I\) = ONE6*\(FRDOT\(K,I\) + FIDOT\(K,I\)\)) N
(> * Higher order extrapolation?) N
(> * F\(K,I\) = FI\(K,I\) + FR\(K,I\) + DTR*\(FRDOT\(K,I\)) N
(> * * + DTR*\(D2R\(K,I\)/2.D0 + DTR*D3R\(K,I\)/6.D0\)\)) N
(> * FDOT\(K,I\) = FIDOT\(K,I\) + FRDOT\(K,I\)) N
(> * * + DTR*\(D2R\(K,I\) + DTR*D3R\(K,I\)/2.D0\)) N
(> * F\(K,I\) = F\(K,I\)/2.D0) N
(> * FDOT\(K,I\) = FDOT\(K,I\)/6.D0) N
(>    65 CONTINUE) N
(>           END IF) N
(> *) N
(>               DO 67 K = 1,3) N
(>                   X0\(K,I\) = XN\(K,I\)) N
(>                   X0DOT\(K,I\) = XNDOT\(K,I\)) N
(>                   D0\(K,I\) = FI\(K,I\)) N
(>                   D1\(K,I\) = FIDOT\(K,I\)) N
(>    67 CONTINUE) N
(> *) N
(>  71 CONTINUE) N
(> *) N
(> * CALL nemo_savestate\(n,3,time,body,x,xdot\)) N
(> *) N
(> * See whether any KS candidates are in the same block.) N
(>       IF \(IKS.GT.0\) THEN) N
(OUT) (Page 105/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * Accept same time, otherwise reduce STEP\(ICOMP\) and/or delay.) p n
(>           IF \(T0\(JCOMP\).EQ.T0\(ICOMP\)\) THEN) N
(>               I = ICOMP) N
(>               ICOMP = MIN\(ICOMP,JCOMP\)) N
(>               JCOMP = MAX\(I,JCOMP\)) N
(>           ELSE IF \(T0\(JCOMP\) + STEP\(JCOMP\).LT.T0\(ICOMP\)\) THEN) N
(>               STEP\(ICOMP\) = 0.5D0*STEP\(ICOMP\)) N
(>               TIMENW\(ICOMP\) = T0\(ICOMP\) + STEP\(ICOMP\)) N
(>               IKS = 0) N
(>           ELSE) N
(>               IKS = 0) N
(>           END IF) N
(265,267c378,382) N
(< *       Advance the irregular step.) N
(<       IKS0 = IKS) N
(<       CALL NBINT\(I,IKS,IR,XI,XIDOT\)) N
(---) N
(>       NSTEPI = NSTEPI + NXTLEN) N
(> *) N
(> * Obtain total force for all particles due in the current block.) N
(> *) N
(>       IF\(NREG.GT.0\)THEN) N
(269,272c384,408) N
(< *       Save indices of first KS candidates in the block.) N
(<       IF \(IKS0.EQ.0.AND.IKS.GT.0\) THEN) N
(<           ISAVE = ICOMP) N
(<           JSAVE = JCOMP) N
(---) N
(>            call cputim\(tt7\)) N
(>               DO 811 J=IFIRST,NTOT) N
(>               S = TIME - T0\(J\)) N
(>               S1 = 1.5*S) N
(>               S2 = 2.0*S) N
(>               X\(1,J\) = \(\(FDOT\(1,J\)*S + F\(1,J\)\)*S +X0DOT\(1,J\)\)*S +X0\(1,J\)) N
(>               X\(2,J\) = \(\(FDOT\(2,J\)*S + F\(2,J\)\)*S +X0DOT\(2,J\)\)*S +X0\(2,J\)) N
(>               X\(3,J\) = \(\(FDOT\(3,J\)*S + F\(3,J\)\)*S +X0DOT\(3,J\)\)*S +X0\(3,J\)) N
(>               XDOT\(1,J\) = \(FDOT\(1,J\)*S1 + F\(1,J\)\)*S2 + X0DOT\(1,J\)) N
(>               XDOT\(2,J\) = \(FDOT\(2,J\)*S1 + F\(2,J\)\)*S2 + X0DOT\(2,J\)) N
(>               XDOT\(3,J\) = \(FDOT\(3,J\)*S1 + F\(3,J\)\)*S2 + X0DOT\(3,J\)) N
(>  811 CONTINUE) N
(> * Resolve any KS coordinates & velocities using most recent c.m.) N
(>       IF \(NPAIRS.GT.0\) THEN) N
(>           JJ = -1) N
(>           DO 86 JPAIR = 1,NPAIRS) N
(>           JJ = JJ + 2) N
(>           IF \(LIST\(1,JJ\).GT.0\) THEN) N
(>               ZZ = 1.0) N
(>               IZZ = -2) N
(> * Distinguish between low and high-order prediction of U & UDOT.) N
(>               IF \(GAMMA\(JPAIR\).GT.1.0D-04\) ZZ = 0.0) N
(>               CALL KSRES2\(JPAIR,J1,J2,ZZ,IZZ\)) N
(>           END IF) N
(>    86 CONTINUE) N
(275,277c411,464) N
(< *       See whether the regular step is due.) N
(<       IF \(IR.GT.0\) THEN) N
(<           CALL REGINT\(I,XI,XIDOT\)) N
(---) N
(>           call cputim\(tt8\)) N
(>           ttpre = ttpre + \(tt8-tt7\)*60.) N
(> *) N
(> * Block-Step Level Diagnostics \(R.Sp. 29.Apr. 1993\)) N
(>           IF\(KZ\(33\).GT.1\)JHISTR\(NREG\) = JHISTR\(NREG\) + 1) N
(> *) N
(>           call cputim\(tt1\)) N
(> *) N
(> ) N
(> ) N
(> ) N
(OUT) (Page 106/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (53/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (107-108) 54
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *) p n
(>       DO 801 L = 1,NREG) N
(>           I = IREG\(L\)) N
(> *) N
(>           DO 655 K = 1,LMAX) N
(>  655 IMPI\(K,L\) = LIST\(K,I\)) N
(> *) N
(>           NBSUM = 0) N
(> *) N
(>        CALL REGINT\(I,IMPI\(1,L\)\)) N
(> *) N
(>          DO 615 K = 1,3) N
(>               F\(K,I\) = 0.5D0*\(FI\(K,I\) + FR\(K,I\)\)) N
(>               FDOT\(K,I\) = ONE6*\(FIDOT\(K,I\) + FRDOT\(K,I\)\)) N
(>   615 CONTINUE) N
(>   801 CONTINUE) N
(> *) N
(>       call cputim\(tt2\)) N
(>       ttreg = ttreg + \(tt2-tt1\)*60.) N
(> # 768 "intgrt.F") N
(> *) N
(>       NSTEPR = NSTEPR + NREG) N
(>       NBLCKR = NBLCKR + 1) N
(>       LSHRNK = .FALSE.) N
(> *) N
(>       DO 81 L = 1,NREG) N
(>           I = IREG\(L\)) N
(> *) N
(>               DO 816 K = 1,LMAX) N
(>  816 LIST\(K,I\) = IMPI\(K,L\)) N
(> *) N
(> * Check minimum neighbor sphere since last output) N
(>               IF\(LIST\(1,I\).GT.0\)RSMIN = MIN\(RSMIN,RS\(I\)\)) N
(> *) N
(>  81 CONTINUE) N
(> *) N
(> * OPEN\(98,STATUS='OLD',ERR=123\)) N
(> * print*,' last reg block t=',time,' length=',nreg) N
(> * print*,' first 10 =',\(name\(ireg\(l\)\),l=1,min\(nreg,10\)\)) N
(> * call flush\(6\)) N
(> * CLOSE\(98\)) N
(> *123 CONTINUE) N
(> *) N
(280,306c467,473) N
(< *       Determine next block time \(note STEP may shrink in REGINT\).) N
(<       TMIN = MIN\(TIMENW\(I\),TMIN\)) N
(< * ) N
(< *       Copy current coordinates & velocities from corrected values.) N
(<       IF \(LI.EQ.NXTLEN\) THEN) N
(<           DO 60 L = 1,NXTLEN) N
(<               I = NXTLST\(L\)) N
(<               DO 55 K = 1,3) N
(<                   X\(K,I\) = X0\(K,I\)) N
(<                   XDOT\(K,I\) = X0DOT\(K,I\)) N
(<    55         CONTINUE) N
(<    60     CONTINUE) N
(< *) N
(< *       Check integration of tidal tail members.) N
(<           IF \(NTAIL.GT.0\) THEN) N
(< *       Allow large quantized interval with internal iteration.) N
(<               IF \(DMOD\(TIME,0.25D0\).EQ.0.0D0\) THEN) N
(<                   DO 65 J = ITAIL0,NTTOT) N
(<                       IF \(TIMENW\(J\).LE.TIME\) THEN) N
(<                           CALL NTINT\(J\)) N
(<                       END IF) N
(<    65             CONTINUE) N
(<               END IF) N
(<           END IF) N
(<       ELSE) N
(OUT) (Page 107/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Continue until last member has been done \(improves reproducibility\).) p n
(<           GO TO 50) N
(---) N
(> * Copy all corrected coordinates & velocities \(NB! only at the end\).) N
(>       DO 85 L = 1,NXTLEN) N
(>           I = NXTLST\(L\)) N
(> *) N
(>       IF \(I.GT.N\) THEN) N
(>           IPAIR = I - N) N
(>           IF \(LIST\(1,2*IPAIR-1\).GT.0\) NSTEPB = NSTEPB + 1) N
(309,310c476,490) N
(< *       Exit on KS termination, new multiple regularization or merger.) N
(<       IF \(IQ.NE.0\) THEN) N
(---) N
(>           IF\(TIMENW\(I\).LT.TMIN\)THEN) N
(>               TMIN = TIMENW\(I\)) N
(>               IMIN = I) N
(>           END IF) N
(> *) N
(>           DO 82 K = 1,3) N
(>               X0\(K,I\) = XN\(K,I\)) N
(>               X0DOT\(K,I\) = XNDOT\(K,I\)) N
(>               X\(K,I\) = XN\(K,I\)) N
(>               XDOT\(K,I\) = XNDOT\(K,I\)) N
(>    82 CONTINUE) N
(>    85 CONTINUE) N
(> *) N
(> * Exit on KS termination, new multiple regularization or merger.) N
(>       IF \(IQ.GT.0\) THEN) N
(315c495) N
(< *       Ensure correct KS index \(KSPAIR may denote second termination\).) N
(---) N
(> * Ensure correct KS index \(KSPAIR may denote second termination\).) N
(322c502) N
(< *       Perform optional check on high-velocity particles at major times.) N
(---) N
(> * Perform optional check on high-velocity particles at major times.) N
(325c505) N
(<               CALL SHRINK\(TMIN\)) N
(---) N
(>               CALL SHRINK) N
(332c512) N
(< *       Check optional mass loss time at end of block-step.) N
(---) N
(> * Check optional mass loss time.) N
(334c514) N
(< *       Delay until time commensurate with 100-year step \(new polynomials\).) N
(---) N
(> * Delay until time commensurate with 1000-year step \(new polynomials\).) N
(345,348c525,527) N
(< *       Advance counters and check timer & optional COMMON save \(NSUB = 0\).) N
(<       NTIMER = NTIMER + 1) N
(<       IF \(NTIMER.LT.NMAX\) GO TO 50) N
(< ) N
(---) N
(> * Advance counters and check timer & optional COMMON save \(NSUB = 0\).) N
(>       NTIMER = NTIMER + NXTLEN) N
(>       IF \(NTIMER.LT.NMAX\) GO TO 1) N
(357,358c536,537) N
(< *       Check option for general binary search.) N
(<       IF \(KZ\(4\).GT.0.AND.TIME - TLASTS.GT.DELTAS\) THEN  ) N
(---) N
(> * Check option for general binary search.) N
(>       IF \(KZ\(4\).NE.0.AND.TIME - TLASTS.GT.DELTAS\) THEN) N
(362c541,542) N
(< *       Include facility for termination of run \(create dummy file STOP\).) N
(---) N
(> * Include facility for termination of run \(create dummy file STOP\).) N
(>       IF\(rank.EQ.0\)THEN) N
(OUT) (Page 108/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (54/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (109-110) 55
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(366,367c546,547) p n
(<           IF \(NSUB.EQ.0\)  WRITE \(6,70\)) N
(<    70     FORMAT  \(/,9X,'TERMINATION BY MANUAL INTERVENTION'\)) N
(---) N
(>           IF \(NSUM.EQ.0.and.rank.eq.0\) WRITE \(6,90\)) N
(>    90 FORMAT \(/,9X,'TERMINATION BY MANUAL INTERVENTION'\)) N
(369a550) N
(>       END IF) N
(371c552) N
(< *       Repeat cycle until elapsed computing time exceeds the limit.) N
(---) N
(> * Repeat cycle until elapsed computing time exceeds the limit.) N
(373c554,556) N
(<       IF \(TCOMP.LT.CPU\) GO TO 50) N
(---) N
(>           TCOMP = \(TCOMP-TTOTA\)*60.) N
(> *) N
(>       IF \(TCOMP.LT.CPU\) GO TO 1) N
(375c558) N
(< *       Do not terminate during triple, quad or chain regularization.) N
(---) N
(> * Do not terminate during triple, quad or chain regularization.) N
(377,378c560,561) N
(< *       Specify zero step to enforce termination.) N
(<           DO 75 L = 1,NSUB) N
(---) N
(> * Specify zero step to enforce termination.) N
(>           DO 95 L = 1,NSUB) N
(380c563) N
(<    75     CONTINUE) N
(---) N
(>    95 CONTINUE) N
(382c565) N
(<           GO TO 50) N
(---) N
(>           GO TO 1) N
(385,386c568,569) N
(< *       Terminate run with optional COMMON save.) N
(<       IF \(KZ\(1\).GT.0\) THEN) N
(---) N
(> * Terminate run with optional COMMON save.) N
(>       IF \(KZ\(1\).NE.0\) THEN) N
(389,392c572,577) N
(<           WRITE \(6,80\)  TIME+TOFF, TCOMP, CPUTOT/60.0, ERRTOT, DETOT) N
(<    80     FORMAT \(/,9X,'COMMON SAVED AT TIME =',F8.2,'  TCOMP =',F7.1,) N
(<      &                 '  CPUTOT =',F6.1,'  ERRTOT =',F10.6,) N
(<      &                 '  DETOT =',F10.6\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      & WRITE \(6,98\) TOFF, TIME, TIME+TOFF, TCOMP, CPUTOT/60.0,) N
(>      & ERRTOT, DETOT) N
(>    98 FORMAT \() N
(>      & '  TCOMP =',F7.1,'  CPUTOT =',F6.1,) N
(>      & '  ERRTOT =',F10.6,'  DETOT =',F10.6\)) N
(395c580,603) N
(<       STOP) N
(---) N
(> * Determine time interval and step numbers per time unit) N
(>       TIMINT = TIME + TOFF - TINIT) N
(> *) N
(> ) N
(> ) N
(> ) N
(>       WRITE \(6,195\) rank,TIMINT,NSTEPI-NIR,NSTEPB-NIB,NSTEPR-NRGL,) N
(>      & NSTEPU-NKS) N
(>   195 FORMAT \() N
(>      & ' NIRRB=',I11,' NREG=',I11,' NKS=',I11\)) N
(>       WRITE \(6,196\) \(NSTEPI-NIR\)/TIMINT,\(NSTEPB-NIB\)/TIMINT,) N
(>      & \(NSTEPR-NRGL\)/TIMINT,\(NSTEPU-NKS\)/TIMINT) N
(OUT) (Page 109/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>   196 FORMAT \() p n
(>      & D12.5,' NREG=',D12.5,' NKS=',D12.5\)) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(>           STOP) N
(> *) N
(>  100 CONTINUE) N
(397,398c605,633) N
(< *       Set current global time.) N
(<   100 TTOT = TIME + TOFF) N
(---) N
(> * Set current global time.) N
(>           TTOT = TIME + TOFF) N
(> * Full prediction at end of intgrt to preserve consistency after) N
(> * parallel execution) N
(>           DO 400 J = IFIRST,NTOT) N
(>               S = TIME - T0\(J\)) N
(>               S1 = 1.5*S) N
(>               S2 = 2.0*S) N
(>               X\(1,J\) = \(\(FDOT\(1,J\)*S + F\(1,J\)\)*S +X0DOT\(1,J\)\)*S +X0\(1,J\)) N
(>               X\(2,J\) = \(\(FDOT\(2,J\)*S + F\(2,J\)\)*S +X0DOT\(2,J\)\)*S +X0\(2,J\)) N
(>               X\(3,J\) = \(\(FDOT\(3,J\)*S + F\(3,J\)\)*S +X0DOT\(3,J\)\)*S +X0\(3,J\)) N
(>               XDOT\(1,J\) = \(FDOT\(1,J\)*S1 + F\(1,J\)\)*S2 + X0DOT\(1,J\)) N
(>               XDOT\(2,J\) = \(FDOT\(2,J\)*S1 + F\(2,J\)\)*S2 + X0DOT\(2,J\)) N
(>               XDOT\(3,J\) = \(FDOT\(3,J\)*S1 + F\(3,J\)\)*S2 + X0DOT\(3,J\)) N
(>  400 CONTINUE) N
(> * Resolve any KS coordinates & velocities using most recent c.m.) N
(>       IF \(NPAIRS.GT.0\) THEN) N
(>           JJ = -1) N
(>           DO 88 JPAIR = 1,NPAIRS) N
(>           JJ = JJ + 2) N
(>           IF \(LIST\(1,JJ\).GT.0\) THEN) N
(>               ZZ = 1.0) N
(>               IZZ = -3) N
(> * Distinguish between low and high-order prediction of U & UDOT.) N
(>               IF \(GAMMA\(JPAIR\).GT.1.0D-04\) ZZ = 0.0) N
(>               CALL KSRES2\(JPAIR,J1,J2,ZZ,IZZ\)) N
(>           END IF) N
(>    88 CONTINUE) N
(>       END IF) N
(400c635) N
(<       RETURN) N
(---) N
(>        RETURN) N
(1,2c1,2) N
(< 1048 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/intide.f) N
(< nbody6compare/intide.f) N
(---) N
(> 1062 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/intide.f) N
(> nbody6++compare/intide.f) N
(0a1,4) N
(> # 1 "intide.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "intide.F") N
(4,5c8,9) N
(< *       Input & scaling for tidal dissipation.) N
(< *       --------------------------------------) N
(---) N
(> * Input & scaling for tidal dissipation.) N
(> * --------------------------------------) N
(8a13) N
(> # 18 "intide.F") N
(10,11c15,24) N
(OUT) (Page 110/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (55/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (111-112) 56
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Read parameters for tidal capture simulation.) p n
(<       READ \(5,*\)  RSTAR, IMS, IEV, RMS, REV) N
(---) N
(> * Read parameters for tidal capture simulation.) N
(> ) N
(>       if\(rank.eq.0\)READ \(5,*\) RSTAR, IMS, IEV, RMS, REV) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(13c26) N
(< *       Convert radii from S.U. to internal units.) N
(---) N
(> * Convert radii from S.U. to internal units.) N
(16c29) N
(<       WRITE \(6,10\)  RSTAR, IMS, IEV, RMS, REV) N
(---) N
(>       WRITE \(6,10\) RSTAR, IMS, IEV, RMS, REV) N
(18c31) N
(<      &              '  IEV =',I4,'  RMS/R* =',F6.2,'  REV/R* =',F6.1\)) N
(---) N
(>      & '  IEV =',I4,'  RMS/R* =',F6.2,'  REV/R* =',F6.1\)) N
(20c33) N
(< *       Assign individual radii for main-sequence and evolved stars.) N
(---) N
(> * Assign individual radii for main-sequence and evolved stars.) N
(22c35) N
(< *       Adopt a primitive scheme in case of no stellar evolution.) N
(---) N
(> * Adopt a primitive scheme in case of no stellar evolution.) N
(30,32c43,45) N
(< *     WRITE \(6,40\)  BODY\(1\), BODY\(N\), RADIUS\(1\), RADIUS\(N\)) N
(< *  40 FORMAT \(/,12X,'SCALED RADII:    M\(1\) =',F8.4,'  M\(N\) =',F8.4,) N
(< *    &                                '  R\(1\) =',1PE8.1,'  R\(N\) =',E8.1\)) N
(---) N
(> * WRITE \(6,40\) BODY\(1\), BODY\(N\), RADIUS\(1\), RADIUS\(N\)) N
(> * 40 FORMAT \(/,12X,'SCALED RADII:    M\(1\) =',F8.4,'  M\(N\) =',F8.4,) N
(> * & '  R\(1\) =',1PE8.1,'  R\(N\) =',E8.1\)) N
(1,2c1,2) N
(< 8000 2005-10-26 18:43 /work/Umi2/spurzem/5/nbody6compare/invert.f) N
(< nbody6compare/invert.f) N
(---) N
(> 8087 2003-06-25 19:51 /work/Umi2/spurzem/5/nbody6++compare/invert.f) N
(> nbody6++compare/invert.f) N
(32c32) N
(< *       Obtain physical velocities \(first absolute, then relative\).) N
(---) N
(> *       Obtain physical two-body velocities.) N
(48,59c48,54) N
(< *       Determine the smallest two-body distance and chain index.) N
(<       rm = 0.0) N
(<       do i = 1,n-1) N
(<           if \(rinv\(i\).gt.rm\) then) N
(<               rm = rinv\(i\)) N
(<               i1 = i) N
(<           end if) N
(<       end do) N
(<       rm = 1.0/rm) N
(< *) N
(< *       Form semi-major axes for the two closest distances.) N
(<       dm = 0.0) N
(---) N
(> *       Determine the two smallest two-body distances and chain indices.) N
(>       R2M = 1.0) N
(>       D2M = 1.0) N
(>       DM = 1.0) N
(OUT) (Page 111/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       i2 = 0) p n
(>       g2 = 1.0) N
(>       V22 = 1.0) N
(62c57,59) N
(<           if \(i.eq.i1\) then) N
(---) N
(>           r2 = xc\(L+1\)**2 + xc\(L+2\)**2 + xc\(L+3\)**2) N
(> *       Check the smallest distance and save basic parameters.) N
(>           if \(r2.lt.r2m\) then) N
(65c62,63) N
(<               amax = 2.0*rinv\(i\) - w2/mb) N
(---) N
(>               r1 = sqrt\(r2\)) N
(>               amax = 2.0/r1 - w2/mb) N
(66a65,67) N
(>               i1 = i) N
(>               rm = r1) N
(>               r2m = r2) N
(78,79c79,80) N
(< *       Treat the second smallest distance similarly.) N
(<           else if \(rinv\(i\).gt.dm\) then) N
(---) N
(> *       Check the second distance \(ignore two consecutive small distances\).) N
(>           else if \(r2.lt.d2m\) THEN) N
(82c83,84) N
(<               amax = 2.0*rinv\(i\) - w2/mb) N
(---) N
(>               r1b = sqrt\(r2\)) N
(>               amax = 2.0/r1b - w2/mb) N
(85c87,89) N
(<               dm = rinv\(i\)) N
(---) N
(>               dm = r1b) N
(>               d2m = r2) N
(>               V22 = w2) N
(97d100) N
(<       dm = 1.0/dm) N
(99,102c102,103) N
(< *       Obtain reliable semi-major axis for small pericentre or large EB.) N
(<       EB = -0.5*mc\(i1\)*mc\(i1+1\)/a1) N
(<       EB1 = EB/ENERGY) N
(<       IF \(rm.lt.0.2*a1.or.EB1.gt.0.9\) then) N
(---) N
(> *       Obtain reliable semi-major axis near small pericentres.) N
(>       IF \(rm.lt.0.2*a1.AND.NSTEP1.GT.0\) THEN) N
(124,125c125,126) N
(<               WRITE \(6,4\)  NSTEP1, ZK, g1, RM, SEMI, ERR) N
(<     4         FORMAT \(' WARNING!    INVERT    # K g1 RM SEMI DA/A ',) N
(---) N
(>               if\(rank.eq.0\)WRITE \(6,4\)  NSTEP1, ZK, g1, RM, a1, ERR) N
(>     4         FORMAT \(' WARNING!    INVERT    # K g1 RM a1 DA/A ',) N
(128c129,130) N
(< *       Replace direct value by improved determination.) N
(---) N
(> *       Replace direct values by improved determination.) N
(>           RM = 1.0/RINV\(i1\)) N
(133c135) N
(<       IF \(a1.GT.0.0\) THEN) N
(---) N
(>       IF \(a1.GT.0.0.AND.RM.LT.DM\) THEN) N
(135,136c137,142) N
(< *       Adopt upper limit of TKS/2 but allow genuine small DT.) N
(<           DT = MIN\(0.5*TKS,DT\)) N
(---) N
(> *       Adopt upper limit of TKS/5 but allow genuine small DT.) N
(>           IF \(DT.GT.TKS\) THEN) N
(>               DT = 0.2*TKS) N
(>           ELSE) N
(>               DT = MIN\(0.2*TKS,DT\)) N
(OUT) (Page 112/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (56/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (113-114) 57
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           END IF) p n
(138,139c144,149) N
(< *       Use crossing time for hyperbolic velocity \(TPR compensates small R\).) N
(<           DT = MIN\(rm/SQRT\(V21\),DT\)) N
(---) N
(> *       Choose upper limit 1/20 of crossing time with hyperbolic velocity.) N
(>           IF \(a1.LT.0.0\) THEN) N
(>               DT = MIN\(0.05*RSUM/SQRT\(V21\),DT\)) N
(>           ELSE) N
(>               DT = MIN\(0.05*RSUM/SQRT\(V22\),DT\)) N
(>           END IF) N
(142,147d151) N
(< *       Check second closest pair if bound \(small period; a1 < 0 possible\).) N
(<       if \(a2.gt.0.0\) then) N
(<           TKS = 6.28*KSCH\(i2\)*a2*SQRT\(a2/\(mc\(i2\) + mc\(i2+1\)\)\)) N
(<           DT = MIN\(0.5*TKS,DT\)) N
(<       end if) N
(< *) N
(196d199) N
(< *       Define the function Y0 and its derivatives \(cf. Book eqns. 12.9\).) N
(200d202) N
(< *       Adopt safety measure to avoid negative argument \(Seppo Mikkola\).) N
(201a204) N
(> *       Adopt safety measure to avoid negative argument \(Seppo Mikkola\).) N
(210c213) N
(<       IF \(IT.GT.15.AND.IWARN.LT.500\) THEN) N
(---) N
(>       IF \(IT.GT.15.AND.IWARN.LT.50\) THEN) N
(213c216,217) N
(<           WRITE \(6,15\)  IT, KSCH\(i1\), ECC, RM, a1, DT-DT1, DTAU) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,15\)  IT, KSCH\(i1\), ECC, RM, a1, DT-DT1, DTAU) N
(219c223) N
(<       IF \(i2.ne.i1.and.g2.lt.0.01\) THEN) N
(---) N
(>       IF \(i2.GT.0.AND.i2.NE.i1.AND.g2.LT.0.01\) THEN) N
(222c226) N
(<           rm = dm) N
(---) N
(>           RM = DM) N
(232,234c236,239) N
(<               WRITE \(6,16\)  KSCH\(i1\), RM/a1, SUM1*DT0, SUM2, DTAU) N
(<    16         FORMAT \(' INVERT NEGATIVE!    KSCH R/A S1*DT0 S2 DTAU ',) N
(<      &                                      F7.2,1P,4E10.2\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,16\)  KSCH\(i1\), RM/a1, SUM1*DT0, SUM2, DTAU) N
(>    16         FORMAT \(' DANGER!    INVERT    KSCH R/A S1*DT0 S2 DTAU ',) N
(>      &                                       F7.2,1P,4E10.2\)) N
(243a249,250) N
(> ) N
(> ) N
(1,2c1,2) N
(< 1726 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/kcpert.f) N
(< nbody6compare/kcpert.f) N
(---) N
(> 1726 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/kcpert.f) N
(> nbody6++compare/kcpert.f) N
(1,2c1,2) N
(< 2932 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/kepler.f) N
(< nbody6compare/kepler.f) N
(---) N
(> 2934 2003-06-23 19:34 /work/Umi2/spurzem/5/nbody6++compare/kepler.f) N
(> nbody6++compare/kepler.f) N
(95a96,97) N
(> ) N
(> ) N
(1,2c1,2) N
(OUT) (Page 113/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 4700 2006-02-10 11:44 /work/Umi2/spurzem/5/nbody6compare/kick.f) p n
(< nbody6compare/kick.f) N
(---) N
(> 4942 2003-06-25 20:44 /work/Umi2/spurzem/5/nbody6++compare/kick.f) N
(> nbody6++compare/kick.f) N
(12a13,14) N
(> * recover random number sequence from COMMON variable IDUM1.) N
(>       KDUM = IDUM1) N
(42c44,45) N
(<           WRITE \(6,1\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\), ZM1,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,1\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\), ZM1,) N
(54,55c57,58) N
(< *   2 VT = VCUT/V0*RAN2\(IDUM1\)) N
(< *     VP = VT*\(2.0*RAN2\(IDUM1\) - 1.0\)) N
(---) N
(> *   2 VT = VCUT/V0*RAN2\(KDUM\)) N
(> *     VP = VT*\(2.0*RAN2\(KDUM\) - 1.0\)) N
(58c61) N
(< *     IF \(FAC.LT.RAN2\(IDUM1\).AND.IT.LT.10\) GO TO 2) N
(---) N
(> *     IF \(FAC.LT.RAN2\(KDUM\).AND.IT.LT.10\) GO TO 2) N
(65,66c68,69) N
(<           X1 = RAN2\(IDUM1\)) N
(<           X2 = RAN2\(IDUM1\)) N
(---) N
(>           X1 = RAN2\(KDUM\)) N
(>           X2 = RAN2\(KDUM\)) N
(88c91) N
(< *         A\(K\) = 2.0*RAN2\(IDUM1\) - 1.0) N
(---) N
(> *         A\(K\) = 2.0*RAN2\(KDUM\) - 1.0) N
(124c127,128) N
(<           WRITE \(6,20\)  I, NAME\(I\), KSTAR\(I\), KC, BODY0\(I\)*ZMBAR, ZM,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  I, NAME\(I\), KSTAR\(I\), KC, BODY0\(I\)*ZMBAR, ZM,) N
(127c131) N
(<      &                                2I6,2I4,2F7.2,1P,3E9.1\)) N
(---) N
(>      &                                2I6,2I4,2F7.2,3F7.1\)) N
(133,134c137,139) N
(<           WRITE \(6,25\)  I, NAME\(I\), VKICK*VSTAR, SQRT\(VF2\)*VSTAR) N
(<    25     FORMAT \(' LOW KICK:    I NAM VK VF ',2I6,1P,2E9.1\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,25\)  I, NAME\(I\), VKICK*VSTAR, SQRT\(VF2\)*VSTAR) N
(>    25     FORMAT \(' LOW KICK:    I NAM VK VF ',2I6,2F6.2\)) N
(142c147,152) N
(<    30 RETURN) N
(---) N
(>    30 CONTINUE) N
(> *) N
(> *       Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(> *) N
(>       RETURN) N
(144a155,156) N
(> ) N
(> ) N
(1,2c1,2) N
(< 1960 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksapo.f) N
(< nbody6compare/ksapo.f) N
(---) N
(> 2125 2003-06-25 20:49 /work/Umi2/spurzem/5/nbody6++compare/ksapo.f) N
(> nbody6++compare/ksapo.f) N
(9a10,11) N
(> * recover random number sequence from COMMON variable IDUM1.) N
(OUT) (Page 114/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (57/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (115-116) 58
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       KDUM = IDUM1) p n
(59a62,64) N
(> *       Save random number sequence in COMMON for future use.) N
(>       IDUM1 = KDUM) N
(> *) N
(62a68,69) N
(> ) N
(> ) N
(1,2c1,2) N
(< 6846 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/kscorr.f) N
(< nbody6compare/kscorr.f) N
(---) N
(> 6846 2001-08-24 22:40 /work/Umi2/spurzem/5/nbody6++compare/kscorr.f) N
(> nbody6++compare/kscorr.f) N
(1,2c1,2) N
(< 7086 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksin2.f) N
(< nbody6compare/ksin2.f) N
(---) N
(> 7154 2003-08-01 21:49 /work/Umi2/spurzem/5/nbody6++compare/ksin2.f) N
(> nbody6++compare/ksin2.f) N
(157c157,158) N
(<           WRITE \(6,60\)  WHICH1, TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,60\)  WHICH1, TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\),) N
(180c181) N
(<       IF \(KZ\(8\).GT.0.AND.K.EQ.0\) THEN) N
(---) N
(>       IF \(\(KZ\(8\).GT.0 .OR. NBIN0.GT.0\) .AND.K.EQ.0\) THEN) N
(187c188,189) N
(<           WRITE \(8,90\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\), K,) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(8,90\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\), K,) N
(197a200) N
(> ) N
(1,2c1,2) N
(< 8821 2006-02-12 18:04 /work/Umi2/spurzem/5/nbody6compare/ksinit.f) N
(< nbody6compare/ksinit.f) N
(---) N
(> 8910 2003-07-04 19:04 /work/Umi2/spurzem/5/nbody6++compare/ksinit.f) N
(> nbody6++compare/ksinit.f) N
(53a54) N
(> *) N
(177c178,179) N
(<           WRITE \(6,60\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\),DTAU\(IPAIR\),) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,60\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\),DTAU\(IPAIR\),) N
(180c182) N
(<    60     FORMAT \(/,' NEW KSREG    TIME =',F7.2,2I6,F12.3,1PE10.1,) N
(---) N
(>    60     FORMAT \(/,' NEW KSREG    TIME =',1PE10.2,2I6,0PF12.3,1PE10.1,) N
(187c189) N
(<       IF \(NPAIRS.EQ.KMAX\) WRITE \(6,70\)  NPAIRS, TIME+TOFF) N
(---) N
(>       IF \(NPAIRS.EQ.KMAX.and.rank.eq.0\) WRITE \(6,70\)  NPAIRS, TIME+TOFF) N
(223c225) N
(<       IF \(KZ\(8\).GT.0.AND.K.EQ.0\) THEN) N
(---) N
(>       IF \(\(KZ\(8\).GT.0.OR.NBIN0.GT.0\).AND.K.EQ.0\) THEN) N
(230,231c232,234) N
(<           WRITE \(8,90\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\), K,) N
(<      &                  BODY\(ICOMP\),BODY\(JCOMP\), EB, SEMI, R\(IPAIR\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(8,90\)  TIME+TOFF, NAME\(ICOMP\), NAME\(JCOMP\), K,) N
(>      &                  BODY\(ICOMP\), BODY\(JCOMP\), EB, SEMI, R\(IPAIR\),) N
(240a244,245) N
(OUT) (Page 115/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> ) p n
(> ) N
(1,2c1,2) N
(< 17463 2006-09-02 13:14 /work/Umi2/spurzem/5/nbody6compare/ksint.f) N
(< nbody6compare/ksint.f) N
(---) N
(> 15607 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/ksint.f) N
(> nbody6++compare/ksint.f) N
(0a1,4) N
(> # 1 "ksint.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "ksint.F") N
(4,5c8,9) N
(< *       Regularized integration.) N
(< *       ------------------------) N
(---) N
(> * Regularized integration.) N
(> * ------------------------) N
(8,13c12,17) N
(<       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(<       COMMON/SLOW0/  RANGE,ISLOW\(10\)) N
(<       COMMON/GAMDOT/  DGAM) N
(<       REAL*8  UI\(4\),UIDOT\(4\),XI\(6\),VI\(6\),FP\(6\),FD\(6\)) N
(---) N
(>       COMMON/BINARY/ CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(>      & HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(>      & NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(>       COMMON/SLOW0/ RANGE,ISLOW\(10\)) N
(>       COMMON/GAMDOT/ DGAM) N
(>       REAL*8 UI\(4\),UIDOT\(4\),XI\(6\),VI\(6\),FP\(6\),FD\(6\)) N
(17c21) N
(< *       Set second component, pair index & c.m. index.) N
(---) N
(> * Set second component, pair index & c.m. index.) N
(22c26) N
(< *       Define perturber membership & inverse c.m. mass.) N
(---) N
(> * Define perturber membership & inverse c.m. mass.) N
(26c30) N
(< *       Check for further unperturbed motion or dissipation at pericentre.) N
(---) N
(> * Check for further unperturbed motion or dissipation at pericentre.) N
(32c36) N
(< *       Perform KS prediction of U, UDOT & H.) N
(---) N
(> * Perform KS prediction of U, UDOT & H.) N
(35c39) N
(< *       Obtain the perturbing force & derivative.) N
(---) N
(> * Obtain the perturbing force & derivative.) N
(38c42) N
(< *       Save old radial velocity & relative perturbation and set new GAMMA.) N
(---) N
(> * Save old radial velocity & relative perturbation and set new GAMMA.) N
(44c48) N
(< *       Apply the Hermite corrector.) N
(---) N
(> * Apply the Hermite corrector.) N
(47c51) N
(< *       Increase regularization time-step counter and update the time.) N
(---) N
(> * Increase regularization time-step counter and update the time.) N
(51c55) N
(< *       Check for early return during termination \(called from KSTERM\).) N
(---) N
(> * Check for early return during termination \(called from KSTERM\).) N
(OUT) (Page 116/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (58/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (117-118) 59
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(54c58) p n
(< *       Define useful scalars.) N
(---) N
(> * Define useful scalars.) N
(58c62) N
(< *       Initialize termination indicator and check for large perturbation.) N
(---) N
(> * Initialize termination indicator and check for large perturbation.) N
(67,71c71,72) N
(< *       Delay chain regularization check until near end of block-step.) N
(<           IF \(TIME + STEP\(I1\).GT.TBLOCK\) THEN) N
(<               CALL IMPACT\(I\)) N
(<               IF \(IPHASE.GT.0\) GO TO 100) N
(<           END IF) N
(---) N
(>           CALL IMPACT\(I\)) N
(>           IF \(IPHASE.GT.0\) GO TO 100) N
(79c80) N
(< *       Find the dominant body for large perturbations.) N
(---) N
(> * Find the dominant body for large perturbations.) N
(82c83) N
(< *       Initialize JCOMP for optional diagnostics in KSTERM.) N
(---) N
(> * Initialize JCOMP for optional diagnostics in KSTERM.) N
(86c87) N
(< *       Only search bodies within twice the c.m. time-step.) N
(---) N
(> * Only search bodies within twice the c.m. time-step.) N
(88c89) N
(< *       Compare strong perturber and either component with current pair.) N
(---) N
(> * Compare strong perturber and either component with current pair.) N
(91c92) N
(<      &                                      \(X\(3,J\) - X\(3,K\)\)**2) N
(---) N
(>      & \(X\(3,J\) - X\(3,K\)\)**2) N
(93c94) N
(<     5     CONTINUE) N
(---) N
(>     5 CONTINUE) N
(96c97) N
(< *       Set termination if strong perturber <= N forms dominant pair.) N
(---) N
(> * Set termination if strong perturber <= N forms dominant pair.) N
(98c99) N
(< *       Check optional binary search.) N
(---) N
(> * Check optional binary search.) N
(104c105) N
(<           IF \(JCOMP.NE.0.OR.GI.GT.2.0\) IQ = .TRUE.) N
(---) N
(>           IF \(JCOMP.LE.N.OR.GI.GT.2.0\) IQ = .TRUE.) N
(107,108c108,109) N
(< *       Check termination of hyperbolic encounter \(R > R0 or R > RMIN\).) N
(<    20 IF \(HI.GT.0.0D0.AND.NAME\(I\).GT.0\) THEN) N
(---) N
(> * Check termination of hyperbolic encounter \(R > R0 or R > RMIN\).) N
(>    20 IF \(HI.GT.0.0D0\) THEN) N
(110,112c111,113) N
(<      &        \(GI.GT.0.5.AND.TD2.GT.0.0\)\) THEN) N
(< *       Skip termination delay in case of velocity kick \(cf. routine KSTERM\).) N
(<               IF \(HI.LT.100.0.OR.GI.GT.0.1.OR.RI.GT.5.0*RMIN\) THEN) N
(---) N
(>      & \(GI.GT.0.5.AND.TD2.GT.0.0\)\) THEN) N
(> * Skip termination delay in case of velocity kick \(cf. routine KSTERM\).) N
(>               IF \(HI.LT.100.0.OR.GI.GT.0.5\) THEN) N
(118c119) N
(< *       Choose basic regularized step using binding energy or lower limit.) N
(OUT) (Page 117/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Choose basic regularized step using binding energy or lower limit.) N
(125d125) N
(< *       Modify maximum square step for soft binaries & weak hyperbolic pairs.) N
(126a127) N
(> * Modify maximum square step for soft binaries & weak hyperbolic pairs.) N
(128c129) N
(< *       Consider case of hard binary with massive components or merger.) N
(---) N
(> * Consider case of hard binary with massive components or merger.) N
(131c132) N
(<               IF \(NAME\(I\).LT.0\) W1 = W2 ) N
(---) N
(>               IF \(NAME\(I\).LT.0\) W1 = W2) N
(135c136) N
(< *       Include perturbation factor in predicted step.) N
(---) N
(> * Include perturbation factor in predicted step.) N
(137c138) N
(< *       Use second-order expansion of cube root for small perturbations.) N
(---) N
(> * Use second-order expansion of cube root for small perturbations.) N
(145c146) N
(< *       Form new regularized step.) N
(---) N
(> * Form new regularized step.) N
(149c150) N
(< *       Reset reference energy and generate new Stumpff coefficients.) N
(---) N
(> * Reset reference energy and generate new Stumpff coefficients.) N
(157c158) N
(< *       Convert to physical time units modified by Stumpff coefficients.) N
(---) N
(> * Convert to physical time units modified by Stumpff coefficients.) N
(159c160) N
(<      &                     + TDOT3\(IPAIR\)\)*ONE6*DTU + TD2\)*DTU + RI\)*DTU) N
(---) N
(>      & + TDOT3\(IPAIR\)\)*ONE6*DTU + TD2\)*DTU + RI\)*DTU) N
(161,162c162,163) N
(< *       Ensure that regularized step is smaller than the c.m. step.) N
(<       IF \(STEP\(I1\).GT.STEP\(I\).AND.HI.LT.0.0\) THEN) N
(---) N
(> * Ensure that regularized step is smaller than the c.m. step.) N
(>       IF \(STEP\(I1\).GT.STEP\(I\)\) THEN) N
(168c169) N
(< *       See whether the KS slow-down procedure is activated. ) N
(---) N
(> * See whether the KS slow-down procedure is activated.) N
(175c176) N
(< *       Check diagnostic print option.) N
(---) N
(> * Check diagnostic print option.) N
(177,179c178,181) N
(<           WRITE \(6,40\)  IPAIR, TIME+TOFF, H\(IPAIR\), RI, DTAU\(IPAIR\),) N
(<      &                  GI, STEP\(I1\), LIST\(1,I1\), IMOD) N
(<    40     FORMAT \(3X,'KS MOTION',I6,2F10.4,2F10.5,1P,2E10.2,2I4\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      & WRITE \(6,40\) IPAIR, TIME+TOFF, H\(IPAIR\), RI, DTAU\(IPAIR\),) N
(>      & GI, STEP\(I1\), LIST\(1,I1\), IMOD) N
(>    40 FORMAT \(3X,'KS MOTION',I6,2F10.4,2F10.5,1P,2E10.2,2I4\)) N
(182c184) N
(< *       Employ special termination criterion in merger case.) N
(---) N
(> * Employ special termination criterion in merger case.) N
(184c186) N
(< *       Terminate if apocentre perturbation > 0.25 \(R' > 0\) or GI > 0.25.) N
(---) N
(> * Terminate if apocentre perturbation > 0.25 \(R > 0\) or GI > 0.25.) N
(OUT) (Page 118/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (59/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (119-120) 60
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(188,189c190) p n
(<               ECC1 = SQRT\(ECC2\)) N
(<               A0 = SEMI*\(1.0 + ECC1\)/RI) N
(---) N
(>               A0 = SEMI*\(1.0 + SQRT\(ECC2\)\)/RI) N
(194,200d194) N
(< *       Perform pericentre test for significant perturbation \(RDOT > 0 only\).) N
(<               IF \(GI.GT.0.01.AND.TD2.GT.0.0\) THEN) N
(<                   RP = SEMI*\(1.0 - ECC1\)) N
(<                   EB = BODY\(I1\)*BODY\(I2\)*HI*BODYIN) N
(< *       Check binding energy is consist with 0.25*EBH/\(1+r/R_h\) in IMPACT.) N
(<                   IF \(EB.GT.0.2*EBH\) IQ = .TRUE.) N
(<               END IF) N
(202c196) N
(<               IF \(TD2.GT.0.0.AND.\(GI.GT.GMAX.OR.RI.GT.RMIN\)\) IQ = .TRUE.) N
(---) N
(>               IF \(GI.GT.GMAX\) IQ = .TRUE.) N
(207c201) N
(< *       Delay termination until end of block for large perturbation.) N
(---) N
(> * Delay termination until end of block for large perturbation.) N
(210,212c204,207) N
(< *         WRITE \(6,45\)  IPAIR, TIME+TOFF, GI, RI, DTR, STEP\(I1\)) N
(< *  45     FORMAT \(' TERM TEST    KS T G R DTR DT  ',) N
(< *    &                           I4,F10.4,F7.3,1P,E10.2,2E9.1\)) N
(---) N
(> * if\(rank.eq.0\)) N
(> * & WRITE \(6,45\) IPAIR, TIME+TOFF, GI, RI, DTR, STEP\(I1\)) N
(> * 45 FORMAT \(' TERM TEST    KS T G R DTR DT  ',) N
(> * & I4,F10.4,F7.3,1P,E10.2,2E9.1\)) N
(216c211) N
(< *       Check standard termination criterion \(suppress on IQ = .true.\).) N
(---) N
(> * Check standard termination criterion \(suppress on IQ = .true.\).) N
(219c214) N
(< *       See whether termination can be delayed for intermediate energies.) N
(---) N
(> * See whether termination can be delayed for intermediate energies.) N
(230c225) N
(< *       Check updating of R0 for newly hardened binary orbit.) N
(---) N
(> * Check updating of R0 for newly hardened binary orbit.) N
(246c241) N
(<    55         CONTINUE) N
(---) N
(>    55 CONTINUE) N
(252c247) N
(< *       End integration cycle for hyperbolic motion.) N
(---) N
(> * End integration cycle for hyperbolic motion.) N
(255c250) N
(< *       Obtain pericentre by Mikkola's algorithm \(GAMMA < 0.001\).) N
(---) N
(> * Obtain pericentre by Mikkolas algorithm \(GAMMA < 0.001\).) N
(263,275c258,298) N
(< *       Check optional tidal interaction or stellar collision.) N
(<               IF \(KZ\(19\).GE.3\) THEN) N
(<                   IF \(KZ\(27\).LE.2\) THEN) N
(<                       RX = 4.0*MAX\(RADIUS\(I1\),RADIUS\(I2\)\)) N
(<                       RCOLL = 0.75*\(RADIUS\(I1\) + RADIUS\(I2\)\)) N
(<                   ELSE) N
(<                       DV = SQRT\(2.0*HI\)) N
(<                       RX = RPMAX\(BODY\(I1\),BODY\(I2\),VSTAR,DV,QPERI\)) N
(<                       RCOLL = RZ) N
(<                   END IF) N
(<                   IF \(QPERI.LT.RX\) THEN) N
(<                       IF \(QPERI.LT.RCOLL\) THEN) N
(< *       Obtain KS variables at pericentre before coalescence to one body.) N
(---) N
(OUT) (Page 119/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>               IF \(rank.eq.0.and.BK\(4\).EQ.1\) THEN) p n
(> C Added Aug.1998 b P.Kroupa:) N
(> * If BK\(4\)=1 then write out relevant data) N
(> * into unit=15 \(file=per.15\) [see file_init.F]) N
(> * for statistics of closest approaches & disk destruction during) N
(> * hyperbolic encounters. \(27.08.96, P.Kroupa in nb5\)) N
(> * write out: time in Myr, periastron distance in AU) N
(> * names and masses \(Msun\) of involved stars) N
(> * distance of centre of mass \(!\) from cluster centre in pc:) N
(> *) N
(>                  peri_pk=log10\(QPERI*RBAR*206264.84\)) N
(>                  cldist_pk=SQRT\(\(x\(1,I\)-rdens\(1\)\)**2 +) N
(>      + \(x\(2,I\)-rdens\(2\)\)**2+) N
(>      + \(x\(3,I\)-rdens\(3\)\)**2\)*RBAR) N
(> ) N
(> ) N
(> ) N
(>                  write\(15,'\(2F8.3,2I5,2F8.3,F9.4,F13.4\)'\)) N
(>      + time*tscale,peri_pk,name\(I1\),name\(I2\),) N
(>      + body\(I1\)*ZMBAR,body\(I2\)*ZMBAR,cldist_pk) N
(>                  call flush\(15\)) N
(> ) N
(> ) N
(> ) N
(> C Also write the stuff into log-file:) N
(> * write\(6,*\)) N
(> * write\(6,*\)' Hyperbolic encounter: \(see ksint.f\)') N
(> * write\(6,*\)' time[Myr] log10\(Rperi[AU]\) star1 star2 ',) N
(> * + 'mass1 mass2[Msun] Rcl[pc]') N
(> * write\(6,'\(2F8.3,2I5,2F8.3,F9.4\)'\)) N
(> * + time*tscale,peri_pk,name\(I1\),name\(I2\),) N
(> * + body\(I1\)*ZMBAR,body\(I2\)*ZMBAR,cldist_pk) N
(> * write\(6,*\)) N
(> * call flush\(6\)) N
(>               end if) N
(> *) N
(> * Check optional tidal interaction or stellar collision.) N
(>               IF \(KZ\(27\).GT.0\) THEN) N
(>                   IF \(QPERI.LT.4.0*MAX\(RADIUS\(I1\),RADIUS\(I2\)\)\) THEN) N
(>                       IF \(QPERI.LT.0.75*\(RADIUS\(I1\) + RADIUS\(I2\)\)\) THEN) N
(> * Obtain KS variables at pericentre before merging into one body.) N
(279c302) N
(<                       ELSE IF \(KZ\(27\).GT.0\) THEN) N
(---) N
(>                       ELSE) N
(288c311) N
(< *       Check perturbation threshold \(H < 0 & GAMMA > GMAX\).) N
(---) N
(> * Check perturbation threshold \(H < 0 & GAMMA > GMAX\).) N
(300c323) N
(< *       Estimate smallest permitted output interval at new level.) N
(---) N
(> * Estimate smallest permitted output interval at new level.) N
(309,316c332,339) N
(< *       Check for partial reflection during approach \(NB! only IMOD = 1\).) N
(< *  70 IF \(GI.LT.GMIN.AND.TD2.LT.0.0D0\) THEN) N
(< *       Skip apocentre position itself.) N
(< *         IF \(RDOT.LT.0.0D0.AND.IMOD.EQ.1\) THEN) N
(< *             IF \(KZ\(25\).GT.0\) CALL FREEZE\(IPAIR\)) N
(< *             GO TO 100) N
(< *         END IF) N
(< *     END IF) N
(---) N
(> * Check for partial reflection during approach \(NB! only IMOD = 1\).) N
(> * 70 IF \(GI.LT.GMIN.AND.TD2.LT.0.0D0\) THEN) N
(> * Skip apocentre position itself.) N
(> * IF \(RDOT.LT.0.0D0.AND.IMOD.EQ.1\) THEN) N
(> * IF \(KZ\(25\).GT.0\) CALL FREEZE\(IPAIR\)) N
(> * GO TO 100) N
(OUT) (Page 120/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (60/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (121-122) 61
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * END IF) p n
(> * END IF) N
(318c341) N
(< *       Determine new perturbers for binary at apocentre turning point.) N
(---) N
(> * Determine new perturbers for binary at apocentre turning point.) N
(322c345) N
(< *       Check minimum two-body separation just after pericentre.) N
(---) N
(> * Check minimum two-body separation just after pericentre.) N
(324c347) N
(< *       Obtain pericentre by Mikkola's algorithm \(GAMMA < 0.001\).) N
(---) N
(> * Obtain pericentre by Mikkolas algorithm \(GAMMA < 0.001\).) N
(332,347c355,363) N
(< *       Check optional tidal interaction or stellar collision \(skip merger\).) N
(<           IF \(KZ\(19\).GE.3.AND.NAME\(I\).GT.0\) THEN) N
(<               IF \(KZ\(27\).LE.2\) THEN) N
(<                   ECC = 1.0 - QPERI/SEMI) N
(<                   ZF = 4.0) N
(<                   IF \(ECC.GT.0.95.AND.KZ\(27\).EQ.1\) ZF = 50.0) N
(<                   RX = ZF*MAX\(RADIUS\(I1\),RADIUS\(I2\)\)) N
(<                   RCOLL = 0.75*\(RADIUS\(I1\) + RADIUS\(I2\)\)) N
(<               ELSE) N
(<                   RX = RPMIN\(BODY\(I1\),BODY\(I2\),VSTAR,HI,QPERI\)) N
(<                   RCOLL = RZ) N
(< *       Replace by RCOLL = 6.0*BODY\(I\)/CLIGHT**2 for unequal masses.) N
(<               END IF) N
(<               IF \(QPERI.LT.RX\) THEN) N
(<                   IF \(QPERI.LT.RCOLL\) THEN) N
(< *       Obtain KS variables at pericentre before coalescence to one body.) N
(---) N
(> * Check optional tidal interaction or stellar collision \(skip merger\).) N
(>           IF \(KZ\(27\).GT.0\) THEN) N
(>               ECC = 1.0 - QPERI/SEMI) N
(>               ZF = 4.0) N
(>               IF \(ECC.GT.0.95\) ZF = 50.0) N
(>               IF \(QPERI.LT.ZF*MAX\(RADIUS\(I1\),RADIUS\(I2\)\).AND.) N
(>      & NAME\(I\).GT.0\) THEN) N
(>                   IF \(QPERI.LT.0.75*\(RADIUS\(I1\) + RADIUS\(I2\)\)\) THEN) N
(> * Obtain KS variables at pericentre before merging into one body.) N
(351,354c367,368) N
(< *       Do not evolve synchronous orbit further but allow decay by GR.) N
(<                   ELSE IF \(KZ\(27\).EQ.1.AND.KSTAR\(I\).LT.19\) THEN) N
(<                       CALL KSTIDE\(IPAIR,QPERI\)) N
(<                   ELSE IF \(KZ\(27\).EQ.3\) THEN) N
(---) N
(> * Do not evolve synchronous orbit further.) N
(>                   ELSE IF \(KSTAR\(I\).NE.20\) THEN) N
(362c376) N
(< *       Save maximum separation of persistent binary.) N
(---) N
(> * Save maximum separation of persistent binary.) N
(365c379) N
(< *       Check binary reference radius or merger termination.) N
(---) N
(> * Check binary reference radius or merger termination.) N
(367c381) N
(< *       Update termination length scale of hard binary if enough perturbers.) N
(---) N
(> * Update termination length scale of hard binary if enough perturbers.) N
(374,375c388,391) N
(<       ELSE ) N
(< *       Check pericentre stability criterion of merged binary \(NAME < 0\).) N
(---) N
(>       ELSE) N
(> * Check pericentre stability criterion of merged binary \(NAME < 0\).) N
(>           ECC2 = \(1.0 - RI/SEMI\)**2 + TDOT2\(IPAIR\)**2/\(BODY\(I\)*SEMI\)) N
(>           ECC1 = SQRT\(ECC2\)) N
(OUT) (Page 121/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(378d393) p n
(< *       Use the standard criterion for a provisional test.) N
(381c396) N
(<               DO 71 K = 1,NMERGE) N
(---) N
(>               DO 72 K = 1,NMERGE) N
(383c398) N
(<    71         CONTINUE) N
(---) N
(>    72 CONTINUE) N
(386,412c401,404) N
(<               E0 = 0.0) N
(<               EMAX = 0.0) N
(< *       Include inclination effect inside 1.5*RP for consistency.) N
(<               IF \(PCRIT.LT.1.5*RP.AND.NAME\(I2\).LE.NZERO\) THEN) N
(<                   RIM = 0.0) N
(<                   TD2 = 0.0) N
(< *       Form inner eccentricity from KS variables.) N
(<                   DO 72 K = 1,4) N
(<                       RIM = RIM + UM\(K,IM\)**2) N
(<                       TD2 = TD2 + 2.0*UM\(K,IM\)*UMDOT\(K,IM\)) N
(<    72             CONTINUE) N
(<                   E02 = \(1.0 - RIM/AIN\)**2 + TD2**2/\(BODY\(I1\)*AIN\)) N
(<                   E0 = SQRT\(E02\)) N
(<                   CALL HIMAX\(I1,IM,E0,AIN,EMAX,EMIN,ANGLE,TG,EDAV\)) N
(< *       Note: updating XREL & VREL in HMDOT should not affect inclination.) N
(<                   YFAC = 1.0 - 0.6*ANGLE/TWOPI) N
(<                   PCRIT = YFAC*PCRIT) N
(< *       Save the revised stability boundary for later use.) N
(<                   R0\(IPAIR\) = PCRIT) N
(<               END IF) N
(<               IF \(RP*\(1.0 - GI\).LT.R0\(IPAIR\)\) THEN) N
(<                   WRITE \(6,75\)  NAME\(I1\), GI, E0, EMAX, ECC1, RP,) N
(<      &                          R0\(IPAIR\), PCRIT, AIN) N
(<    75             FORMAT \(' BASIC INSTAB    NM GI E0 EX E1 RP R0 PCR ',) N
(<      &                             'AIN ',I6,2F7.3,F8.4,F7.3,1P,4E10.2\)) N
(<                   GO TO 90) N
(<               END IF) N
(---) N
(>               WRITE \(6,73\) GI, ECC1, RP, R0\(IPAIR\), PCRIT, AIN) N
(>    73 FORMAT \(' BASIC INSTAB    GI E1 RP R0 PCR AIN ',) N
(>      & 2F7.3,1P,4E10.2\)) N
(>               GO TO 90) N
(414c406) N
(< *       Include safety check for outer eccentricity change \(GI > 0.001\).) N
(---) N
(> * Include safety check for outer eccentricity change \(GI > 0.001\).) N
(418c410) N
(<               DO 76 K = 1,NMERGE) N
(---) N
(>               DO 75 K = 1,NMERGE) N
(420c412) N
(<    76         CONTINUE) N
(---) N
(>    75 CONTINUE) N
(423c415) N
(< *       Adopt 60 % criterion to allow for marginally stable systems.) N
(---) N
(> * Adopt 60 % criterion to allow for marginally stable systems.) N
(425,427c417,419) N
(<               WRITE \(6,78\) GI, ECC1, RP, R0\(IPAIR\), PCRIT, AIN) N
(<    78         FORMAT \(' PERT INSTAB!    GI E1 RP R0 PCR AIN ',) N
(<      &                                  2F7.3,1P,4E10.2\)) N
(---) N
(>               WRITE \(6,500\) GI, ECC1, RP, R0\(IPAIR\), PCRIT, AIN) N
(>   500 FORMAT \(' PERT INSTAB!    GI E1 RP R0 PCR AIN ',) N
(>      & 2F7.3,1P,4E10.2\)) N
(431c423) N
(< *       Terminate merger if maximum perturber range > 2*RS & GI > GMAX.) N
(OUT) (Page 122/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (61/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (123-124) 62
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Terminate merger if maximum perturber range > 2*RS & GI > GMAX.) N
(435c427) N
(< *       See whether KS slow-down procedure should be \(re\)-checked.) N
(---) N
(> * See whether KS slow-down procedure should be \(re\)-checked.) N
(437c429) N
(< *       Include case of tidal dissipation.) N
(---) N
(> * Include case of tidal dissipation.) N
(442c434) N
(< *       Skip modification if predicted pericentre < 5 tidal capture radii.) N
(---) N
(> * Skip modification if predicted pericentre < 5 tidal capture radii.) N
(452c444) N
(< *       Set approximate value of next period with perturbation included.) N
(---) N
(> * Set approximate value of next period with perturbation included.) N
(458c450) N
(< *       Use old perturber list if next apocentre is before the c.m. step.) N
(---) N
(> * Use old perturber list if next apocentre is before the c.m. step.) N
(467c459) N
(< *       Select new perturbers \(adopt unperturbed period if none found\).) N
(---) N
(> * Select new perturbers \(adopt unperturbed period if none found\).) N
(470c462) N
(< *       Perform rectification.) N
(---) N
(> * Perform rectification.) N
(473c465) N
(< *       Check optional search criterion for multiple encounter or merger.) N
(---) N
(> * Check optional search criterion for multiple encounter or merger.) N
(479c471) N
(< *       Terminate regularization of current pair \(IPAIR set in KSPAIR\).) N
(---) N
(> * Terminate regularization of current pair \(IPAIR set in KSPAIR\).) N
(481c473) N
(< *       Set indicator for calling KSTERM in MAIN \(permits phase overlay\).) N
(---) N
(> * Set indicator for calling KSTERM in MAIN \(permits phase overlay\).) N
(483c475) N
(< *       Check for rare case of merged binary component.) N
(---) N
(> * Check for rare case of merged binary component.) N
(1,2c1,2) N
(< 3831 2006-02-16 11:21 /work/Umi2/spurzem/5/nbody6compare/kslist.f) N
(< nbody6compare/kslist.f) N
(---) N
(> 3827 2002-06-12 23:24 /work/Umi2/spurzem/5/nbody6++compare/kslist.f) N
(> nbody6++compare/kslist.f) N
(45c45) N
(< *       Select new perturbers from the neighbour list.) N
(---) N
(> *       Select new perturbers from all particles.) N
(70c70) N
(<           ELSE IF \(KZ\(27\).LE.1\) THEN) N
(---) N
(>           ELSE IF \(KZ\(27\).EQ.0\) THEN) N
(110a111) N
(> ) N
(1,2c1,2) N
(< 3606 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksmod.f) N
(< nbody6compare/ksmod.f) N
(---) N
(> 3926 2001-08-04 17:07 /work/Umi2/spurzem/5/nbody6++compare/ksmod.f) N
(> nbody6++compare/ksmod.f) N
(60,61c60,61) N
(OUT) (Page 123/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Determine the eccentric anomaly with respect to pericentre \(-PI,PI\).) p n
(<       THETA = ATAN2\(PSI/SQRT\(SEMI\),ZETA\)) N
(---) N
(> *       Determine the eccentric anomaly with respect to pericentre \(0,PI\).) N
(>       THETA = ATAN2\(ABS\(PSI\)/SQRT\(SEMI\),ZETA\)) N
(64,65c64,65) N
(<       DT = SEMI*SQRT\(SEMI/BODY\(ICM\)\)*\(THETA - PSI/SQRT\(SEMI\)\)) N
(<       DT = 0.5D0*TK + DT) N
(---) N
(>       DT = SEMI*SQRT\(SEMI/BODY\(ICM\)\)*\(THETA - ABS\(PSI\)/SQRT\(SEMI\)\)) N
(>       DT = 0.5D0*TK - DT) N
(68,69c68,76) N
(< *       Evaluate regularized apocentre time \(Baumgarte & Stiefel, 1974\).) N
(< *     DTU = -2.0D0*\(H\(IPAIR\)*DT + TDOT2\(IPAIR\)\)/BODY\(ICM\)) N
(---) N
(> *       Evaluate regularized apocentre time \(Stiefel & Scheifele, p. 85\).) N
(> *     DTU = -2.0D0*\(H\(IPAIR\)*DT + 0.5D0*TDOT2\(IPAIR\)\)/BODY\(ICM\)) N
(> *) N
(> *       See whether the time interval should be modified by KSLOW procedure.) N
(>       IF \(IMOD.GT.1\) THEN) N
(>           ZMOD = FLOAT\(ISLOW\(IMOD\)\)) N
(>       ELSE) N
(>           ZMOD = 1.0) N
(>       END IF) N
(73c80) N
(<       DTU = DT/R\(IPAIR\)) N
(---) N
(>       DTU = DT/\(R\(IPAIR\)*ZMOD\)) N
(75,76c82) N
(< *       Note: explicit relation agrees with iterated value \(bug fix 9/99\).) N
(<    40 Y0 = DT - \(\(ONE6*TDOT3\(IPAIR\)*DTU +) N
(---) N
(>    40 Y0 = DT - ZMOD*\(\(ONE6*TDOT3\(IPAIR\)*DTU +) N
(78a85) N
(>       YPR = ZMOD*YPR) N
(81a89) N
(>       DT1 = ZMOD*DT1) N
(96,97c104,110) N
(< *       Predict current coordinates & velocities of ICM.) N
(<       CALL XVPRED\(ICM,0\)) N
(---) N
(> *       Predict current coordinates & velocities for perturbers, ICM & IPAIR.) N
(>       NNB2 = LIST\(1,I1\) + 2) N
(>       LIST\(NNB2,I1\) = ICM) N
(>       DO 60 L = 2,NNB2) N
(>           J = LIST\(L,I1\)) N
(>           CALL XVPRED\(J,0\)) N
(>    60 CONTINUE) N
(1,2c1,2) N
(< 5876 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksperi.f) N
(< nbody6compare/ksperi.f) N
(---) N
(> 2705 2002-07-31 07:19 /work/Umi2/spurzem/5/nbody6++compare/ksperi.f) N
(> nbody6++compare/ksperi.f) N
(8d7) N
(<       COMMON/SLOW0/  RANGE,ISLOW\(10\)) N
(11,14c10) N
(< *       Save current time and initialize integration indicator.) N
(<       TIME0 = TIME) N
(<       ITIME = 0) N
(<       I1 = 2*IPAIR - 1) N
(---) N
(> *       Set c.m. index & semi-major axis.) N
(16,22c12) N
(< *) N
(< *       Re-calculate TDOT2 which may have misleading value.) N
(<     1 TD2 = 0.0D0) N
(<       DO 5 K = 1,4) N
(<           TD2 = TD2 + U0\(K,IPAIR\)*UDOT\(K,IPAIR\)) N
(OUT) (Page 124/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (62/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (125-126) 63
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<     5 CONTINUE) p n
(<       TD2 = 2.0*TD2) N
(---) N
(>       SEMI = -0.5D0*BODY\(ICM\)/H\(IPAIR\)) N
(25d14) N
(<       SEMI = -0.5D0*BODY\(ICM\)/H\(IPAIR\)) N
(27c16) N
(<       PSI = TD2/SQRT\(BODY\(ICM\)\)) N
(---) N
(>       PSI = TDOT2\(IPAIR\)/SQRT\(BODY\(ICM\)\)) N
(31c20) N
(<       IF \(ECC.LT.0.0001\) GO TO 30) N
(---) N
(>       IF \(ECC.LT.0.0001\) GO TO 20) N
(40c29) N
(<           DO 8 IT = 1,10) N
(---) N
(>           DO 1 IT = 1,10) N
(43c32) N
(<     8     CONTINUE) N
(---) N
(>     1     CONTINUE) N
(49a39) N
(> *) N
(52a43) N
(> *       Hyperbolic case.) N
(62,136c53,55) N
(< *       Re-define current time \(NB! not quantized; T0\(I1\) may be << TIME\).) N
(<       TIME = TIME - DT) N
(< *) N
(< *       Integrate backwards for perturbed motion \(reflection gives errors\).) N
(<       IF \(LIST\(1,I1\).GT.0.AND.ITIME.EQ.0.AND.DT.GT.STEP\(I1\)\) THEN) N
(<           TIME = TIME0) N
(<           IMOD = KSLOW\(IPAIR\)) N
(<           ZMOD = FLOAT\(ISLOW\(IMOD\)\)) N
(<           IPH = IPHASE) N
(<           IPHASE = -1) N
(< *) N
(< *       Integrate step by step if interval is too large \(note IPHASE < 0\).) N
(<    10     IF \(DT.GT.STEP\(I1\)\) THEN) N
(<               TIME = TIME - STEP\(I1\)) N
(<               DT = DT - STEP\(I1\)) N
(<               H0\(IPAIR\) = H\(IPAIR\)) N
(<               Z = -0.5D0*H\(IPAIR\)*DTAU\(IPAIR\)**2) N
(<               CALL STUMPF\(IPAIR,Z\)) N
(<               DTAU\(IPAIR\) = -ABS\(DTAU\(IPAIR\)\)) N
(<               CALL KSINT\(I1\)) N
(<               DTU = DTAU\(IPAIR\)) N
(< *       Use negative DTU and treat STEP as positive \(not used elsewhere\).) N
(<               STEP\(I1\) = \(\(ONE6*TDOT3\(IPAIR\)*DTU + 0.5*TDOT2\(IPAIR\)\)*DTU) N
(<      &                                                   + R\(IPAIR\)\)*DTU) N
(<               STEP\(I1\) = -ZMOD*STEP\(I1\)) N
(<               ITIME = ITIME + 1) N
(<               IF \(ITIME.LT.200\) GO TO 10) N
(<           END IF) N
(< *) N
(<           ITIME = ITIME + 1) N
(<           DTU = DT/\(R\(IPAIR\)*ZMOD\)) N
(<           DTU0 = DTAU\(IPAIR\)) N
(<           ITER = 0) N
(< *       Determine the regularized step by Newton-Raphson iteration \(DT > 0\).) N
(<    20     Y0 = DT - ZMOD*\(\(ONE6*TDOT3\(IPAIR\)*DTU +) N
(<      &                             0.5*TDOT2\(IPAIR\)\)*DTU + R\(IPAIR\)\)*DTU) N
(<           YPR = -\(\(0.5*TDOT3\(IPAIR\)*DTU + TDOT2\(IPAIR\)\)*DTU + R\(IPAIR\)\)) N
(<           YPR = ZMOD*YPR) N
(<           DTU = DTU - Y0/YPR) N
(<           DT1 = \(\(ONE6*TDOT3\(IPAIR\)*DTU + 0.5*TDOT2\(IPAIR\)\)*DTU +) N
(<      &                                                     R\(IPAIR\)\)*DTU) N
(<           DT1 = ZMOD*DT1) N
(OUT) (Page 125/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           ITER = ITER + 1) p n
(<           IF \(ABS\(DT - DT1\).GT.1.0D-10*STEP\(I1\).AND.ITER.LT.5\) GO TO 20) N
(< *) N
(< *       Integrate back to pericentre using temporary indicator < 0 for exit.) N
(<           TIME = TIME - DT) N
(<           DTAU\(IPAIR\) = -DTU) N
(< *       Re-initialize Stumpff functions.) N
(<           H0\(IPAIR\) = H\(IPAIR\)) N
(<           Z = -0.5D0*H\(IPAIR\)*DTAU\(IPAIR\)**2) N
(<           CALL STUMPF\(IPAIR,Z\)) N
(<           CALL KSINT\(I1\)) N
(< *       Update energy and set positive step in case no KS initialization.) N
(<           H0\(IPAIR\) = H\(IPAIR\)) N
(<           DTAU\(IPAIR\) = ABS\(DTU0\)) N
(<           STEP\(I1\) = ZMOD*DT) N
(<           IPHASE = IPH) N
(< *       Use reflection procedure to improve provisional pericentre.) N
(<           GO TO 1) N
(< *       Note: typically 2 iterations and final TDOT2 > 0.) N
(<       END IF) N
(< *) N
(< *       Specify transformation coefficients \(Seppo Mikkola's procedure\).) N
(<       IF \(ZETA.GE.0.0\) THEN) N
(<           XC = SQRT\(0.5D0 + 0.5D0*ZETA/ECC\)) N
(<           YS = PSI/\(ECC*XC*SQRT\(BODY\(ICM\)\)\)) N
(<       ELSE) N
(< *       Employ well behaved expressions for R > A \(SM 29/5/97\).) N
(<           XC = 0.5*ABS\(PSI\)/\(SQRT\(SEMI\)*ECC\)/SQRT\(0.5D0-0.5D0*ZETA/ECC\)) N
(< *       Avoid division by small XC near apocentre \(ZETA < 0 only\).) N
(<           YS = 2.0*SQRT\(SEMI/BODY\(ICM\)*\(0.5D0 - 0.5D0*ZETA/ECC\)\)) N
(<           IF \(PSI.LT.0.0\) YS = -YS) N
(<       END IF) N
(< *) N
(---) N
(> *       Specify transformation coefficients \(Mikkola's procedure\).) N
(>       XC = SQRT\(0.5D0 + 0.5D0*ZETA/ECC\)) N
(>       YS = PSI/\(ECC*XC*SQRT\(BODY\(ICM\)\)\)) N
(142,143c61) N
(<       T0\(I1\) = TIME) N
(<       DO 25 K = 1,4) N
(---) N
(>       DO 10 K = 1,4) N
(149c67) N
(<    25 CONTINUE) N
(---) N
(>    10 CONTINUE) N
(156,159c74,76) N
(< *       Predict c.m. coordinates & velocities.) N
(<       IF \(ABS\(DT\).LT.STEP\(ICM\).AND.TIME.GT.0.0\) THEN) N
(<           CALL XVPRED\(ICM,0\)) N
(<       END IF) N
(---) N
(> *       Set pericentre time and predict c.m. coordinates & velocities.) N
(>       TIME = TIME - DT) N
(>       CALL XVPRED\(ICM,0\)) N
(161c78) N
(<    30 RETURN) N
(---) N
(>    20 RETURN) N
(1,2c1,2) N
(< 5931 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/kspert.f) N
(< nbody6compare/kspert.f) N
(---) N
(> 5330 2001-08-24 13:46 /work/Umi2/spurzem/5/nbody6++compare/kspert.f) N
(> nbody6++compare/kspert.f) N
(88c88,89) N
(<           CALL KSRES2\(J,J1,J2,RIJ2\)) N
(---) N
(>           IZZ = KVEC\(I1\)) N
(OUT) (Page 126/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (63/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (127-128) 64
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           CALL KSRES2\(J,J1,J2,RIJ2,IZZ\)) p n
(154,155c155,156) N
(< *       See whether the linearized perturbation should be included.) N
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LT.3\) THEN) N
(---) N
(> *       See whether the external perturbation should be included.) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(170,187d170) N
(< *       Check optional Plummer potential.) N
(<       IF \(KZ\(14\).EQ.4.OR.KZ\(14\).EQ.3\) THEN) N
(<           RI2 = AP2) N
(<           RRDOT = 0.0) N
(< *       Form one central distance and scalar product of relative motion.) N
(<           DO 65 K = 1,3) N
(<               RI2 = RI2 + XI\(K\)**2) N
(<               RRDOT = RRDOT + \(XI\(K\) - XI\(K+3\)\)*\(VI\(K\) - VI\(K+3\)\)) N
(<    65     CONTINUE) N
(<           FMP = MP/\(RI2*SQRT\(RI2\)\)) N
(<           DO 70 K = 1,3) N
(<               XREL = XI\(K\) - XI\(K+3\)) N
(<               VREL = VI\(K\) - VI\(K+3\)) N
(<               FP\(K\) = FP\(K\) - XREL*FMP) N
(<               FD\(K\) = FD\(K\) - \(VREL - 3.0*RRDOT*XREL/RI2\)*FMP) N
(<    70     CONTINUE) N
(<       END IF) N
(< *) N
(1,2c1,2) N
(< 648 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/ksphys.f) N
(< nbody6compare/ksphys.f) N
(---) N
(> 648 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/ksphys.f) N
(> nbody6++compare/ksphys.f) N
(1,2c1,2) N
(< 9375 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/kspoly.f) N
(< nbody6compare/kspoly.f) N
(---) N
(> 9287 2003-06-22 19:44 /work/Umi2/spurzem/5/nbody6++compare/kspoly.f) N
(> nbody6++compare/kspoly.f) N
(18d17) N
(<       SEMI = -0.5*BODY\(I\)/H\(IPAIR\)) N
(80c79) N
(<       IF \(KZ\(14\).GT.0.AND.KZ\(14\).LT.3\) THEN) N
(---) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(200c199) N
(<       IF \(IMOD.GT.1.OR.H\(IPAIR\).GT.0.0\) FAC = 1.0) N
(---) N
(>       IF \(IMOD.GT.1\) FAC = 1.0) N
(235c234) N
(<       IF \(STEP\(I1\).GT.STEP\(I\).AND.H\(IPAIR\).LT.0.0\) THEN) N
(---) N
(>       IF \(STEP\(I1\).GT.STEP\(I\)\) THEN) N
(260a260,261) N
(> ) N
(> ) N
(1,2c1,2) N
(< 2841 2006-02-14 19:35 /work/Umi2/spurzem/5/nbody6compare/kspred.f) N
(< nbody6compare/kspred.f) N
(---) N
(> 2858 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/kspred.f) N
(> nbody6++compare/kspred.f) N
(8c8) N
(<       PARAMETER  \(ONE24=1.0/24.0D0,ONE120=1.0/120.0D0\)) N
(---) N
(>       PARAMETER  \(ONE18=1.0/18.0D0,ONE24=1.0/24.0D0,ONE120=1.0/120.0D0\)) N
(1,2c1,2) N
(< 3465 2006-09-04 11:19 /work/Umi2/spurzem/5/nbody6compare/ksrect.f) N
(< nbody6compare/ksrect.f) N
(---) N
(OUT) (Page 127/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> 3564 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/ksrect.f) p n
(> nbody6++compare/ksrect.f) N
(12c12) N
(<       DO 1 K = 1,4) N
(---) N
(>       DO 5 K = 1,4) N
(14,21c14) N
(<     1 CONTINUE) N
(< *) N
(< *       Skip rectification for small eccentricity.) N
(<       I = N + IPAIR) N
(<       SEMI = -0.5*BODY\(I\)/H\(IPAIR\)) N
(<       ECC2 = \(1.0 - R\(IPAIR\)/SEMI\)**2 + TDOT2\(IPAIR\)**2/\(SEMI*BODY\(I\)\)) N
(<       ECC = SQRT\(ECC2\)) N
(<       IF \(ECC.LE.0.00001\) GO TO 50) N
(---) N
(>     5 CONTINUE) N
(23a17) N
(>       EB = BODY\(2*IPAIR-1\)*BODY\(2*IPAIR\)*HI/BODY\(N+IPAIR\)) N
(26a21,28) N
(>       IF \(ABS\(ERR\).GT.0.01\) THEN) N
(>       I1 = 2*IPAIR - 1) N
(>       SEMI = -0.5*BODY\(N+IPAIR\)/H\(IPAIR\)) N
(>       AF = -0.5*BODY\(N+IPAIR\)/HI) N
(>       WRITE \(6,4\)  NAME\(I1\), LIST\(1,I1\), SEMI, AF, DB, ERR) N
(>     4 FORMAT \(' WARNING!   KSRECT    NM NP A0 AF DB DH/H  ',) N
(>      &                               I5,I4,1P,4E10.2\)) N
(>       END IF) N
(28,35c30,37) N
(<           SEMI = -0.5*BODY\(N+IPAIR\)/H\(IPAIR\)) N
(<           RA = R\(IPAIR\)/SEMI) N
(<           IF \(SEMI.LT.0.0\) RA = R\(IPAIR\)) N
(<           WRITE \(16,3\)  TIME+TOFF, IPAIR, RA, H\(IPAIR\), GAMMA\(IPAIR\),) N
(<      &                  DB, ERR) N
(<     3     FORMAT \(' KSRECT:   T # R/A H G DB DH/H ',) N
(<      &                        F8.2,I4,F8.4,F8.1,F7.3,1P,2E10.1\)) N
(<           CALL FLUSH\(16\)) N
(---) N
(>       SEMI = -0.5*BODY\(N+IPAIR\)/H\(IPAIR\)) N
(>       RA = R\(IPAIR\)/SEMI) N
(>       IF \(SEMI.LT.0.0\) RA = R\(IPAIR\)) N
(>       WRITE \(16,3\)  TIME, IPAIR, RA, H\(IPAIR\),) N
(>      &              GAMMA\(IPAIR\), DB, ERR) N
(>     3 FORMAT \(' KSRECT:   T # R/A H G DB DH/H ',) N
(>      &                    F8.2,I4,F8.4,F7.1,F7.3,1P,2E10.1\)) N
(>       CALL FLUSH\(16\)) N
(37d38) N
(< *) N
(103c104) N
(<    50 RETURN) N
(---) N
(>       RETURN) N
(1,2c1,2) N
(< 4351 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksreg.f) N
(< nbody6compare/ksreg.f) N
(---) N
(> 4327 2001-09-08 19:14 /work/Umi2/spurzem/5/nbody6++compare/ksreg.f) N
(> nbody6++compare/ksreg.f) N
(136c136) N
(< *       Copy neighbour list for second component & c.m. \(NNB1 = LIST\(1,I\)+1\).) N
(---) N
(> *       Copy neighbour list for second component & c.m.) N
(141d140) N
(< *) N
(1,2c1,2) N
(< 3105 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksres2.f) N
(< nbody6compare/ksres2.f) N
(---) N
(> 3121 2001-09-30 19:44 /work/Umi2/spurzem/5/nbody6++compare/ksres2.f) N
(OUT) (Page 128/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (64/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (129-130) 65
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> nbody6++compare/ksres2.f) p n
(1c1) N
(<       SUBROUTINE KSRES2\(J,J1,J2,RIJ2\)) N
(---) N
(>       SUBROUTINE KSRES2\(J,J1,J2,RIJ2,IZZ\)) N
(45c45) N
(<           DTU1 = DTU/24.0D0) N
(---) N
(>           DTU1 = 0.0416666666666667*DTU) N
(1,2c1,2) N
(< 2134 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksres.f) N
(< nbody6compare/ksres.f) N
(---) N
(> 2148 2003-06-23 19:32 /work/Umi2/spurzem/5/nbody6++compare/ksres.f) N
(> nbody6++compare/ksres.f) N
(42c42) N
(<           DTU1 = DTU/24.0D0) N
(---) N
(>           DTU1 = 0.0416666666666667*DTU) N
(68a69,70) N
(> ) N
(> ) N
(1,2c1,2) N
(< 12655 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ksterm.f) N
(< nbody6compare/ksterm.f) N
(---) N
(> 12802 2003-06-25 21:13 /work/Umi2/spurzem/5/nbody6++compare/ksterm.f) N
(> nbody6++compare/ksterm.f) N
(68c68) N
(<           IF \(ABS\(DT0 - DT1\).GT.1.0E-10*STEP\(I1\).AND.ITER.LT.10\) GO TO 2) N
(---) N
(>           IF \(ABS\(DT0 - DT1\).GT.1.0E-06*STEP\(I1\).AND.ITER.LT.10\) GO TO 2) N
(118c118) N
(<       IF \(KZ\(8\).EQ.0\) GO TO 10) N
(---) N
(>       IF \(KZ\(8\).EQ.0.OR.NBIN0.GT.0\) GO TO 10) N
(132c132,133) N
(<           WRITE \(8,8\)  TIME+TOFF, NAME\(I1\), NAME\(I2\), K, NAME\(JCOMP\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(8,8\)  TIME+TOFF, NAME\(I1\), NAME\(I2\), K, NAME\(JCOMP\),) N
(143c144,145) N
(<           WRITE \(6,15\)  TIME+TOFF, BODY\(I1\), BODY\(I1+1\), DTAU\(IPAIR\),) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,15\)  TIME+TOFF, BODY\(I1\), BODY\(I1+1\), DTAU\(IPAIR\),) N
(146c148) N
(<    15     FORMAT \(/,' END KSREG    TIME =',F7.2,2F8.4,F8.3,1PE10.1,) N
(---) N
(>    15     FORMAT \(/,' END KSREG    TIME =',1PE10.2,0P2F8.4,F8.3,1PE10.1,) N
(155,157c157,161) N
(< *       Add correction term with opposite sign for conservation.) N
(< *     ECOLL = ECOLL + \(POT2 - POT1\)) N
(< *     IF \(ABS\(POT1-POT2\).GT.0.0001\) WRITE \(6,16\)  POT1,BE\(3\),POT1-POT2) N
(---) N
(> *       Add correction to previous and current terms for conservation.) N
(>       BE\(3\) = BE\(3\) + \(POT1 - POT2\)) N
(>       ECOLL = ECOLL + \(POT1 - POT2\)) N
(> *     IF \(ABS\(POT1-POT2\).GT.0.0001.and.rank.eq.0\) ) N
(> *    &                WRITE \(6,16\)  POT1,BE\(3\),POT1-POT2) N
(1,2c1,2) N
(< 8978 2006-09-02 17:40 /work/Umi2/spurzem/5/nbody6compare/kstide.f) N
(< nbody6compare/kstide.f) N
(---) N
(> 8746 2003-06-25 20:59 /work/Umi2/spurzem/5/nbody6++compare/kstide.f) N
(> nbody6++compare/kstide.f) N
(13c13) N
(< *       Skip procedure if both stars have zero size.) N
(---) N
(OUT) (Page 129/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *       Skip procedure if |QP - 4*R| < 0.01*QP or both stars zero size.) p n
(18a19,21) N
(>       ZF = 4.0) N
(>       IF \(ECC.GT.0.95\) ZF = 50.0) N
(>       IF \(ABS\(QPERI - ZF*RX\).LT.0.01*QPERI\) GO TO 50) N
(20,33c23,27) N
(<       IF \(KZ\(27\).EQ.1\) THEN) N
(<           ZF = 4.0) N
(<           IF \(ECC.GT.0.95\) ZF = 50.0) N
(<           IF \(ABS\(QPERI - ZF*RX\).LT.0.01*QPERI\) GO TO 50) N
(< *       Distinguish between Press-Teukolsky and GR energy loss.) N
(<       ELSE IF \(KZ\(27\).EQ.2\) THEN) N
(< *       Skip PT procedure for bound orbits.) N
(<           IF \(H\(IPAIR\).LT.0.0\) GO TO 50) N
(<           IS\(1\) = KSTAR\(I1\)) N
(<           IS\(2\) = KSTAR\(I2\)) N
(< *       Obtain kinetic energy loss due to tidal interaction \(DE > 0\).) N
(<          CALL TIDES\(QPERI,BODY\(I1\),BODY\(I2\),RADIUS\(I1\),RADIUS\(I2\),IS,DE\)) N
(<       ELSE IF \(KZ\(27\).EQ.3\) THEN) N
(<           CALL TIDES2\(QPERI,BODY\(I1\),BODY\(I2\),VSTAR,H\(IPAIR\),ECC,DE\)) N
(---) N
(> *) N
(>       IF \(QPERI.LT.RADIUS\(I1\) + RADIUS\(I2\)\) THEN) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,1\)  NAME\(I1\), QPERI, RX) N
(>     1     FORMAT \(' COLLISION TEST!    NAM QP R*  ',I5,1P,2E10.2\)) N
(34a29,33) N
(>       IS\(1\) = KSTAR\(I1\)) N
(>       IS\(2\) = KSTAR\(I2\)) N
(> *) N
(> *       Obtain kinetic energy loss due to tidal interaction \(DE > 0 here\).) N
(>       CALL TIDES\(QPERI,BODY\(I1\),BODY\(I2\),RADIUS\(I1\),RADIUS\(I2\),IS,DE\)) N
(54,70c53,56) N
(<       IF \(KZ\(27\).EQ.1\) THEN) N
(< *       Accept circularized orbit if ACIRC < 4*RX \(use maximum radius\).) N
(<           AM0 = SEMI*\(1.0 - ECC**2\)) N
(<           ECC1 = SQRT\(ECCM2\)) N
(<           ACIRC = AM0/\(1.0 - ECCM2\)) N
(<           IF \(ACIRC.LT.ZF*RX\) THEN) N
(<               SEMI1 = ACIRC) N
(<           ELSE) N
(< *       Obtain E1 from A1*\(1 - E1**2\) = AM0 using A1*\(1 - E1\) = 4*RX.) N
(<               ECC1 = AM0/\(ZF*RX\) - 1.0) N
(<               ECC1 = MAX\(ECC1,ECCM\)) N
(<               ECC1 = MAX\(ECC1,0.9*ECC\)) N
(< *       Set new semi-major axis from angular momentum conservation.) N
(<               SEMI1 = AM0/\(1.0 - ECC1**2\)) N
(<           END IF) N
(< *       Form the corresponding energy change.) N
(<           DH = 0.5*BODY\(I\)*\(1.0/SEMI - 1.0/SEMI1\)) N
(---) N
(> *       Include safety check on energy loss to prevent new SEMI < R.) N
(>       DH = -\(DE\(1\) + DE\(2\)\)/ZMU) N
(>       IF \(H\(IPAIR\) + DH.LT.-0.5*BODY\(I\)/R\(IPAIR\)\) THEN) N
(>           DH = -0.5*BODY\(I\)/R\(IPAIR\) - H\(IPAIR\)) N
(73,81d58) N
(<       ELSE) N
(< *       Include safety check on energy loss to prevent new SEMI < R.) N
(<           DH = -\(DE\(1\) + DE\(2\)\)/ZMU) N
(<           IF \(H\(IPAIR\) + DH.LT.-0.5*BODY\(I\)/R\(IPAIR\)\) THEN) N
(<               DH = -0.5*BODY\(I\)/R\(IPAIR\) - H\(IPAIR\)) N
(<               DE\(1\) = -ZMU*DH) N
(<               DE\(2\) = 0.0) N
(<           END IF) N
(<           SEMI1 = -0.5*BODY\(I\)/\(H\(IPAIR\) + DH\)) N
(84,85c61,71) N
(< *       Skip hyperbolic final orbit without corrections.) N
(<       IF \(H\(IPAIR\) + DH.GT.0.0\) GO TO 50) N
(---) N
(OUT) (Page 130/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (65/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (131-132) 66
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *       Obtain the new eccentricity from angular momentum conservation.) p n
(>       AM0 = SEMI*\(1.0D0 - ECC**2\)) N
(> *       Suppress the old instantaneous PT procedure.) N
(> *     ECC2 = ECC**2 + 2.0D0*AM0*DH/BODY\(I\)) N
(> *     ECC2 = MAX\(ECC2,ECCM2\)) N
(> *) N
(> *       Adopt sequential circularization instead of standard PT.) N
(>       ECC2 = ECCM2) N
(>       ACIRC = AM0/\(1.0 - ECC2\)) N
(>       SEMI1 = AM0/\(1.0 - ECC2\)) N
(>       ECC1 = SQRT\(ECC2\)) N
(88,91c74,77) N
(< *     Q1 = BODY\(I1\)/BODY\(I2\)) N
(< *     RL1 = 0.49*SEMI1/\(0.6 + LOG\(1.0 + Q1**0.333\)/Q1**0.667\)) N
(< *     Q2 = 1.0/Q1) N
(< *     RL2 = 0.49*SEMI1/\(0.6 + LOG\(1.0 + Q2**0.333\)/Q2**0.667\)) N
(---) N
(>       Q1 = BODY\(I1\)/BODY\(I2\)) N
(>       RL1 = 0.49*SEMI1/\(0.6 + LOG\(1.0 + Q1**0.333\)/Q1**0.667\)) N
(>       Q2 = 1.0/Q1) N
(>       RL2 = 0.49*SEMI1/\(0.6 + LOG\(1.0 + Q2**0.333\)/Q2**0.667\)) N
(94,99c80,107) N
(< *     IF \(RADIUS\(I1\)/RL1.GE.RADIUS\(I2\)/RL2\) THEN) N
(< *         RL = RADIUS\(I1\)) N
(< *     ELSE) N
(< *         RL = RADIUS\(I2\)) N
(< *         RL1 = RL2) N
(< *     END IF) N
(---) N
(>       IF \(RADIUS\(I1\)/RL1.GE.RADIUS\(I2\)/RL2\) THEN) N
(>           RL = RADIUS\(I1\)) N
(>       ELSE) N
(>           RL = RADIUS\(I2\)) N
(>           RL1 = RL2) N
(>       END IF) N
(> *) N
(> *       Accept circularized orbit if ACIRC < 4*R1 \(use maximum radius\).) N
(>       R1 = RX) N
(>       IF \(ACIRC.LT.ZF*R1\) THEN) N
(>           SEMI1 = ACIRC) N
(>       ELSE) N
(> *       Obtain E1 from A1*\(1 - E1**2\) = AM0 using A1*\(1 - E1\) = 4*R1.) N
(>           ECC1 = AM0/\(ZF*R1\) - 1.0) N
(>           ECC1 = MAX\(ECC1,ECCM\)) N
(>           ECC1 = MAX\(ECC1,0.9*ECC\)) N
(> *       Set new semi-major axis from angular momentum conservation.) N
(>           SEMI1 = AM0/\(1.0 - ECC1**2\)) N
(>       END IF) N
(> *) N
(> *       Form the corresponding energy change.) N
(>       DH = 0.5*BODY\(I\)*\(1.0/SEMI - 1.0/SEMI1\)) N
(> *     DH = \(ECC2 - ECC**2\)*BODY\(I\)/\(2.0D0*AM0\)) N
(>       DE\(1\) = -ZMU*DH) N
(>       DE\(2\) = 0.0) N
(> *) N
(> *       Skip possible hyperbolic case.) N
(>       IF \(H\(IPAIR\) + DH.GT.0.0\) GO TO 50) N
(106c114) N
(< *       Set new energy, eccentricity and pericentre.) N
(---) N
(> *       Set new energy and pericentre.) N
(109,112d116) N
(<       IF \(KZ\(27\).GT.1\) THEN) N
(<           ECC1 = 1.0 - PERI/SEMI1) N
(<           ECC1 = MAX\(ECC1,ECCM\)) N
(<       END IF) N
(115,116c119,120) N
(< *       Print first energy change and activate capture indicator.) N
(<       IF \(KSTAR\(I\).EQ.0.AND.HI.GT.0.0\) THEN) N
(OUT) (Page 131/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> *       Print first energy change and activate indicator.) N
(>       IF \(KSTAR\(I\).EQ.0\) THEN) N
(118,123c122,126) N
(<           APO = SEMI1*\(1.0 + ECC1\)) N
(<           WRITE \(6,5\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(<      &                 TIME+TOFF, ECC, ECC1, P, SEMI1, RX, APO) N
(<     5     FORMAT \(' CAPTURE     NAM K* T E0 EF P AF R* APO ',) N
(<      &                          2I6,2I4,F9.2,2F8.3,1P,4E10.2\)) N
(<           TEV\(I\) = TIME + STEP\(I\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,5\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(>      &                 TIME+TOFF, ECC, ECC1, P, SEMI1, RX) N
(>     5     FORMAT \(' NEW CIRC    NAM K* T E0 EF P AF R* ',) N
(>      &                          2I6,2I4,F9.2,2F8.3,F7.1,1P,2E10.2\)) N
(127,136c130,137) N
(< *       Specify KS coordinate & velocity scaling factors at new pericentre.) N
(<       IF \(KZ\(27\).EQ.1\) THEN) N
(<           C1 = SQRT\(PERI1/PERI\)) N
(< *       Obtain KS velocity scaling from angular momentum conservation.) N
(<           C2 = 1.0/C1) N
(<       ELSE) N
(< *       Note pericentre should not change \(hence C1 = 1\).) N
(<           C1 = SQRT\(PERI1/PERI\)) N
(<           C2 = SQRT\(\(BODY\(I\) + H\(IPAIR\)*PERI\)/\(BODY\(I\) + HI*PERI\)\)) N
(<       END IF) N
(---) N
(> *       Form KS coordinate scaling factor from pericentre ratio.) N
(>       C1 = SQRT\(PERI1/PERI\)) N
(> *       Specify KS velocity scaling from angular momentum conservation.) N
(>       C2 = 1.0/C1) N
(> *) N
(> *       See whether circular orbit condition applies.) N
(> *     AM = SEMI1*\(1.0D0 - ECC1**2\)) N
(> *     IF \(ECC1.LE.ECCM\) C2 = SQRT\(AM/AM0\)/C1) N
(146d146) N
(<       TDOT2\(IPAIR\) = 0.0) N
(149c149) N
(< *     CALL KSRECT\(IPAIR\)) N
(---) N
(>       CALL KSRECT\(IPAIR\)) N
(155,160d154) N
(< *       Ensure that single perturber differs from #I itself.) N
(<           IF \(NP0.EQ.0.AND.LIST\(1,I1\).EQ.1\) THEN) N
(<               IF \(LIST\(2,I1\).EQ.I\) THEN) N
(<                   LIST\(2,I1\) = IFIRST) N
(<               END IF) N
(<           END IF) N
(165c159) N
(<       IF \(NP0.GT.0.OR.ECC1.LE.ECCM\) THEN) N
(---) N
(>       IF \(NP0.GT.0\) THEN) N
(172c166) N
(<       IF \(ECC.GT.0.9.AND.HI.LT.0.0\) THEN) N
(---) N
(>       IF \(ECC.GT.0.99.AND.HI.LT.0.0\) THEN) N
(193c187,188) N
(<                   WRITE \(6,28\)  IPAIR, H\(IPAIR\), SEMI, A1, RP,) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,28\)  IPAIR, H\(IPAIR\), SEMI, A1, RP,) N
(200a196) N
(> *       Specify one unperturbed period for small apocentre perturbation.) N
(216c212,213) N
(<           WRITE \(6,35\)  TIME+TOFF, NAME\(I1\), NAME\(I2\), ECC, ECC1, QPS) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,35\)  TIME+TOFF, NAME\(I1\), NAME\(I2\), ECC, ECC1, QPS) N
(OUT) (Page 132/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (66/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (133-134) 67
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(218c215) p n
(<      &                             F9.2,2I6,F9.4,F6.2,1P,E10.2\)) N
(---) N
(>      &                             F9.2,2I6,F9.4,2F6.2\)) N
(226,227c223,225) N
(< *       Set look-up time.) N
(<           TEV\(I\) = TIME + STEP\(I\)) N
(---) N
(> *       Set look-up time and use KZ\(34\) to prevent large value in MDOT.) N
(>           TEV\(I\) = TIME) N
(>           KZ\(34\) = 1) N
(230,231c228,230) N
(<           WRITE \(6,40\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(<      &                  TIME+TOFF, ECC, ECC1, P, SEMI2, RX) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,40\)  NAME\(I1\), NAME\(I2\), KSTAR\(I1\), KSTAR\(I2\),) N
(>      &                  TIME+TOFF, ECC, ECC1, P, SEMI1, RX) N
(239c238,239) N
(<               WRITE \(6,45\)  ECC1, SEMI1, R\(IPAIR\), RCOLL) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,45\)  ECC1, SEMI1, R\(IPAIR\), RCOLL) N
(246,247c246,248) N
(<       IF \(KZ\(27\).EQ.1.AND.ECC2.GT.MAX\(ECC,ECCM\)+1.0D-04\) THEN) N
(<           WRITE \(6,48\)  TIME+TOFF, IPAIR, ECC2, ECC, R\(IPAIR\), SEMI1) N
(---) N
(>       IF \(ECC2.GT.MAX\(ECC,ECCM\)\) THEN) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(12,48\)  TIME+TOFF, IPAIR, ECC2, ECC, R\(IPAIR\), SEMI1) N
(249a251) N
(>           CALL FLUSH\(12\)) N
(254a257) N
(> ) N
(file /work/Umi2/spurzem/5/nbody6++compare/lagr2.f does not exist) N
(1,2c1,2) N
(< 3861 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/lagr.f) N
(< nbody6compare/lagr.f) N
(---) N
(> 6730 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/lagr.f) N
(> nbody6++compare/lagr.f) N
(0a1,4) N
(> # 1 "lagr.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "lagr.F") N
(4,5c8,9) N
(< *       Lagrangian radii.) N
(< *       -----------------) N
(---) N
(> * Lagrangian radii.) N
(> * -----------------) N
(8,15c12,23) N
(<       REAL*8 R2,MRT,RT) N
(<       COMMON/WORK1/ R2\(NMAX\)) N
(<       PARAMETER \(LX=11\)) N
(<       REAL*8 C\(3\),FLAGR\(LX\),RLAGR\(LX\),RM\(LX\),DENS\(LX\),VR\(LX\)) N
(< *     DATA FLAGR/-1.9,-1.7,-1.5,-1.3,-1.1,-.9,-.7,-.5,-.3,-.1/) N
(< *     DATA FLAGR/0.001,0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,) N
(< *    &           0.75,0.9/) N
(<       DATA FLAGR/0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,0.625,0.75,0.9/) N
(---) N
(>       INTEGER NPARTC\(11\), NCORE) N
(>       REAL*8 R2\(NMAX\),RSNGL\(NMAX\),RBIN\(NMAX\)) N
(>       REAL*8 C\(3\), FLAGR\(11\), RLAGR\(11\), AVMASS\(11\), AVMRC,VROTC) N
(>       REAL*8 RSLAGR\(11\),RBLAGR\(11\),SIGR2\(11\),SIGT2\(11\),VROT\(11\)) N
(>       INTEGER ISLIST\(NMAX\),IBLIST\(NMAX\)) N
(>       LOGICAL FIRST) N
(>       SAVE FIRST) N
(OUT) (Page 133/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       DATA FIRST /.TRUE./) p n
(> *) N
(> * Lagrangian radii at 1,2,5,7.5,10,15,20,50,70,90,100 % of total mass.) N
(>       DATA FLAGR/0.01,0.02,0.05,0.10,0.20,0.30,0.40,0.50,0.70,0.90,1.00/) N
(> * correspond to: 1%, 2% , 5% , 10%, 20%, 30%, 40%, 50%, 70%, 90%, 100%) N
(16a25,26) N
(> * All quantities refer to initial mass/particle distribution) N
(>       IF\(FIRST\) ZMASS0 = ZMASS) N
(18c28) N
(< *       Set square radii of single particles & c.m. bodies.) N
(---) N
(> * Set square radii of all single particles & c.m. bodies.) N
(20c30) N
(<       DO 10 I = IFIRST,NTOT) N
(---) N
(>       DO 10 I = 1,N) N
(23c33) N
(<      &                                  \(X\(3,I\) - C\(3\)\)**2) N
(---) N
(>      & \(X\(3,I\) - C\(3\)\)**2) N
(26,27c36) N
(< *) N
(< *       Sort square distances with respect to the centre C.) N
(---) N
(> * Sort square distances with respect to the centre C.) N
(29,59c38,48) N
(< ) N
(< *       Determine Lagrangian radii for specified mass fractions.) N
(<       ZM = 0.0) N
(<       DO 20 IL = 1,LX) N
(<           ZM1 = ZM) N
(<           ZM = 0.0) N
(<           ZMH = FLAGR\(IL\)*ZMASS) N
(<           VM2 = 0.0) N
(<           IF \(IL.GT.1\) THEN) N
(<               R1 = SQRT\(R2\(I\)\)) N
(<           ELSE) N
(<               R1 = 0.0) N
(<           END IF) N
(<           I = 0) N
(<    15     I = I + 1) N
(<           IM = JLIST\(I\)) N
(<           ZM = ZM + BODY\(IM\)) N
(< *       Sum mass-weighted square velocity in current shell.) N
(<           IF \(ZM.GT.ZM1\) THEN) N
(<               VM2 = VM2 + BODY\(IM\)*\(XDOT\(1,IM\)**2 + XDOT\(2,IM\)**2 +) N
(<      &                                              XDOT\(3,IM\)**2\)) N
(<           END IF) N
(<           IF \(ZM.LT.ZMH\) GO TO 15) N
(<           RLAGR\(IL\) = SQRT\(R2\(I\)\)) N
(<           IF \(KZ\(7\).LT.5\) GO TO 20) N
(< *       Form mean square velocity and density \(print outer shell radii\).) N
(<           DM = ZM - ZM1) N
(<           IF \(ABS\(DM\).LT.1.0D-10\) THEN) N
(<               VR\(IL\) = 0.0) N
(<           ELSE) N
(<               VR\(IL\) = SQRT\(VM2/DM\)) N
(---) N
(> *) N
(> * Set square radii of singles and binaries for primordial binaries) N
(>       IF \(KZ\(8\).GT.0 .OR. NBIN0.GT.0\) THEN) N
(> *) N
(>           IF \(FIRST\) THEN) N
(>           ZMB0 = 0.0D0) N
(>           ZMS0 = 0.0D0) N
(>               DO 101 I = IFIRST,N) N
(>  101 ZMS0 = ZMS0 + BODY\(I\)) N
(>               DO 102 I = N+1,NTOT) N
(>  102 ZMB0 = ZMB0 + BODY\(I\)) N
(OUT) (Page 134/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (67/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (135-136) 68
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(61,65d49) p n
(<           DV = 2.0*TWOPI/3.0*\(R2\(I\)**1.5 - R1**3\)) N
(<           DENS\(IL\) = DM/DV) N
(<           IF \(DENS\(IL\).LE.0.0D0\) DENS\(IL\) = 1.0) N
(<           RM\(IL\) = 0.5*\(R1 + RLAGR\(IL\)\)) N
(<    20 CONTINUE) N
(67c51,157) N
(< *       Obtain half-mass radius separately.) N
(---) N
(>           NSNGL = 0) N
(>           DO 103 I = IFIRST,N) N
(>               NSNGL = NSNGL + 1) N
(>               RSNGL\(NSNGL\) = \(X\(1,I\) - C\(1\)\)**2 + \(X\(2,I\) - C\(2\)\)**2 +) N
(>      & \(X\(3,I\) - C\(3\)\)**2) N
(>               ISLIST\(NSNGL\) = I) N
(>  103 CONTINUE) N
(> * Sort square distances with respect to the centre C.) N
(>       CALL SORT1\(NSNGL,RSNGL,ISLIST\)) N
(> *) N
(>           NBIN = 0) N
(>           DO 104 I = N+1, NTOT) N
(>               NBIN = NBIN + 1) N
(>               RBIN\(NBIN\) = \(X\(1,I\) - C\(1\)\)**2 + \(X\(2,I\) - C\(2\)\)**2 +) N
(>      & \(X\(3,I\) - C\(3\)\)**2) N
(>               IBLIST\(NBIN\) = I) N
(>  104 CONTINUE) N
(> * Sort square distances with respect to the centre C.) N
(>       CALL SORT1\(NBIN,RBIN,IBLIST\)) N
(> *) N
(>       END IF) N
(> *) N
(> * Determine the Lagrangian radii for specified mass fractions.) N
(> * RLAGR = Lagrangian radius) N
(> * AVMASS = average mass of a spherical shell with radius R2\(I\)) N
(> * AVMRC = average mass inside of core radius RC) N
(> * NPARTC = particle counter within a shell) N
(> * NCORE = particle counter for the core) N
(> * RC = Core radius \(calculated in core.f\)) N
(>       SIGR2C = 0.0D0) N
(>       SIGT2C = 0.0D0) N
(>       VROTC = 0.0D0) N
(>       AVMRC = 0.D0) N
(>       RC2 = RC*RC) N
(>       NCORE = 0) N
(>       ZM = 0.0D0) N
(>       ZMH = 0.5D0*ZMASS0) N
(>       I = 0) N
(> *) N
(>       DO 15 J = 1,11) N
(>          SIGR2\(J\) = 0.0D0) N
(>          SIGT2\(J\) = 0.0D0) N
(>          VROT\(J\) = 0.0D0) N
(>          AVMASS\(J\) = 0.0D0) N
(>          NPARTC\(J\) = 0) N
(> *) N
(>  20 I = I + 1) N
(>          IM = JLIST\(I\)) N
(>          ZM = ZM + BODY\(IM\)) N
(> *) N
(>          VRI = 0.D0) N
(>          DO 25 K = 1,3) N
(>  25 VRI = VRI + XDOT\(K,IM\)*\(X\(K,IM\)-C\(K\)\)/DSQRT\(R2\(I\)\)) N
(>          VR2I = 0.D0) N
(>          VT2I = 0.D0) N
(>          DO 26 K = 1,3) N
(>          VRADK = VRI*\(X\(K,IM\)-C\(K\)\)/DSQRT\(R2\(I\)\)) N
(>          VR2I = VR2I + VRADK**2) N
(>  26 VT2I = VT2I + \(XDOT\(K,IM\) - VRADK\)**2) N
(> *) N
(OUT) (Page 135/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>          SIGR2\(J\) = SIGR2\(J\) + BODY\(IM\)*VR2I) p n
(>          SIGT2\(J\) = SIGT2\(J\) + BODY\(IM\)*VT2I/2.D0) N
(> *) N
(>          RR12 = X\(1,IM\)**2 + X\(2,IM\)**2) N
(>          XR12 = 0.D0) N
(>          DO 27 K = 1,2) N
(>  27 XR12 = XR12 + XDOT\(K,IM\)*\(X\(K,IM\)-C\(K\)\)) N
(> *) N
(>          VROT1 = XDOT\(1,IM\) - XR12/RR12*X\(1,IM\)) N
(>          VROT2 = XDOT\(2,IM\) - XR12/RR12*X\(2,IM\)) N
(> *) N
(>          XSIGN = VROT1*X\(2,IM\)/DSQRT\(RR12\) - VROT2*X\(1,IM\)/DSQRT\(RR12\)) N
(>          VROTM = DSQRT\(VROT1**2+VROT2**2\)) N
(> *) N
(>          IF\(XSIGN.GT.0.D0\) THEN) N
(>          VROT\(J\) = VROT\(J\) + BODY\(IM\)*VROTM) N
(>          ELSE) N
(>          VROT\(J\) = VROT\(J\) - BODY\(IM\)*VROTM) N
(>          END IF) N
(> *) N
(>          AVMASS\(J\) = AVMASS\(J\) + BODY\(IM\)) N
(>          NPARTC\(J\) = NPARTC\(J\) + 1) N
(> *) N
(> * Independent determination of mass in core radius.) N
(>          IF \(R2\(I\) .LT. RC2\) THEN) N
(>             SIGR2C = SIGR2C + BODY\(IM\)*VR2I) N
(>             SIGT2C = SIGT2C + BODY\(IM\)*VT2I/2.D0) N
(>             VROTC = VROTC + BODY\(IM\)*VROTM) N
(>             AVMRC = AVMRC + BODY\(IM\)) N
(>             NCORE = NCORE + 1) N
(>          END IF) N
(> *) N
(> * Check whether mass within Langrangian radius is complete.) N
(>          IF \(I.LT.N.AND.ZM.LT.FLAGR\(J\)*ZMASS0\) GOTO 20) N
(> *) N
(>          RLAGR\(J\) = SQRT\(R2\(I\)\)) N
(>          SIGR2\(J\) = SIGR2\(J\)/AVMASS\(J\)) N
(>          SIGT2\(J\) = SIGT2\(J\)/AVMASS\(J\)) N
(>          VROT\(J\) = VROT\(J\)/AVMASS\(J\)) N
(>          AVMASS\(J\) = AVMASS\(J\)/NPARTC\(J\)) N
(>  15 CONTINUE) N
(>       SIGR2C = SIGR2C/AVMRC) N
(>       SIGT2C = SIGT2C/AVMRC) N
(>       VROTC = VROTC/AVMRC) N
(>       AVMRC = AVMRC/NCORE) N
(> *) N
(> * Determine half-mass radius separately.) N
(69c159) N
(<       ZMH = 0.5*ZMASS) N
(---) N
(>       ZMH = 0.5D0*ZMASS0) N
(71c161) N
(<    25 I = I + 1) N
(---) N
(>  30 I = I + 1) N
(74,76c164,165) N
(<       IF \(ZM.LT.ZMH\) GO TO 25) N
(< *) N
(< *       Replace approximate half-mass radius by actual value.) N
(---) N
(>       IF \(ZM.LT.ZMH\) GO TO 30) N
(> * Replace approximate half-mass radius by actual value.) N
(79,99c168,171) N
(< *       Determine tidal radius and mass if kz\(14\) = 2.) N
(<       if \(kz\(14\).eq.2.and.tidal\(1\).ne.0.\) then) N
(<       I = np) N
(<       mrt = zmass) N
(<    30 continue) N
(<       if \(mrt.gt.0.\) then) N
(OUT) (Page 136/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (68/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (137-138) 69
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<          rt = \(mrt/tidal\(1\)\)**\(1./3.\)) p n
(<       else) N
(<          rt = 0.0) N
(<       endif) N
(<       IF \(sqrt\(r2\(i\)\).gt.rt.and.rt.gt.0.and.i.gt.1\) then) N
(<          IM = JLIST\(I\)) N
(<          Mrt = Mrt - BODY\(IM\)) N
(<          i = i - 1) N
(<          GO TO 30) N
(<       endif) N
(<       endif) N
(< ) N
(<       IF \(\(KZ\(7\).EQ.2.OR.KZ\(7\).EQ.4\).AND.TTOT.GE.TPRINT\) THEN) N
(<           IF \(KZ\(14\).EQ.2\) WRITE \(6,*\)  tphys,mrt,rt) N
(<       END IF) N
(---) N
(>       IF \(KZ\(8\).GT.0 .OR. NBIN0.GT.0\) THEN) N
(> * Determine the Lagrangian radii for singles and binaries separately.) N
(>       ZMS = 0.0D0) N
(>       I = 0) N
(101,104c173,179) N
(<       IF \(KZ\(7\).GE.3.AND.TTOT.GE.TPRINT\) THEN) N
(<           IF \(KZ\(14\).EQ.2\) WRITE \(14,*\)  tphys, mrt, rt) N
(<    35     FORMAT \(3X,'TIDAL RADIUS    TPHYS MRT RT ',F8.1,1P,2E10.2\)) N
(<       END IF) N
(---) N
(>       DO 251 J = 1, 11) N
(>  201 I = I + 1) N
(>          IM = ISLIST\(I\)) N
(>          ZMS = ZMS + BODY\(IM\)) N
(>          IF \(I.LT.N-2*NPAIRS.AND.ZMS.LT.FLAGR\(J\)*ZMS0\) GOTO 201) N
(>          RSLAGR\(J\) = SQRT\(RSNGL\(I\)\)) N
(>  251 CONTINUE) N
(106,110c181,182) N
(< *       Check output options \(line printer or unit 7 or both\).) N
(<       IF \(KZ\(7\).EQ.2.OR.KZ\(7\).EQ.4.AND.TTOT.GE.TPRINT\) THEN) N
(<           WRITE \(6,40\)  \(LOG10\(RLAGR\(K\)\),K=1,LX\)) N
(<    40     FORMAT \(/,3X,'LAGR:  ',13F7.3\)) N
(<       END IF) N
(---) N
(>       ZMB = 0.0D0) N
(>       I = 0) N
(112,116c184,190) N
(<       IF \(KZ\(7\).GE.3.AND.TTOT.GE.TPRINT\) THEN) N
(<           WRITE \(12,50\)  TTOT, \(LOG10\(RLAGR\(K\)\),K=1,LX\)) N
(<    50     FORMAT \('  LAGR:  ',F7.1,13F7.3\)) N
(<           CALL FLUSH\(12\)) N
(<       END IF) N
(---) N
(>       DO 351 J = 1, 11) N
(>  301 I = I + 1) N
(>          IM = IBLIST\(I\)) N
(>          ZMB = ZMB + BODY\(IM\)) N
(>          IF \(I.LT.NPAIRS.AND.ZMB.LT.FLAGR\(J\)*ZMB0\) GOTO 301) N
(>          RBLAGR\(J\) = SQRT\(RBIN\(I\)\)) N
(>  351 CONTINUE) N
(118,125d191) N
(<       IF \(KZ\(7\).EQ.5.AND.TTOT.GE.TPRINT\) THEN) N
(<           WRITE \(26,60\)  TTOT, \(DENS\(K\),K=1,LX\)) N
(<    60     FORMAT \('  DENSITY \(T =',F6.1,'\): ',1P,13E10.2\)) N
(<           WRITE \(26,65\)  \(RM\(K\),K=1,LX\)) N
(<    65     FORMAT \('  DISTANCE:  ',1P,13E10.2\)) N
(<           WRITE \(27,70\)  TTOT, \(VR\(K\),K=1,LX\)) N
(<    70     FORMAT \('  VELOCITY \(T =',F6.1,'\): ',1P,13E10.2\)) N
(<           WRITE \(27,65\)  \(RM\(K\),K=1,LX\)) N
(127a194,236) N
(>       if\(rank.eq.0\)then) N
(> * Write on diagnostics \(only until r_h\).) N
(>          IF \(KZ\(7\).EQ.2 .OR. KZ\(7\).EQ.4\) THEN) N
(OUT) (Page 137/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           WRITE \(6,40\) ' TIME ',\(FLAGR\(K\),K=1,11\),' <RC') p n
(>    40 FORMAT \(/,3X,A6,' M/MT:  ',1P,11\(1X,D9.2\),A4\)) N
(>           WRITE \(6,41\) TTOT, \(RLAGR\(K\),K=1,11\),RC) N
(>    41 FORMAT \(3X,F6.1,' RLAGR: ',1P,12\(1X,D9.2\)\)) N
(> *) N
(>          IF \(KZ\(8\).GT.0 .OR. NBIN0.GT.0\) THEN) N
(>           WRITE \(6,401\) TTOT, \(RSLAGR\(K\),K=1,11\)) N
(>   401 FORMAT \(3X,F6.1,' RSLAGR: ',1P,11\(1X,D9.2\)\)) N
(>           WRITE \(6,402\) TTOT, \(RBLAGR\(K\),K=1,11\)) N
(>   402 FORMAT \(3X,F6.1,' RBLAGR: ',1P,11\(1X,D9.2\)\)) N
(>          END IF) N
(> *) N
(>           WRITE \(6,42\) TTOT, \(AVMASS\(K\),K=1,11\),AVMRC) N
(>    42 FORMAT \(3X,F6.1,' AVMASS:',1P,12\(1X,D9.2\)\)) N
(>           WRITE \(6,43\) TTOT, \(NPARTC\(K\),K=1,11\),NCORE) N
(>    43 FORMAT \(3X,F6.1,' NPARTC:',12I10\)) N
(>           WRITE \(6,45\) TTOT, \(SIGR2\(K\),K=1,11\),SIGR2C) N
(>    45 FORMAT \(3X,F6.1,' SIGR2: ',1P,12\(1X,D9.2\)\)) N
(>           WRITE \(6,46\) TTOT, \(SIGT2\(K\),K=1,11\),SIGT2C) N
(>    46 FORMAT \(3X,F6.1,' SIGT2: ',1P,12\(1X,D9.2\)\)) N
(>           WRITE \(6,47\) TTOT, \(VROT\(K\),K=1,11\),VROTC) N
(>    47 FORMAT \(3X,F6.1,' VROT:  ',1P,12\(1X,D9.2\)\)) N
(> ) N
(> ) N
(>          END IF) N
(>       end if) N
(> * Write all data in binary format on unit 7.) N
(> *) N
(> ) N
(> ) N
(> ) N
(>          IF \(KZ\(7\).GE.3\) THEN) N
(>             WRITE \(7\) TTOT, \(RLAGR\(K\),K=1,11\),) N
(>      & \(AVMASS\(K\),K=1,11\),\(NPARTC\(K\),K=1,11\),RC,AVMRC,NCORE) N
(>          CALL FLUSH\(7\)) N
(>          END IF) N
(> ) N
(> ) N
(> ) N
(> *) N
(1,2c1,2) N
(< 1074 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/levels.f) N
(< nbody6compare/levels.f) N
(---) N
(> 4095 2003-06-23 21:03 /work/Umi2/spurzem/5/nbody6++compare/levels.f) N
(> nbody6++compare/levels.f) N
(5a6) N
(> *       plus estimation of parallel speed-up \(R.Sp.\)) N
(8c9,14) N
(<       INTEGER  IHIST\(32\),IHISTR\(32\)) N
(---) N
(>       INTEGER JHIST,JHISTR,JHISTU) N
(>       COMMON/BLKLVL/JHIST\(0:NMAX\),JHISTR\(0:NMAX\),JHISTU\(0:NMAX\)) N
(>       INTEGER  IHIST\(NMAX\),IHISTR\(NMAX\),IHISTU\(NMAX\)) N
(>       INTEGER IPES,IPROC\(9\),IY\(1024\),IYR\(1024\)) N
(>       REAL*8 XSPEED\(9\),XSPEDR\(9\)) N
(>       DATA IPROC/4,8,16,32,64,128,256,512,1024/) N
(12c18) N
(<       DO 10 J = 1,32) N
(---) N
(>       DO 10 J = 1,NMAX) N
(14a21) N
(>           IHISTU\(J\) = 0) N
(18c25) N
(<       JMAX = 0) N
(---) N
(>       JMAXI = 0) N
(22d28) N
(<           IF \(BODY\(I\).EQ.0.0D0\) GO TO 20) N
(OUT) (Page 138/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (69/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (139-140) 70
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(23a30) p n
(>           IF\(J.GT.NMAX\)J = NMAX) N
(25c32) N
(<           JMAX = MAX\(J,JMAX\)) N
(---) N
(>           JMAXI = MAX\(J,JMAXI\)) N
(26a34) N
(>           IF\(J.GT.NMAX\)J = NMAX) N
(30a39,48) N
(>       JMAXU = 0) N
(> *       Loop over KS binaries) N
(>       DO 25 IPAIR = 1,NPAIRS) N
(>           I1 = 2*IPAIR - 1) N
(>           J = 1 - LOG\(STEP\(I1\)\)*FAC) N
(>           IF\(J.GT.NMAX\)J = NMAX) N
(>           IHISTU\(J\) = IHISTU\(J\) + 1) N
(>           JMAXU = MAX\(J,JMAXU\)) N
(>    25 CONTINUE) N
(> *) N
(32,40c50,131) N
(<       JMAX = MIN\(JMAX,27\)) N
(<       WRITE \(6,30\)  \(IHIST\(J\),J=1,JMAX\)) N
(<    30 FORMAT \(' #6  STEP   ',12I5,15I4\)) N
(< *) N
(<       IF \(KZ\(33\).GT.1\) THEN) N
(<           JMAXR = MIN\(JMAXR,27\)) N
(<           WRITE \(6,35\)  \(IHISTR\(J\),J=1,JMAXR\)) N
(<    35     FORMAT \(' #7  STEPR  ',12I5,15I4\)) N
(<       END IF) N
(---) N
(>       JMAXI=MIN\(JMAXI,NMAX\)) N
(>       JMAXR=MIN\(JMAXR,NMAX\)) N
(>       JMAXU=MIN\(JMAXU,NMAX\)) N
(>       if\(rank.eq.0\)then) N
(> ) S 8 T (  WRITE \(6,30\)  \(IHIST\(J\),J=1,JMAXI\)) N
(>    30 FORMAT \(' STEP I ',22I5,\(/,24I5\)\)) N
(>       IF \(KZ\(33\).GT.1\)WRITE \(6,301\)  \(IHISTR\(J\),J=1,JMAXR\)) N
(>   301 FORMAT \(' STEP R ',50I5,\(/,24I5\)\)) N
(>       IF \(KZ\(8\).GT.0 .OR. NBIN0.GT.0 \)WRITE \(6,3001\)) N
(>      *     \(IHISTU\(J\),J=1,JMAXU\)) N
(>  3001 FORMAT \(' STEP U ',50I5,\(/,24I5\)\)) N
(>       end if) N
(> *) N
(> *       IPROC contains a list of possible processor numbers,) N
(> *       presently   4 to 1024 in powers of 2.) N
(> *) N
(>       DO 35 NN = 1,9) N
(>       IPES = IPROC\(NN\)) N
(>       DO 36 I = 1,IPES) N
(>       IY\(I\) = 0) N
(>  36   IYR\(I\) = 0) N
(> *) N
(> *       JHIST contains accumulated frequencies from INTGRT for irr. steps. ) N
(> *       JHIST\(80\) = 5 e.g. means that it occurred 5 times since the last) N
(> *                   call of LEVELS that 80 force calculations had) N
(> *                   to be done in parallel) N
(> *       IY maps this information to a certain number of processors,) N
(> *       e.g. in the above case for 64 processors it would mean that) N
(> *       five times 64 processors could be fully used, and five times) N
(> *       only 16 processors \(to get the remaining forces\).) N
(> *       JHIST\(80\) = 5 results in incrementing IY\(64\) and IY\(16\) by 5.) N
(> *) N
(> *       \(IYE, JHISTR do the same for the regular steps\)) N
(> *) N
(>       DO 37 I = 1,NMAX) N
(>       IF\(JHIST\(I\).EQ.0\)GOTO 37) N
(>       J = MOD\(I,IPES\)) N
(>       K = I/IPES) N
(>       IF\(J.GT.0\)IY\(J\)=IY\(J\)+JHIST\(I\)) N
(OUT) (Page 139/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       IF\(K.GT.0\)IY\(IPES\)=IY\(IPES\)+K*JHIST\(I\)) p n
(>  37   CONTINUE) N
(> *) N
(>       DO 371 I = 1,NMAX) N
(>       IF\(JHISTR\(I\).EQ.0\)GOTO 371) N
(>       J = MOD\(I,IPES\)) N
(>       K = I/IPES) N
(>       IF\(J.GT.0\)IYR\(J\)=IYR\(J\)+JHISTR\(I\)) N
(>       IF\(K.GT.0\)IYR\(IPES\)=IYR\(IPES\)+K*JHISTR\(I\)) N
(>  371  CONTINUE) N
(> *) N
(>       ISPEED = 0) N
(>       ISPEDR = 0) N
(>       ITOT = 0) N
(>       ITOTR = 0) N
(>       DO 38 I = 1,IPES) N
(>       ISPEED = ISPEED + I*IY\(I\)) N
(>       ISPEDR = ISPEDR + I*IYR\(I\)) N
(>       ITOT = ITOT + IY\(I\)) N
(>       ITOTR = ITOTR + IYR\(I\)) N
(>  38   CONTINUE) N
(> *) N
(> *       Estimate theoretical speedup by \(sum I*IY\) / \(sum IY\);) N
(> *       enumerator is the total number of force calculations necessary;) N
(> *       denominator is the number of force calculation `cycles' necessary) N
(> *       on a parallel machine. Separately done for regular/irregular) N
(> *       steps. Communication not yet included in any way.) N
(> *) N
(>       IF\(ITOT.NE.0\)XSPEED\(NN\) = REAL\(ISPEED\)/REAL\(ITOT\)) N
(>       IF\(ITOTR.NE.0\)XSPEDR\(NN\) = REAL\(ISPEDR\)/REAL\(ITOTR\)) N
(>  35   CONTINUE) N
(> *) N
(> ) S 8 T (  if\(rank.eq.0\)then) N
(>       WRITE \(6,40\)  \(IPROC\(J\),XSPEED\(J\),J=1,9\)) N
(>  40   FORMAT \(' Max Speedup Irr: ',1P,9\(I5,D9.2\)\)) N
(>       WRITE \(6,41\)  \(IPROC\(J\),XSPEDR\(J\),J=1,9\)) N
(>  41   FORMAT \(' Max Speedup Reg: ',1P,9\(I5,D9.2\)\)) N
(>       end if) N
(> *) N
(>       DO 50 J = 1,NMAX) N
(>           JHIST\(J\) = 0) N
(>           JHISTR\(J\) = 0) N
(>    50 CONTINUE) N
(1,2c1,2) N
(< 443 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/matrix.f) N
(< nbody6compare/matrix.f) N
(---) N
(> 443 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/matrix.f) N
(> nbody6++compare/matrix.f) N
(1,2c1,2) N
(< 19782 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/mdot.f) N
(< nbody6compare/mdot.f) N
(---) N
(> 19504 2006-06-18 08:32 /work/Umi2/spurzem/5/nbody6++compare/mdot.f) N
(> nbody6++compare/mdot.f) N
(1d0) N
(< ) N
(48,49c47) N
(<           IF \(\(BODY\(I\).GT.BODY1.AND.NAME\(I\).GE.0\).OR.NAME\(I\).EQ.0.OR.) N
(<      &        BODY\(I\).LE.0.0\) THEN) N
(---) N
(>           IF \(BODY\(I\).GT.BODY1.OR.NAME\(I\).EQ.0.OR.BODY\(I\).LE.0.0\) THEN) N
(96c94,95) N
(<                   WRITE \(6,22\)  IGHOST, I0, I, NAME\(I\), KSTAR\(I\), TEV\(I\)) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,22\)  IGHOST, I0, I, NAME\(I\), KSTAR\(I\), TEV\(I\)) N
(150c149,150) N
(<               WRITE \(6,30\)  I, NAME\(I\), KSTAR\(I1\), KSTAR\(I2\), KSTAR\(I\),) N
(OUT) (Page 140/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (70/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (141-142) 71
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,30\)  I, NAME\(I\), KSTAR\(I1\), KSTAR\(I2\), KSTAR\(I\),) N
(218,228d217) N
(< *       Check that mass loss does not exceed the envelope mass.) N
(<          IF \(KSTAR\(I\).LT.10\) THEN) N
(<             DML = MAX\(M1 - MC,1.0D-07\)) N
(<             IF \(DML.LT.DM\) THEN) N
(<                DT = \(DML/DM\)*DT) N
(<                DM = DML) N
(< *       Ensure correction for the last small mass loss \(avoids looping\).) N
(<                DMR = 0.011) N
(<             END IF) N
(<          END IF) N
(< *) N
(252,254c241,243) N
(<           WRITE \(6,35\)  NAME\(I\), KW, DM, AGE, AGE - TN) N
(<    35     FORMAT \(' WARNING!    AGE > TN    NM KW DMS AGE AGE-TN ',) N
(<      &                                      I6,I4,F7.3,1P,2E10.2\)) N
(---) N
(> *         if\(rank.eq.0\) WRITE \(6,35\)  NAME\(I\), KW, DM, AGE, TN) N
(> *  35     FORMAT \(' WARNING!    AGE > TN    NM KW DMS AGE TN ',) N
(> *    &                                      I6,I4,F7.3,1P,2E9.1\)) N
(418c407,408) N
(<               WRITE \(6,40\)  I, NAME\(I\), KW, KSTAR\(I\), BODY\(I\)*ZMBAR,) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,40\)  I, NAME\(I\), KW, KSTAR\(I\), BODY\(I\)*ZMBAR,) N
(521c511) N
(<       TEV\(I\) = TEV\(I\) + DTM) N
(---) N
(>       TEV\(I\) = TEVK + DTM) N
(524,525c514,515) N
(< *       Update epoch at every new look-up time \(prevents AGE > TPHYS\).) N
(< *     IF \(KW.NE.KW0\) THEN) N
(---) N
(> *       Update epoch on transition to new type.) N
(>       IF \(KW.NE.KW0\) THEN) N
(527c517) N
(< *     END IF) N
(---) N
(>       END IF) N
(543,544c533,535) N
(<           WRITE \(6,65\)  WHICH1, TPHYS, I, NAME\(I\), DMR, KW0, KW,) N
(<      &                  M0, M1, RADIUS\(I\)*SU, EMDOT) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,65\)  WHICH1, TPHYS, I, NAME\(I\), DMR, KW0, KW,) N
(>      &                  M0, M1, RADIUS\(I\)/SU, EMDOT) N
(546c537) N
(<      &                        F7.1,2I5,F6.2,2I3,2F6.1,1P,E9.1,0P,F10.5\)) N
(---) N
(>      &            F7.1,2I8,1P,E10.2,2I3,0P,2F6.1,1P,E9.1,0P,F10.5\)) N
(565c556,557) N
(<                   WRITE \(6,66\)  KW, SQRT\(ECC2\), RA, SEMI*SU, STEP\(J\),) N
(---) N
(>                   if\(rank.eq.0\)) N
(>      &            WRITE \(6,66\)  KW, SQRT\(ECC2\), RA, SEMI*SU, STEP\(J\),) N
(605a598,599) N
(> ) N
(> ) N
(1,2c1,2) N
(< 9649 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/merge2.f) N
(< nbody6compare/merge2.f) N
(---) N
(> 9317 2003-06-25 21:22 /work/Umi2/spurzem/5/nbody6++compare/merge2.f) N
(> nbody6++compare/merge2.f) N
(39,48d38) N
(< *       Select deepest level as primary in case of two hierarchies.) N
(OUT) (Page 141/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       IF \(NAME\(N+KSPAIR\).LT.0.AND.NAME\(JCOMP\).LT.0\) THEN) p n
(< *       Note possibility of a quartet \(or even quintet\) and triple.) N
(<           IF \(NAME\(JCOMP\).LT.NAME\(N+KSPAIR\)\) THEN) N
(<               K = KSPAIR) N
(<               KSPAIR = JCOMP - N) N
(<               JCOMP = N + K) N
(<           END IF) N
(<       END IF) N
(< *) N
(57,58d46) N
(<       ECC2 = \(1.0 - R\(IPAIR\)/SEMI\)**2 + TDOT2\(IPAIR\)**2/\(BODY\(I\)*SEMI\)) N
(<       ECC = SQRT\(ECC2\)) N
(60c48) N
(< *       Produce diagnostics for [[B,S],B] quintuplet or sextuplet system.) N
(---) N
(> *       Produce diagnostics for quintuplet or sextuplet system.) N
(65a54,55) N
(>           E2 = \(1.0 - R\(IPAIR\)/SEMI\)**2 + TDOT2\(IPAIR\)**2/\(BODY\(I\)*SEMI\)) N
(>           ECC = SQRT\(E2\)) N
(74c64,65) N
(<           WRITE \(6,5\)  WHICH1, TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,5\)  WHICH1, TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\),) N
(80c71) N
(< *       Check formation of [[B,S],S] quartet or [[B,B],S] quintuplet.) N
(---) N
(> *       Check formation of [[B,S],S} quartet or [[B,B],S] quintuplet.) N
(85,88c76,80) N
(<               WRITE \(6,7\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\),) N
(<      &                     NAME\(JCOMP\), ECC, SEMI, PCRIT, GAMMA\(IPAIR\)) N
(<     7         FORMAT \(/,' NEW QUARTET    T MT NM1 NMG NM3 E0 A0 PC G0 ',) N
(<      &                                   F9.2,F6.2,3I6,F6.2,1P,3E10.2\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,7\)  TIME+TOFF, ZM, NAME\(I2\), NAME\(JG\),) N
(>      &                     NAME\(JCOMP\), SEMI, PCRIT, GAMMA\(IPAIR\)) N
(>     7         FORMAT \(/,' NEW QUARTET    T MT NM1 NMG NM3 A0 PC G0 ',) N
(>      &                                   F9.2,F6.2,3I6,1P,3E10.2\)) N
(90,93c82,86) N
(<               WRITE \(6,8\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\),) N
(<      &                     NAME\(JCOMP\), ECC, SEMI, PCRIT, GAMMA\(IPAIR\)) N
(<     8         FORMAT \(/,' NEW QUINTUP2    T MT NM1 NMG NM3 E0 A0 PC G0',) N
(<      &                                    F10.2,F6.2,3I6,F6.2,1P,3E10.2\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,8\)  TIME+TOFF, ZM, NAME\(I2\), NAME\(JG\),) N
(>      &                     NAME\(JCOMP\), SEMI, PCRIT, GAMMA\(IPAIR\)) N
(>     8         FORMAT \(/,' NEW QUINTUP2    T MT NM1 NMG NM3 A0 PC G0 ',) N
(>      &                                    F9.2,F6.2,3I6,1P,3E10.2\)) N
(97c90) N
(< *       Include diagnostics for double triple as [[B,S],[B,S]].) N
(---) N
(> *       Include diagnostics for double triple \([[B,S],[B,S]]\).) N
(107,108c100,102) N
(<           WRITE \(6,10\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\), NAME\(J1\),) N
(<      &                  NAME\(2*JPAIR\), ECC, AI, AJ, R\(IPAIR\), R\(JPAIR\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,10\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\), NAME\(J1\),) N
(>      &                  NAME\(2*JPAIR\), AI, AJ, R\(IPAIR\), R\(JPAIR\),) N
(110,111c104,105) N
(<    10     FORMAT \(/,' NEW HITRIP    T MT NM E0 AI AJ RI RJ PC GX ',) N
(<      &                              F9.2,F6.2,4I6,F6.2,1P,6E10.2\)) N
(---) N
(>    10     FORMAT \(/,' NEW HITRIP    T MT NM AI AJ RI RJ PC GX ',) N
(>      &                              F9.2,F6.2,4I6,1P,6E10.2\)) N
(145a140,144) N
(> *       Update the primary velocity of body #JCOMP.) N
(OUT) (Page 142/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (71/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (143-144) 72
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       DO 15 K = 1,3) p n
(>           X0DOT\(K,JCOMP\) = XDOT\(K,JCOMP\)) N
(>    15 CONTINUE) N
(> *) N
(163,167d161) N
(< *       Predict outer component to highest order if not on the block.) N
(<       IF \(TIME - T0\(JCOMP1\).GT.0.0D0\) THEN) N
(<           CALL XVPRED\(JCOMP1,-1\)) N
(<       END IF) N
(< *) N
(279a274,275) N
(> ) N
(> ) N
(1,2c1,2) N
(< 9126 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/merge.f) N
(< nbody6compare/merge.f) N
(---) N
(> 9106 2003-06-25 17:29 /work/Umi2/spurzem/5/nbody6++compare/merge.f) N
(> nbody6++compare/merge.f) N
(232,233c232) N
(<           FAC = NNBMAX/NNB) N
(<           FAC = MIN\(FAC,4.0D0\)) N
(---) N
(>           FAC = FLOAT\(NNBMAX\)/FLOAT\(NNB\)) N
(250d248) N
(< ) N
(255d252) N
(< *) N
(1,2c1,2) N
(< 6352 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/mloss.f) N
(< nbody6compare/mloss.f) N
(---) N
(> 6392 2005-03-09 16:25 /work/Umi2/spurzem/5/nbody6++compare/mloss.f) N
(> nbody6++compare/mloss.f) N
(154c154,155) N
(<       WRITE \(6,30\)  NAME\(IMAX\), BMAX, BMAX*ZMBAR, ZMDOT, DE, BE\(3\),) N
(---) N
(>       if\(rank.eq.0\)) N
(>      &WRITE \(6,30\)  NAME\(IMAX\), BMAX, BMAX*ZMBAR, ZMDOT, DE, BE\(3\),) N
(167c168,169) N
(<       WRITE \(6,45\)  IMAX, DE, TEV1, A0, SQRT\(VI2\), BE\(3\)) N
(---) N
(>       if\(rank.eq.0\)) N
(>      &WRITE \(6,45\)  IMAX, DE, TEV1, A0, SQRT\(VI2\), BE\(3\)) N
(1,2c1,2) N
(< 1818 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/mlwind.f) N
(< nbody6compare/mlwind.f) N
(---) N
(> 1785 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/mlwind.f) N
(> nbody6++compare/mlwind.f) N
(29d28) N
(<             p0 = MIN\(p0,2000.d0\)) N
(1,2c1,2) N
(< 2410 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/modify.f) N
(< nbody6compare/modify.f) N
(---) N
(> 2120 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/modify.f) N
(> nbody6++compare/modify.f) N
(0a1,4) N
(> # 1 "modify.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "modify.F") N
(4,5c8,9) N
(< *       Parameter modification at restart.) N
(< *       ----------------------------------) N
(---) N
(> * Parameter modification at restart.) N
(> * ----------------------------------) N
(OUT) (Page 143/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(9a14) p n
(> # 19 "modify.F") N
(11c16) N
(< *       Read first, second or both lines \(KSTART = 3, 4, 5\).) N
(---) N
(> * Read first, second or both lines \(KSTART = 3, 4, 5\).) N
(14,15c19,22) N
(< *       Read new DTADJ, DELTAT, TADJ, TNEXT, TCRIT, QE & KZ\(J\) \(if > 0\).) N
(<       READ \(5,*\)  DTA, DT, TA, TN, TC, QE1, J, K) N
(---) N
(> * Read new DTADJ, DELTAT, TADJ, TNEXT, TCRIT, QE & KZ\(J\) \(if > 0\).) N
(>       if\(rank.eq.0\)then) N
(>       READ \(5,*\) DTA, DT, TA, TN, TC, QE1, J, K) N
(>       end if) N
(17c24,26) N
(< *       Copy old parameters if corresponding input is zero.) N
(---) N
(> # 38 "modify.F") N
(> *) N
(> * Set new parameters if corresponding input is non-zero.) N
(19a29,30) N
(>       ELSE) N
(>           DTA = DTA) N
(23a35,36) N
(>       ELSE) N
(>           DT = DT) N
(43c56) N
(< *       See whether any options should be changed.) N
(---) N
(> * See whether any options should be changed.) N
(46,49c59,60) N
(<       WRITE \(6,5\)  DTADJ, DELTAT, TCRIT, QE, J, K) N
(<     5 FORMAT \(///,7X,'RESTART PARAMETERS:   DTADJ =',F7.3,'  DELTAT =',) N
(<      &                            F7.3,'  TCRIT =',F7.1,'  QE =',1PE9.1,) N
(<      &                                            '  KZ\(',I2,'\) =',I2,/\)) N
(---) N
(>       if\(rank.eq.0\)WRITE \(6,5\) J, K) N
(>     5 FORMAT \() N
(51c62) N
(< *       Read new ETAI, ETAR, ETAU, DTMIN, RMIN, NCRIT \(if > 0 & KSTART >= 4\).) N
(---) N
(> * Read new ETAI, ETAR, ETAU, DTMIN, RMIN \(IF > 0 & KSTART = 4 or 5\).) N
(53c64,67) N
(<           READ \(5,*\)  ETA1, ETA2, ETA3, DTM, RM, NEWCR) N
(---) N
(>           if\(rank.eq.0\)then) N
(>           READ \(5,*\) ETA1, ETA2, ETA3, DTM, RM, NNBO) N
(>           end if) N
(> # 88 "modify.F") N
(55c69) N
(< *       Check modification of integration parameters.) N
(---) N
(> * Check modification of integration parameters.) N
(68c82) N
(<           IF \(NEWCR.GT.0\) NCRIT = NEWCR) N
(---) N
(>           IF \(NNBO.GT.0\) NNBOPT = NNBO) N
(70,73d83) N
(<           WRITE \(6,15\)  ETAI, ETAR, ETAU, DTMIN, RMIN, NCRIT) N
(<    15     FORMAT \(/,7X,'RESTART PARAMETERS:   ETAI =',F7.3,'  ETAR =',) N
(<      &                        F7.3,'  ETAU =',F7.3,'  DTMIN =',1P,E9.1,) N
(<      &                             '  RMIN =',E9.1,'  NCRIT =',0P,I5,/\)) N
(76c86) N
(< *       Perform a simple validation check on main input parameters.) N
(---) N
(> * Perform a simple validation check on main input parameters.) N
(79c89) N
(< *       Save the new parameters on tape/disc unit #1 just in case.) N
(---) N
(OUT) (Page 144/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (72/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (145-146) 73
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * Save the new parameters on tape/disc in case a restart is needed.) p n
(1,2c1,2) N
(< 1179 2006-09-02 12:38 /work/Umi2/spurzem/5/nbody6compare/mydump.f) N
(< nbody6compare/mydump.f) N
(---) N
(> 1773 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/mydump.f) N
(> nbody6++compare/mydump.f) N
(0a1,4) N
(> # 1 "mydump.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "mydump.F") N
(4,5c8,9) N
(< *       COMMON save or read.) N
(< *       --------------------) N
(---) N
(> * COMMON save or read.) N
(> * --------------------) N
(8,20c12,28) N
(<       PARAMETER  \(NA=96*NMAX,NB=111*KMAX+7,) N
(<      &            NC=\(LMAX+2\)*NMAX+3*KMAX+MLR+MLD+MLV+64,) N
(<      &            NF=41*MMAX,NG=11*NMAX+126,NH=20*MCL+16,) N
(<      &            NO=24*NMAX,NP=2*NMAX+84\)) N
(<       REAL*4  A,B,E,F,G,H,O,P,Q,PL) N
(<       INTEGER  IC,ID,IR) N
(< *) N
(< *) N
(<       COMMON/NBODY/  A\(NA\)) N
(<       COMMON/PAIRS/  B\(NB\)) N
(<       COMMON/NAMES/  IC\(NC\)) N
(<       COMMON/COUNTS/ ID\(60\)) N
(<       COMMON/PARAMS/ E\(330\)) N
(---) N
(>       IMPLICIT REAL*8 \(A-H,O-Z\)) N
(>       PARAMETER \(NA=\(16*ID+6\)*NMAX,NB=65*KMAX+4,) N
(>      & NC=\(LMAX+3\)*NMAX+3*KMAX+MLR+MLD+MLV+75,ND=71,) N
(>      & NE=163,NF=21*MMAX,NG=5*NMAX+NMAX/2+63,NH=10*MCL+8,) N
(>      & NO=\(4*ID+1\)*NMAX,NP=66,NQ=2*NMAX+5*LMAX,) N
(>      & NR=3*NMAX,NS=17\)) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(>       REAL*8 A,B,E,F,G,H,O,P,R,S) N
(>       INTEGER IC,IDD,IR,IQ) N
(> *) N
(>       COMMON/NBODY/ A\(NA\)) N
(>       COMMON/PAIRS/ B\(NB\)) N
(>       COMMON/NAMES/ IC\(NC\)) N
(>       COMMON/COUNTS/ IDD\(ND\)) N
(>       COMMON/PARAMS/ E\(NE\)) N
(22c30,32) N
(<       COMMON/STARS/  G\(NG\)) N
(---) N
(> C Take note that G=real*8, and some members of it \(in common6.h\)) N
(> C are integer, is. these only add as half words.) N
(>       COMMON/STARS/ G\(NG\)) N
(24c34) N
(<       COMMON/RAND2/  IR\(99\)) N
(---) N
(>       COMMON/RAND/ IR\(99\)) N
(27,28c37,52) N
(<       COMMON/GALAXY/ Q\(40\)) N
(<       COMMON/PLPOT/  PL\(24\)) N
(---) N
(>       COMMON/LISTS/ IQ\(NQ\)) N
(>       COMMON/WORK2/ R\(NR\)) N
(>       COMMON/TIMING/ S\(NS\)) N
(> *) N
(> * Open unit #J by reading dummy and rewinding.) N
(OUT) (Page 145/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> C GLOBAL_UNIT = J) p n
(> ) N
(> ) N
(> ) N
(>          CALL FILE_INIT\(J\)) N
(>          REWIND J) N
(>          READ \(J,ERR=10,END=10\) DUMMY) N
(>  10 REWIND J) N
(> ) N
(> ) N
(> ) N
(29a54,55) N
(> * Read or save all COMMON variables \(valid for tape or disc\).) N
(>       IF \(I.EQ.0\) THEN) N
(31,34c57,61) N
(< *       Open unit #J by reading dummy and rewinding.) N
(<       REWIND J) N
(<       READ \(J,ERR=10,END=10\)  DUMMY) N
(<    10 REWIND J) N
(---) N
(> ) N
(> ) N
(> ) N
(>             READ \(J\) A, B, IC, IDD, E, F, G, H, IR, O, P, IQ, R, S) N
(> # 83 "mydump.F") N
(36,38d62) N
(< *       Read or save all COMMON variables \(valid for tape or disc\).) N
(<       IF \(I.EQ.0\) THEN) N
(<           READ \(J\)   A, B, IC, ID, E, F, G, H, IR, O, P, Q, PL) N
(40c64,68) N
(<           WRITE \(J\)  A, B, IC, ID, E, F, G, H, IR, O, P, Q, PL) N
(---) N
(> *) N
(> ) N
(> ) N
(> ) N
(>           WRITE \(J\) A, B, IC, IDD, E, F, G, H, IR, O, P, IQ, R, S) N
(42a71,74) N
(> ) N
(> ) N
(> ) N
(> *) N
(43a76,82) N
(> * Write transition data IC\(62\) = KZ\(39\)) N
(> * IF\(IC\(62\).EQ.1\)THEN) N
(> * IARG = 1) N
(> * CALL WTRANS\(IARG\)) N
(> * IARG = 2) N
(> * CALL WTRANS\(IARG\)) N
(> * END IF) N
(1,2c1,2) N
(< 10229 2006-09-02 17:02 /work/Umi2/spurzem/5/nbody6compare/nbint.f) N
(< nbody6compare/nbint.f) N
(---) N
(> 8753 2005-03-09 18:57 /work/Umi2/spurzem/5/nbody6++compare/nbint.f) N
(> nbody6++compare/nbint.f) N
(1c1) N
(<       SUBROUTINE NBINT\(I,IKS,IR,XI,XIDOT\)) N
(---) N
(>       SUBROUTINE NBINT\(I,NBFLAG\)) N
(9a10,11) N
(> *       Calculate potential with little extra cost.) N
(>       COMMON/POTENT/PHII\(NMAX\),PHIR\(NMAX\),PHIR1\(NMAX\)) N
(11a14,35) N
(>           IF\(NBFLAG.EQ.0\)THEN) N
(> *       Predict current state vector of body #I to order FDOT.) N
(>           S = TIME - T0\(I\)) N
(>           DO 11 K = 1,3) N
(>            X\(K,I\) = \(\(FDOT\(K,I\)*S + F\(K,I\)\)*S + X0DOT\(K,I\)\)*S + X0\(K,I\)) N
(OUT) (Page 146/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (73/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (147-148) 74
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>            XDOT\(K,I\) = \(3.0*FDOT\(K,I\)*S + 2.0*F\(K,I\)\)*S + X0DOT\(K,I\)) p n
(>    11     CONTINUE) N
(> *       Predict coordinates & velocities of neighbours to order FDOT \(R.Sp.\).) N
(>           NNB1 = LIST\(1,I\) + 1) N
(> *) N
(>           DO 1 L = 2,NNB1) N
(>               J = LIST\(L,I\)) N
(>               S = TIME - T0\(J\)) N
(>               S1 = 1.5*S) N
(>               S2 = 2.0*S) N
(>               X\(1,J\) = \(\(FDOT\(1,J\)*S + F\(1,J\)\)*S +X0DOT\(1,J\)\)*S +X0\(1,J\)) N
(>               X\(2,J\) = \(\(FDOT\(2,J\)*S + F\(2,J\)\)*S +X0DOT\(2,J\)\)*S +X0\(2,J\)) N
(>               X\(3,J\) = \(\(FDOT\(3,J\)*S + F\(3,J\)\)*S +X0DOT\(3,J\)\)*S +X0\(3,J\)) N
(>               XDOT\(1,J\) = \(FDOT\(1,J\)*S1 + F\(1,J\)\)*S2 + X0DOT\(1,J\)) N
(>               XDOT\(2,J\) = \(FDOT\(2,J\)*S1 + F\(2,J\)\)*S2 + X0DOT\(2,J\)) N
(>               XDOT\(3,J\) = \(FDOT\(3,J\)*S1 + F\(3,J\)\)*S2 + X0DOT\(3,J\)) N
(>    1      CONTINUE) N
(13,17d36) N
(< *       Check regularization criterion for single particles.) N
(<       IF \(STEP\(I\).LT.DTMIN.AND.I.LE.N\) THEN) N
(< *       See whether dominant body can be regularized.) N
(<           IF \(IKS.EQ.0\) THEN) N
(<               CALL SEARCH\(I,IKS\)) N
(19c38,40) N
(<       END IF) N
(---) N
(> *         call cputim\(tt2\)) N
(> *         ttpre = ttpre + \(tt2-tt1\)*60.) N
(> *         ttnbp = ttnbp + \(tt2-tt1\)*60.) N
(21,46c42) N
(< *       Include close encounter search for low-eccentric massive binaries.) N
(<       IF \(IKS.EQ.0.AND.STEP\(I\).LT.4.0*DTMIN\) THEN) N
(< *       Consider massive single bodies in absence of subsystems. ) N
(<           IF \(I.LE.N.AND.BODY\(I\).GT.2.0*BODYM.AND.NSUB.EQ.0\) THEN) N
(< *) N
(< *       Obtain two-body elements and relative perturbation.) N
(<               JMIN = 0) N
(<               CALL ORBIT\(I,JMIN,SEMI,ECC,GI\)) N
(< *) N
(<               EB = -0.5*BODY\(I\)*BODY\(JMIN\)/SEMI) N
(<               IF \(EB.LT.EBH.AND.GI.LT.0.25.AND.JMIN.GE.IFIRST\) THEN) N
(<                   APO = SEMI*\(1.0 + ECC\)) N
(< *       Check eccentricity \(cf. max perturbation\) and neighbour radius.) N
(<                   IF \(ECC.LT.0.5.AND.APO.LT.0.02*RS\(I\)\) THEN) N
(< *                     WRITE \(6,3\)  NAME\(I\), NAME\(JMIN\), ECC, SEMI, EB) N
(< *   3                 FORMAT \(' KS TRY:    NAM E A EB ',) N
(< *    &                                     2I6,F7.3,1P,2E10.2\)) N
(<                       IKS = IKS + 1) N
(<                       ICOMP = I) N
(<                       JCOMP = JMIN) N
(<                   END IF) N
(<               END IF) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       Obtain total force & first derivative.) N
(---) N
(> *       Obtain irregular force & first derivative.) N
(52a49,50) N
(>           PHII\(I\) = 0.D0) N
(>           NNB0 = LIST\(1,I\)) N
(55d52) N
(<       NNB0 = LIST\(1,I\)) N
(74,75d70) N
(<       I2 = 2*IPAIR) N
(<       I1 = I2 - 1) N
(78c73) N
(<       IF \(LIST\(1,I1\).GT.0\) THEN) N
(---) N
(OUT) (Page 147/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       IF \(GAMMA\(IPAIR\).GE.GMIN\) THEN) p n
(84,91d78) N
(< *       Copy c.m. coordinates & velocities for rare unperturbed intruder.) N
(<       DO 15 K = 1,3) N
(<           X\(K,I1\) = XI\(K\)) N
(<           X\(K,I2\) = XI\(K\)) N
(<           XDOT\(K,I1\) = XIDOT\(K\)) N
(<           XDOT\(K,I2\) = XIDOT\(K\)) N
(<    15 CONTINUE) N
(< *) N
(115d101) N
(< *) N
(118a105) N
(>           PHII\(I\) = PHII\(I\) - DR3I*RIJ2) N
(147d133) N
(< *         KDUM = 2*J - 1) N
(177a164,165) N
(> *       Note: in NBODY6++ CHFIRR and FCHAIN are called with IR=1 since) N
(> *             chain prediction and perturber list are updated in integrator.) N
(179c167) N
(<               CALL CHFIRR\(I,0,XI,XIDOT,FIRR,FD\)) N
(---) N
(>               CALL CHFIRR\(I,1,XI,XIDOT,FIRR,FD\)) N
(186c174) N
(<                       CALL FCHAIN\(I,0,XI,XIDOT,FIRR,FD\)) N
(---) N
(>                       CALL FCHAIN\(I,1,XI,XIDOT,FIRR,FD\)) N
(190c178) N
(<       END IF ) N
(---) N
(>       END IF) N
(197c185) N
(<           CALL XTRNLF\(XI,XIDOT,FIRR,FREG,FD,FDUM,0\)) N
(---) N
(>           CALL XTRNLF\(I,XI,XIDOT,FIRR,FREG,FD,FDUM,0\)) N
(200c188) N
(< *       Include the corrector and set new T0, F, FDOT, D1, D2 & D3.) N
(---) N
(> *       Include the corrector and set new F, FDOT, D1, D2 & D3.) N
(203,204c191,192) N
(<       DT6 = 6.0D0/\(DT*DTSQ\)) N
(<       DT2 = 2.0D0/DTSQ) N
(---) N
(>       DT6 = 6.0/\(DT*DTSQ\)) N
(>       DT2 = 2.0/DTSQ) N
(207d194) N
(<       T0\(I\) = TIME) N
(213,220c200,204) N
(< ) S 8 T (  AT3 = 2.0D0*DF + DT*SUM) N
(< ) S 8 T (  BT2 = -3.0D0*DF - DT*\(SUM + FID\)) N
(< *) N
(< ) S 8 T (  X0\(K,I\) = XI\(K\) + \(0.6D0*AT3 + BT2\)*DTSQ12) N
(< ) S 8 T (  X0DOT\(K,I\) = XIDOT\(K\) + \(0.75D0*AT3 + BT2\)*DT13) N
(< *) N
(< *         X0\(K,I\) = X\(K,I\)) N
(< *         X0DOT\(K,I\) = XDOT\(K,I\)) N
(---) N
(> ) S 8 T (  AT3 = 2.0*DF + DT*SUM) N
(> ) S 8 T (  BT2 = -3.0*DF - DT*\(SUM + FID\)) N
(> *       Use here new variables for consistency in parallel execution \(R.Sp.\)) N
(>           XN\(K,I\) = XI\(K\) + \(0.6*AT3 + BT2\)*DTSQ12) N
(>           XNDOT\(K,I\) = XIDOT\(K\) + \(0.75*AT3 + BT2\)*DT13) N
(222,223c206,207) N
(< ) S 8 T (  FI\(K,I\) = FIRR\(K\)) N
(< ) S 8 T (  FIDOT\(K,I\) = FD\(K\)) N
(---) N
(>       FI\(K,I\) = FIRR\(K\)) N
(>       FIDOT\(K,I\) = FD\(K\)) N
(227,230c211,212) N
(OUT) (Page 148/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (74/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (149-150) 75
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           D0\(K,I\) = FIRR\(K\)) p n
(<           D1\(K,I\) = FD\(K\)) N
(< ) S 8 T (  D2\(K,I\) = \(3.0D0*AT3 + BT2\)*DT2) N
(< ) S 8 T (  D3\(K,I\) = AT3*DT6) N
(---) N
(>           D2\(K,I\) = \(3.0*AT3 + BT2\)*DT2) N
(>           D3\(K,I\) = AT3*DT6) N
(232c214) N
(<    80 CONTINUE) N
(---) N
(>    80 continue) N
(235c217) N
(<       IF \(KZ\(37\).EQ.0\) THEN) N
(---) N
(>         IF \(KZ\(37\).EQ.0\) THEN) N
(237c219) N
(<       ELSE) N
(---) N
(>         ELSE) N
(239,244c221) N
(<       END IF) N
(< *) N
(< *       Check reduction by 1/sqrt\(2\) for soft binaries \(including triples\).) N
(<       IF \(TTMP.LT.10.0*DTMIN.AND.TTMP.GT.DTMIN\) THEN) N
(<           TTMP = 0.707*TTMP) N
(<       END IF) N
(---) N
(>         END IF) N
(246a224,243) N
(> *       Winston Sweatman's suggestion) N
(> *     DVV = \(XDOT\(1,I\)-X0DOT\(1,I\)\)**2 + \(XDOT\(2,I\)-X0DOT\(2,I\)\)**2 +) N
(> *    &     \(XDOT\(3,I\)-X0DOT\(3,I\)\)**2) N
(> *     FFD = FIRR\(1\)**2 + FIRR\(2\)**2 + FIRR\(3\)**2) N
(> *     ETAIW = ETAI) N
(> *     TTMPW = ETAIW*DVV*BODY\(I\)/FFD) N
(> *) N
(> *     PRINT*,' irr I=',I,' TTMP,TTMPW,RATIO=',) N
(> *    &  TTMP,TTMPW,TTMP/TTMPW) N
(> *) N
(> *     IF\(TTMP.GT.TTMPW\)THEN) N
(> *     IGT = IGT + 1) N
(> *     ELSE) N
(> *     ILE = ILE + 1) N
(> *     END IF) N
(> *     IF\(MOD\(IGT+ILE,100\).EQ.0\)PRINT*,' irr IGT,ILE=',IGT,ILE) N
(> *) N
(> *     TTMP = MAX\(TTMPW,TTMP\)) N
(> *     DT0 = TTMP) N
(> *) N
(257,269d253) N
(< *       Include convergence test for large step \(cf. Makino, Ap.J. 369, 200\).) N
(<       IF \(TTMP.GT.STEPJ.AND.N.GT.1000\) THEN) N
(<          DV2 = 0.0) N
(<          F2 = 0.0) N
(<          DO 85 K = 1,3) N
(<             DV2 = DV2 + \(XDOT\(K,I\) - X0DOT\(K,I\)\)**2) N
(<             F2 = F2 + FIRR\(K\)**2) N
(<    85    CONTINUE) N
(< *       Employ Jun's criterion to avoid over-shooting \(cf. Book, 2.16\).) N
(<          DTJ = STEP\(I\)*\(1.0D-06*STEP\(I\)**2*F2/DV2\)**0.1) N
(<          TTMP = MIN\(TTMP,DTJ\)) N
(<       END IF) N
(< *) N
(272,273c256,257) N
(<           IF \(DMOD\(TIME,2.0*STEP\(I\)\).EQ.0.0D0\) THEN ) N
(<               TTMP = MIN\(2.0*STEP\(I\),1.0D0\)) N
(---) N
(>           IF \(DMOD\(TIME,2.0*STEP\(I\)\).EQ.0.0D0\) THEN) N
(>               TTMP = MIN\(2.0*STEP\(I\),1.D0\)) N
(OUT) (Page 149/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(275c259) p n
(<               TTMP = STEP\(I\) ) N
(---) N
(>               TTMP = STEP\(I\)) N
(279,280c263,264) N
(<           IF \(TTMP.GT.DT0\) THEN) N
(<               TTMP = 0.5*TTMP) N
(---) N
(>             IF \(TTMP.GT.DT0\) THEN) N
(>                 TTMP = 0.5*TTMP) N
(286d269) N
(< *       Set new block step and update next time.) N
(288,319d270) N
(<       TIMENW\(I\) = STEP\(I\) + T0\(I\)) N
(< *) N
(< *       See whether any KS candidates are in the same block as body #I.) N
(<       IF \(IKS.GT.0.AND.I.EQ.ICOMP\) THEN) N
(< *       Accept same time, otherwise reduce STEP\(ICOMP\) and/or delay.) N
(<           IF \(T0\(JCOMP\).EQ.T0\(ICOMP\)\) THEN) N
(<               ICOMP = MIN\(ICOMP,JCOMP\)) N
(<               JCOMP = MAX\(I,JCOMP\)) N
(<           ELSE IF \(T0\(JCOMP\) + STEP\(JCOMP\).LT.T0\(ICOMP\)\) THEN) N
(<               STEP\(ICOMP\) = 0.5D0*STEP\(ICOMP\)) N
(<               TIMENW\(ICOMP\) = STEP\(ICOMP\) + T0\(ICOMP\)) N
(<               IKS = 0) N
(<           ELSE) N
(<               IKS = 0) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       See whether total force & derivative needs updating.) N
(<       IF \(IR.EQ.0\) THEN) N
(< *       Extrapolate regular force & first derivatives to obtain F & FDOT.) N
(<           DTR = TIME - T0R\(I\)) N
(<           DO 90 K = 1,3) N
(<               F\(K,I\) = 0.5D0*\(FRDOT\(K,I\)*DTR + FR\(K,I\) + FIRR\(K\)\)) N
(<               FDOT\(K,I\) = ONE6*\(FRDOT\(K,I\) + FD\(K\)\)) N
(<    90     CONTINUE) N
(<       END IF) N
(< *) N
(< *       Increase step counter and count perturbed c.m. steps.) N
(<       NSTEPI = NSTEPI + 1) N
(<       IF \(I.GT.N\) THEN) N
(<           IF \(LIST\(1,2*IPAIR-1\).GT.0\) NSTEPB = NSTEPB + 1) N
(<       END IF) N
(1,2c1,2) N
(< 3307 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nblist.f) N
(< nbody6compare/nblist.f) N
(---) N
(> 3173 2003-06-24 03:52 /work/Umi2/spurzem/5/nbody6++compare/nblist.f) N
(> nbody6++compare/nblist.f) N
(18,23c18) N
(< *       Note possible large RS0 set in routine MERGE at later times.) N
(<           IF \(TIME.EQ.0.0D0\) THEN) N
(<               RS2 = RS2*\(1.0 + RI2\)) N
(<           ELSE) N
(<               RS2 = \(0.3*RSCALE\)**2*\(1.0 + RI2\)) N
(<           END IF) N
(---) N
(>           RS2 = RS2*\(1.0 + RI2\)) N
(44c39,40) N
(<               IF \(TIME.LE.0.0D0.AND.J.LE.2*NBIN0\) GO TO 6) N
(---) N
(>               IF \(TIME.LE.0.0D0.AND.\(KZ\(8\).GT.0 .OR. NBIN0.GT.0\).AND.) N
(>      &            J.LE.2*NBIN0\) GO TO 6) N
(105a102) N
(> ) N
(1,2c1,2) N
(< 2624 2006-09-08 12:44 /work/Umi2/spurzem/5/nbody6compare/nbody6.f) N
(OUT) (Page 150/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (75/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (151-152) 76
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< nbody6compare/nbody6.f) p n
(---) N
(> 4712 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/nbody6.f) N
(> nbody6++compare/nbody6.f) N
(1,14c1,19) N
(< *) N
(< *             N B O D Y 6) N
(< *             ***********) N
(< *) N
(< *       Regularized AC N-body code with triple & binary collisions.) N
(< *       -----------------------------------------------------------) N
(< *) N
(< *       Hermite integration scheme with block-steps \(V 6.1.0 Sep/06\).) N
(< *       -------------------------------------------------------------) N
(< *) N
(< *       Developed by Sverre Aarseth, IOA, Cambridge.) N
(< *       ............................................) N
(< *) N
(<       PROGRAM NBODY6) N
(---) N
(> # 1 "nbody6.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "nbody6.F") N
(>         PROGRAM NBODY6) N
(> *) N
(> * N B O D Y 6++) N
(> * *************) N
(> *) N
(> * Regularized AC N-body code with triple & binary collisions.) N
(> * --------------------------------------------------------) N
(> *) N
(> * Hermite integration scheme with block-steps \(V 4.0.0 April/99\).) N
(> * ------------------------------------------------------------------) N
(> *) N
(> * Developed by Sverre Aarseth, IOA, Cambridge.) N
(> * ............................................) N
(> * Message Passing Version NBODY6++ for Massively Parallel Systems) N
(> * Developed by Rainer Spurzem, ARI, Heidelberg) N
(16a22) N
(>       COMMON/STSTAT/ TINIT,NIR,NIB,NRGL,NKS) N
(18a25,28) N
(> # 39 "nbody6.F") N
(> *) N
(> * Initialize the timer.) N
(>       CALL CPUTIM\(ttota\)) N
(20,21c30,32) N
(< *       Initialize the timer.) N
(<       CALL CPUTIM\(CPU0\)) N
(---) N
(> * Read start/restart indicator & CPU time.) N
(>       IF\(rank.eq.0\)READ \(5,*\) KSTART, TCOMP, TCRITp,) N
(>      * isernb,iserreg) N
(23,24c34) N
(< *       Read start/restart indicator & CPU time.) N
(<       READ \(5,*\)  KSTART, TCOMP) N
(---) N
(> # 58 "nbody6.F") N
(28c38) N
(< *       Read input parameters, perform initial setup and obtain output.) N
(---) N
(> * Read input parameters, perform initial setup and obtain output.) N
(30a41) N
(>           call cputim\(tt7\)) N
(31a43,44) N
(>           call cputim\(tt8\)) N
(>           ttadj = ttadj + \(tt8-tt7\)*60.) N
(34c47) N
(< *       Read previously saved COMMON variables from tape/disc on unit 1.) N
(OUT) (Page 151/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(---) p n
(> * Read previously saved COMMON variables from tape/disc on unit 1.) N
(35a49) N
(> *) N
(37c51) N
(< *       Safety indicator preventing repeated restarts set in routine CHECK.) N
(---) N
(> * Safety indicator preventing repeated restarts set in routine CHECK.) N
(40c54) N
(< *       Set IPHASE = -1 for new NLIST in routine INTGRT \(Hermite version\).) N
(---) N
(> * Set IPHASE = -1 for new NLIST in routine INTGRT \(Hermite version\).) N
(43,46c57,58) N
(< *       Initialize evolution parameters which depend on metallicity.) N
(<           IF \(KZ\(19\).GE.3\) THEN) N
(<               CALL ZCNSTS\(ZMET,ZPARS\)) N
(<           END IF) N
(---) N
(> * Initialize evolution parameters which depend on metallicity.) N
(>           CALL ZCNSTS\(ZMET,ZPARS\)) N
(48c60) N
(< *       Check reading modified restart parameters \(KSTART = 3, 4 or 5\).) N
(---) N
(> * Check reading modified restart parameters \(KSTART = 3, 4 or 5\).) N
(51a64,85) N
(> *) N
(> * Open all other files.) N
(>           CALL FILE_INIT\(0\)) N
(> *) N
(> * If no explicit new TCRIT given just go for another TCRIT of common block.) N
(>       TTOT = TIME + TOFF) N
(>       TCRIT = TTOT + TCRIT) N
(>       if\(rank.eq.0\)then) N
(>       WRITE \(6,10\) TTOT/TCR0, TIME/TCR0, TCRIT/TCR0, TTOT, TIME, TCRIT) N
(>       WRITE \(6,20\) DTADJ, DELTAT, TADJ, TNEXT, TCRIT, QE) N
(>       WRITE \(6,30\) ETAI, ETAR, ETAU, DTMIN, RMIN, NNBOPT) N
(>    10 FORMAT \(' START AT TTOT/TIME ',2F16.8,' STOP INTENDED AT ',) N
(>      & F16.8,' TCR0',/,' START AT TTOT/TIME ',2F16.8,) N
(>      & ' STOP INTENDED AT ',F16.8,' NBODY-UNITS ',/\)) N
(>    20 FORMAT \(/,7X,'RESTART PARAMETERS:   DTADJ =',F7.3,'  DELTAT =',) N
(>      & F7.3,'   TADJ =',F7.3,'   TNEXT =',) N
(>      & F7.3,'  TCRIT =',F7.1,'  QE =',1PE9.1\)) N
(>    30 FORMAT \(/,7X,'                      ETAI =',F7.3,'  ETAR =',) N
(>      & F7.3,'  ETAU =',F7.3,'  DTMIN =',1PE9.1,) N
(>      & '  RMIN =',E9.1,' NNBOPT =',I5,/\)) N
(>       end if) N
(> *) N
(54,55c88,104) N
(< *       Advance solutions until next output or change of procedure.) N
(<     1 CALL INTGRT) N
(---) N
(> * \(R.Sp.\)Set time flag and step number flags for beginning of run) N
(>       TINIT = TTOT) N
(>       NIR = NSTEPI) N
(>       NIB = NSTEPB) N
(>       NRGL = NSTEPR) N
(>       NKS = NSTEPU) N
(> *) N
(>       call cputim\(tt2\)) N
(>       ttinit = ttinit + \(tt2-ttota\)*60.) N
(> * Advance solutions until next output or change of procedure.) N
(>     1 CONTINUE) N
(>       call cputim\(tt1\)) N
(> *) N
(>       CALL INTGRT) N
(> *) N
(>       call cputim\(tt2\)) N
(>       ttint = ttint + \(tt2-tt1\)*60.) N
(58c107,108) N
(OUT) (Page 152/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (76/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (153-154) 77
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Prepare new KS regularization.) p n
(---) N
(> * Prepare new KS regularization.) N
(>       call cputim\(tt1\)) N
(59a110,112) N
(>           CALL FLUSH\(6\)) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(62c115,116) N
(< *       Terminate KS regularization.) N
(---) N
(> * Terminate KS regularization.) N
(>       call cputim\(tt1\)) N
(63a118,119) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(66c122,123) N
(< *       Perform energy check & parameter adjustments and print diagnostics.) N
(---) N
(> * Perform energy check & parameter adjustments and print diagnostics.) N
(>           call cputim\(tt7\)) N
(67a125,126) N
(>           call cputim\(tt8\)) N
(>           ttadj = ttadj + \(tt8-tt7\)*60.) N
(70c129,130) N
(< *       Switch to unperturbed three-body regularization.) N
(---) N
(> * Switch to unperturbed three-body regularization.) N
(>       call cputim\(tt1\)) N
(72a133,134) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(75c137,138) N
(< *       Switch to unperturbed four-body regularization.) N
(---) N
(> * Switch to unperturbed four-body regularization.) N
(>       call cputim\(tt1\)) N
(77a141,142) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(79c144) N
(< *       Adopt c.m. approximation for inner binary in hierarchical triple.) N
(---) N
(> * Adopt c.m. approximation for inner binary in hierarchical triple.) N
(80a146) N
(>       call cputim\(tt1\)) N
(81a148,149) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(84c152,153) N
(< *       Restore old binary in hierarchical configuration.) N
(---) N
(> * Restore old binary in hierarchical configuration.) N
(>       call cputim\(tt1\)) N
(85a155,156) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(87c158) N
(< *       Begin chain regularization.) N
(---) N
(> * Begin chain regularization.) N
(88a160) N
(>       call cputim\(tt1\)) N
(90a163,164) N
(>       call cputim\(tt2\)) N
(>       ttks = ttks + \(tt2-tt1\)*60.) N
(93c167) N
(< *       Continue integration.) N
(---) N
(OUT) (Page 153/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> * Continue integration.) p n
(1,2c1,2) N
(< 1565 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nbpot.f) N
(< nbody6compare/nbpot.f) N
(---) N
(> 1565 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/nbpot.f) N
(> nbody6++compare/nbpot.f) N
(1,2c1,2) N
(< 1773 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nbrem.f) N
(< nbody6compare/nbrem.f) N
(---) N
(> 1772 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/nbrem.f) N
(> nbody6++compare/nbrem.f) N
(12c12) N
(<           I = JPERT\(LL\) ) N
(---) N
(>           I = JPERT\(LL\)) N
(1,2c1,2) N
(< 1734 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nbrest.f) N
(< nbody6compare/nbrest.f) N
(---) N
(> 1698 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/nbrest.f) N
(> nbody6++compare/nbrest.f) N
(12c12) N
(<           I = JPERT\(LL\) ) N
(---) N
(>           I = JPERT\(LL\)) N
(14d13) N
(<           IF \(NNB1.EQ.1\) GO TO 100) N
(1,2c1,2) N
(< 3451 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nbsort.f) N
(< nbody6compare/nbsort.f) N
(---) N
(> 3689 2000-08-01 14:02 /work/Umi2/spurzem/5/nbody6++compare/nbsort.f) N
(> nbody6++compare/nbsort.f) N
(8c8) N
(<       INTEGER  IBL\(LMAX\),NBLIST\(NMAX\),LP\(NMAX\)) N
(---) N
(>       INTEGER  IBL\(NMAX\),NBLIST\(NMAX\),LP\(NMAX\)) N
(53a54,59) N
(> *     IF\(NNB.EQ.0\)THEN) N
(> *     PRINT*,' NBLIST L, IBL\(1\), IBL\(L\), NBL=',) N
(> *    *   L, IBL\(1\), IBL\(L\), NBL) N
(> *     PRINT*,' IFIRST,N,LIST\(1,I\),STEP=',IFIRST,N,LIST\(1,I\),STEP\(I\)) N
(> *     PRINT*,' N,M,X=',NAME\(I\),BODY\(I\),\(X\(K,I\),K=1,3\)) N
(> *     END IF) N
(61c67) N
(<           INC = \(NBLIST\(IG\) - I\)*FAC) N
(---) N
(> *         INC = \(NBLIST\(IG\) - I\)*FAC) N
(1,2c1,2) N
(< 3044 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nbtide.f) N
(< nbody6compare/nbtide.f) N
(---) N
(> 3044 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/nbtide.f) N
(> nbody6++compare/nbtide.f) N
(1,2c1,2) N
(< 2957 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/newreg.f) N
(< nbody6compare/newreg.f) N
(---) N
(> 2957 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/newreg.f) N
(> nbody6++compare/newreg.f) N
(1,2c1,2) N
(< 891 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/newsys.f) N
(< nbody6compare/newsys.f) N
(---) N
(> 891 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/newsys.f) N
(> nbody6++compare/newsys.f) N
(8c8) N
(OUT) (Page 154/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (77/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (155-156) 78
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       REAL*8  M\(*\),X\(*\),XD\(*\)) p n
(---) N
(>       REAL*8  M\(1\),X\(1\),XD\(1\)) N
(1,2c1,2) N
(< 1311 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/nlmod.f) N
(< nbody6compare/nlmod.f) N
(---) N
(> 1312 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/nlmod.f) N
(> nbody6++compare/nlmod.f) N
(0a1) N
(> ) N
(file /work/Umi2/spurzem/5/nbody6++compare/ntint.f does not exist) N
(1,2c1,2) N
(< 1400 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/offset.f) N
(< nbody6compare/offset.f) N
(---) N
(> 1160 2001-08-23 22:24 /work/Umi2/spurzem/5/nbody6++compare/offset.f) N
(> nbody6++compare/offset.f) N
(39,46d38) N
(< *       Check tidal tail members \(note TIMENW also needs doing\).) N
(<       IF \(NTAIL.GT.0\) THEN) N
(<           DO 30 I = ITAIL0,NTTOT) N
(<               T0\(I\) = T0\(I\) - DTOFF) N
(<               TIMENW\(I\) = TIMENW\(I\) - DTOFF) N
(<    30     CONTINUE) N
(<       END IF) N
(< *) N
(48c40) N
(<       IF \(TIME.GE.DTOFF\) GO TO 1) N
(---) N
(>       IF \(TIME.GE.TOFF\) GO TO 1) N
(1,2c1,2) N
(< 1530 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/orbit.f) N
(< nbody6compare/orbit.f) N
(---) N
(> 2422 2005-03-09 15:28 /work/Umi2/spurzem/5/nbody6++compare/orbit.f) N
(> nbody6++compare/orbit.f) N
(8a9,15) N
(> *       Predict current state vector of body #I to order FDOT. \(R.Sp.\)) N
(>           S = TIME - T0\(I\)) N
(>           DO 11 K = 1,3) N
(>               X\(K,I\) = \(\(FDOT\(K,I\)*S + F\(K,I\)\)*S + X0DOT\(K,I\)\)*S +) N
(>      &                                                           X0\(K,I\)) N
(>               XDOT\(K,I\) = \(3.0*FDOT\(K,I\)*S + 2.0*F\(K,I\)\)*S + X0DOT\(K,I\)) N
(>    11     CONTINUE) N
(20a28,31) N
(> *        Predict coordinate \(R.Sp.\)) N
(>           S = TIME - T0\(JJ\)) N
(>           X\(K,JJ\) = \(\(FDOT\(K,JJ\)*S + F\(K,JJ\)\)*S + X0DOT\(K,JJ\)\)*S +) N
(>      &                                                         X0\(K,JJ\)) N
(24c35) N
(< *       Exclude any c.m. bodies from dominant motion.) N
(---) N
(> *       Exclude any c.m. bodies from dominant motion \() N
(30,31d40) N
(< *       Avoid rare case of halo orbit with zero neighbour number.) N
(<           IF \(JM.EQ.I\) JM = I - 1) N
(43a53,57) N
(> *       Prediction \(R.Sp.\)) N
(>           S = TIME - T0\(J\)) N
(>           X\(K,J\) = \(\(FDOT\(K,J\)*S + F\(K,J\)\)*S + X0DOT\(K,J\)\)*S +) N
(>      &                                                         X0\(K,J\)) N
(>           XDOT\(K,J\) = \(3.0*FDOT\(K,J\)*S + 2.0*F\(K,J\)\)*S + X0DOT\(K,J\)) N
(53a68,72) N
(>       IF \(J.LT.IFIRST.AND.TIME.GT.0.D0\) THEN) N
(>       WRITE \(6,10\)  I,J,IFIRST,N,\(LIST\(K,I\),K=2,NNB+1\)) N
(>    10 FORMAT \(' DANGER!   I J I* N LIST   ',4I5,2X,20\(15I5,/\)\)) N
(>       END IF) N
(> *) N
(OUT) (Page 155/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(56a76) p n
(> ) N
(1,2c1,2) N
(< 15465 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/output.f) N
(< nbody6compare/output.f) N
(---) N
(> 12100 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/output.f) N
(> nbody6++compare/output.f) N
(0a1,4) N
(> # 1 "output.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "output.F") N
(4,5c8,9) N
(< *       Output and data save.) N
(< *       ---------------------) N
(---) N
(> * Output and data save.) N
(> * ---------------------) N
(8,22c12,23) N
(<       COMMON/BINARY/  CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(<       COMMON/GALAXY/  GMG,RG\(3\),VG\(3\),FG\(3\),FGD\(3\),TG,) N
(<      &                OMEGA,DISK,A,B,V02,RL2) N
(<       COMMON/ECHAIN/  ECH) N
(<       REAL*8  X1\(3,4\),V1\(3,4\),UI\(4\),VI\(4\),XREL2\(3\),VREL2\(3\)) N
(<       REAL*4  XS\(3,NMAX\),VS\(3,NMAX\),BODYS\(NMAX\),AS\(20\)) N
(<       REAL*4  XJ\(3,6\),VJ\(3,6\),BODYJ\(6\)) N
(<       LOGICAL  FIRST,SECOND,THIRD) N
(<       SAVE  FIRST,SECOND,THIRD) N
(<       DATA  FIRST,SECOND ,THIRD/.TRUE.,.TRUE.,.TRUE./) N
(< *) N
(< *) N
(< *       Obtain energy error in case routine ADJUST not called recently.) N
(---) N
(>       COMMON/BINARY/ CM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(>      & HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(>      & NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(>       COMMON/ECHAIN/ ECH) N
(>       REAL*8 X1\(3,4\),V1\(3,4\),UI\(4\),VI\(4\),XREL2\(3\),VREL2\(3\)) N
(>       REAL*4 XS\(3,NMAX\),VS\(3,NMAX\),BODYS\(NMAX\),RHOS\(NMAX\),AS\(20\)) N
(>       REAL*4 XJ\(3,6\),VJ\(3,6\),BODYJ\(6\)) N
(>       REAL*4 XNS\(NMAX\),PHI\(NMAX\)) N
(> *) N
(> * Call Computation of Moments of Inertia \(with Chr. Theis\)) N
(>           IF\(KZ\(39\).EQ.2\)CALL ELLAN) N
(> * Obtain energy error in case routine ADJUST not called recently.) N
(25c26) N
(< *       Predict X & XDOT for all particles \(except unperturbed pairs\).) N
(---) N
(> * Predict X & XDOT for all particles \(except unperturbed pairs\).) N
(28c29,32) N
(< *       Obtain the total energy at current time \(resolve all KS pairs\).) N
(---) N
(> * Obtain the total energy at current time \(resolve all KS pairs\).) N
(> ) N
(> ) N
(> ) N
(29a34) N
(> ) N
(31c36) N
(< *       Include KS pairs, triple, quad, mergers, collisions & chain.) N
(---) N
(> * Include KS pairs, triple, quad, mergers, collisions & chain.) N
(33c38) N
(<      &                                                         + ECDOT) N
(---) N
(>      & + ECDOT) N
(OUT) (Page 156/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (78/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (157-158) 79
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(38c43) p n
(< *       Update energies and form the relative error \(divide by ZKIN or ETOT\).) N
(---) N
(> * Update energies and form the relative error \(divide by ZKIN or ETOT\).) N
(44c49) N
(< *       Save sum of relative energy error for main output and accumulate DE.) N
(---) N
(> * Save sum of relative energy error for main output and accumulate DE.) N
(47c52) N
(< *       Find density centre & core radius \(Casertano & Hut, Ap.J. 298, 80\).) N
(---) N
(> * Find density centre & core radius \(Casertano & Hut, Ap.J. 298, 80\).) N
(52c57) N
(< *       Check optional sorting of Lagrangian radii & half-mass radius.) N
(---) N
(> * Check optional sorting of Lagrangian radii & half-mass radius.) N
(57c62) N
(< *       Initialize diagnostic variables.) N
(---) N
(> * Initialize diagnostic variables.) N
(63c68) N
(< *       Find smallest semi-major axis and count unperturbed KS pairs.) N
(---) N
(> * Find smallest semi-major axis and count unperturbed KS pairs.) N
(72c77) N
(< *       Perform time-step & neighbour statistics \(NS is # single stars\).) N
(---) N
(> * Perform time-step & neighbour statistics \(NS is # single stars\).) N
(84,85c89,90) N
(<           RHO = LIST\(1,I\)/RS\(I\)**3) N
(<           CMAX = MAX\(CMAX,RHO\)) N
(---) N
(>           RHON = LIST\(1,I\)/RS\(I\)**3) N
(>           CMAX = MAX\(CMAX,RHON\)) N
(92c97) N
(< *       Estimate relative cost & effective neighbour number of AC scheme.) N
(---) N
(> * Estimate relative cost & effective neighbour number of AC scheme.) N
(95c100) N
(< *       Scale maximum particle density contrast by the mean value.) N
(---) N
(> * Scale maximum particle density contrast by the mean value.) N
(98c103) N
(< *       Set average neighbour number & density centre displacement.) N
(---) N
(> * Set average neighbour number & density centre displacement.) N
(102c107) N
(< *       Check print frequency indicator & optional model counter.) N
(---) N
(> * Check print frequency indicator & optional model counter.) N
(109c114) N
(< *       Form binary & merger energy ratios.) N
(---) N
(> * Form binary & merger energy ratios.) N
(113c118) N
(< *       Print main output diagnostics.) N
(---) N
(> * Print main output diagnostics.) N
(116,121c121,128) N
(<       WRITE \(6,40\)  TTOT, N, NNB, NPAIRS, NMERGE, MULT, NS, NSTEPI,) N
(<      &              NSTEPB, NSTEPR, NSTEPU, ERROR, BE\(3\)) N
(<    40 FORMAT \(//,' T =',F7.1,'  N =',I6,'  <NB> =',I3,'  KS =',I5,) N
(<      &           '  NM =',I3,'  MM =',I2,'  NS =',I6,) N
(<      &           '  NSTEPS =',I11,2I10,I11,'  DE =',1P,E9.1,) N
(<      &           '  E =',0P,F10.6\)) N
(---) N
(>       IF\(rank.EQ.0\)THEN) N
(>       WRITE \(6,40\) rank,) N
(>      & TTOT, N, NNB, NPAIRS, NMERGE, MULT, NS, NSTEPI, NSTEPB,) N
(OUT) (Page 157/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      & NSTEPR, NSTEPU, ERROR, BE\(3\)) p n
(>    40 FORMAT \() N
(>      & '  NM =',I2,' MM =',I2,' NS =',I6,' NSTEPS =',) N
(>      & I11,2I10,I11,'  DE =',E15.6,'  E =',F17.6\)) N
(>       END IF) N
(124c131,132) N
(<           CALL CPUTIM\(TCOMP\)) N
(---) N
(>           CALL CPUTIM\(ttotb\)) N
(>                   TCOMP = ttotb-ttota) N
(130,134c138,144) N
(<           WRITE \(6,45\)  NRUN, MODEL, TCOMP, TRC, DMIN1, DMIN2, DMIN3,) N
(<      &                  DMIN4, AMIN, RMAX, RSMIN, NEFF) N
(<    45     FORMAT \(/,' NRUN =',I3,'  M# =',I3,'  CPU =',F8.1,'  TRC =',) N
(<      &                        F5.1, '  DMIN =',1P,4E8.1,'  AMIN =',E8.1,) N
(<      &                '  RMAX =',E8.1,'  RSMIN =',0P,F5.2,'  NEFF =',I6\)) N
(---) N
(>       IF\(rank.EQ.0\)THEN) N
(>           WRITE \(6,45\) NRUN, MODEL, TCOMP, TRC, DMIN1, DMIN2, DMIN3,) N
(>      & DMIN4, AMIN, RMAX, RSMIN, NEFF) N
(>    45 FORMAT \(/,' NRUN =',I3,'  M# =',I3,'  CPU =',1P,E12.5,0P,) N
(>      & '  TRC =',F5.1, '  DMIN =',1P,4E8.1,'  AMIN =',E8.1,) N
(>      & '  RMAX =',E8.1,'  RSMIN =',0P,F5.2,'  NEFF =',I6\)) N
(>       END IF) N
(136a147) N
(>       IF\(rank.EQ.0\)THEN) N
(138,146c149,157) N
(<    50 FORMAT \(/,'    <R>  RTIDE  RDENS   RC    NC   MC   RHOD   RHOM',) N
(<      &                    '  CMAX   <Cn>  Ir/R   UN   NP    RCM    VCM',) N
(<      &                       '         AZ     EB/E   EM/E   TCR     T6'\)) N
(< *) N
(<       WRITE \(6,55\)  RSCALE, RTIDE, RD, RC, NC, ZMC, RHOD, RHOM, CMAX,) N
(<      &              CNNB, COST, IUNP, NP, CMR\(4\), CMRDOT\(4\), AZ, EB, EM,) N
(<      &              TCR, I6) N
(<    55 FORMAT \(' #1',F5.2,F6.1,F7.2,F6.2,I5,F7.3,F6.0,F7.0,F6.0,F6.1,) N
(<      &                           F6.2,2I5,F9.3,F8.4,F11.6,2F7.2,F6.2,I6\)) N
(---) N
(>    50 FORMAT \(/,'    <R>  RTIDE  RDENS   RC      NC   MC   RHOD   RHOM',) N
(>      & '  CMAX   <Cn>  Ir/R    UN    NP    RCM    VCM',) N
(>      & '         AZ     EB/E   EM/E   TCR     T6'\)) N
(> *) N
(>       WRITE \(6,55\) RSCALE, RTIDE, RD, RC, NC, ZMC, RHOD, RHOM, CMAX,) N
(>      & CNNB, COST, IUNP, NP, CMR\(4\), CMRDOT\(4\), AZ, EB, EM,) N
(>      & TCR, I6) N
(>    55 FORMAT \(' #1',F5.2,F6.1,F7.2,F6.2,I7,F7.3,F6.0,F7.0,F6.0,F6.1,) N
(>      & F6.2,2I6,F9.3,F8.4,F11.6,2F7.3,F6.2,I6\)) N
(150,155c161,166) N
(<      &         '    NICONV  NBSMIN  NBDIS  NBDIS2  NCMDER  NBDER',) N
(<      &           '  NFAST  NBFAST    NBLOCK     NBPRED     NBFLUX'\)) N
(<       WRITE \(6,65\)  NNPRED, NBCORR, NBFULL, NBVOID, NRCONV, NICONV,) N
(<      &              NBSMIN, NBDIS, NBDIS2, NCMDER, NBDER, NFAST,) N
(<      &              NBFAST, NBLOCK, NBPRED, NBFLUX) N
(<    65 FORMAT \(' #2',I10,I10,3I8,I10,I8,I7,2I8,2I7,I8,I10,2I11\)) N
(---) N
(>      & '    NICONV  NBSMIN  NBDIS  NBDIS2  NCMDER  NBDER',) N
(>      & '  NFAST  NBFAST    NBLOCK     NBPRED'\)) N
(>       WRITE \(6,65\) NNPRED, NBCORR, NBFULL, NBVOID, NRCONV, NICONV,) N
(>      & NBSMIN, NBDIS, NBDIS2, NCMDER, NBDER, NFAST,) N
(>      & NBFAST, NBLOCK, NBPRED) N
(>    65 FORMAT \(' #2',I10,I10,3I8,I10,I8,I7,2I8,2I7,I8,I10,I11\)) N
(158,164c169,176) N
(<    70 FORMAT \(/,5X,'NKSTRY  NKSREG  NKSHYP     NKSPER  NPRECT  NMARG ',) N
(<      &           '  NKSMOD    NTTRY  NTRIP  NQUAD  NCHAIN  NMERG',) N
(<      &           '  NEWHI  NSTEPT  NSTEPQ  NSTEPC'\)) N
(<       WRITE \(6,75\)  NKSTRY, NKSREG,  NKSHYP, NKSPER, NPRECT, NMARG,) N
(<      &              NKSMOD, NTTRY, NTRIP, NQUAD, NCHAIN, NMERG, NEWHI,) N
(<      &              NSTEPT, NSTEPQ, NSTEPC) N
(<    75 FORMAT \(' #3',I9,I7,I8,I11,3I8,I9,2I7,I8,2I7,3I8\)) N
(---) N
(OUT) (Page 158/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (79/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (159-160) 80
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>    70 FORMAT \(/,5X,'NKSTRY  NKSREG  NKSHYP     NKSPER  NPRECT  NKSREF',) p n
(>      & '  NKSMOD  NTTRY  NTRIP  NQUAD  NCHAIN  NMERG',) N
(>      & '  NSTEPT  NSTEPQ  NSTEPC    NBLCKR    NBFLUX'\)) N
(>       WRITE \(6,75\) NKSTRY, NKSREG, NKSHYP, NKSPER, NPRECT, NKSREF,) N
(>      & NKSMOD, NTTRY, NTRIP, NQUAD, NCHAIN, NMERG,) N
(>      & NSTEPT, NSTEPQ, NSTEPC, NBLCKR, NBFLUX) N
(>    75 FORMAT \(' #3',3I8,I11,3I8,3I7,I8,I7,3I8,2I10\)) N
(>       END IF) N
(166c178) N
(< *       Check output for mass loss or tidal capture.) N
(---) N
(> * Check output for mass loss or tidal capture.) N
(171,187c183) N
(< *       Obtain half-mass radii for two groups \(NAME <= NZERO/5 & > NZERO/5\).) N
(<       IF \(KZ\(7\).EQ.6.AND.TTOT.GE.TCRIT.AND.BODY1.GT.2.0*BODYM\) THEN) N
(<           CALL LAGR2\(RDENS\)) N
(<       END IF) N
(< *) N
(< *       Include diagnostics about cluster orbit in general external field.) N
(<       IF \(KZ\(14\).EQ.3\) THEN) N
(<           GZ = RG\(1\)*VG\(2\) - RG\(2\)*VG\(1\)) N
(<           SX = RBAR/1000.0) N
(<           WRITE \(6,80\)  NTAIL, NSTAIL, \(RG\(K\)*SX,K=1,3\),) N
(<      &                                 \(VG\(K\)*VSTAR,K=1,3\),) N
(<      &                  GZ, ETIDE) N
(<    80     FORMAT \(/,5X,'CLUSTER ORBIT    NT NST RG VG JZ ET ',) N
(<      &                              I5,I8,3F7.2,2X,3F7.1,1P,E16.8,E10.2\)) N
(<       END IF) N
(< *) N
(< *       Reset minimum encounter distances & maximum apocentre separation.) N
(---) N
(> * Reset minimum encounter distances & maximum apocentre separation.) N
(195,196c191,192) N
(< *       Check integer overflows \(2^{32} or 2.1 billion\).) N
(<       IF \(NSTEPI.GT.2000000000.OR.NSTEPI.LT.0\) THEN) N
(---) N
(> * Check integer overflows \(2^{32} or 2.1 billion\).) N
(>       IF \(NSTEPI.GT.2000000000\) THEN) N
(199c195) N
(<       IF \(NSTEPU.GT.2000000000.OR.NSTEPU.LT.0\) THEN) N
(---) N
(>       IF \(NSTEPU.GT.2000000000\) THEN) N
(202c198) N
(<       IF \(NBPRED.GT.2000000000.OR.NBPRED.LT.0\) THEN) N
(---) N
(>       IF \(NBPRED.GT.2000000000\) THEN) N
(205,207d200) N
(<       IF \(NBFLUX.GT.2000000000.OR.NBFLUX.LT.0\) THEN) N
(<           NBFLUX = 0) N
(<       END IF) N
(209c202) N
(< *       Ensure NLIST does not become large for block-step version.) N
(---) N
(> * Ensure NLIST does not become large for block-step version.) N
(212c205) N
(< *       Exit if error exceeds restart tolerance \(TIME < TADJ means no CHECK\).) N
(---) N
(> * Exit if error exceeds restart tolerance \(TIME < TADJ means no CHECK\).) N
(215,216c208,209) N
(< *       Check optional analysis & output of KS binaries.) N
(<       IF \(KZ\(8\).GT.0.AND.NPAIRS.GT.0\) THEN) N
(---) N
(> * Check optional analysis & output of KS binaries.) N
(>       IF \(\(KZ\(8\).GT.0 .OR. NBIN0.GT.0\) .AND.NPAIRS.GT.0\) THEN) N
(220c213) N
(< *       Include optional diagnostics of block-steps.) N
(---) N
(> * Include optional diagnostics of block-steps.) N
(225c218) N
(OUT) (Page 159/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Check optional output of single bodies & binaries.) p n
(---) N
(> * Check optional output of single bodies & binaries.) N
(228,229c221,222) N
(< *       See whether to write data bank of binary diagnostics on unit 9.) N
(<       IF \(KZ\(8\).GE.2.AND.NPAIRS.GT.0\) THEN) N
(---) N
(> * See whether to write data bank of binary diagnostics on unit 9.) N
(>       IF \(\(KZ\(8\).GE.2 .OR. NBIN0.GT.0\) .AND.NPAIRS.GT.0\) THEN) N
(236c229) N
(< *       Check optional diagnostics of evolving stars.) N
(---) N
(> * Check optional diagnostics of evolving stars.) N
(237a231,237) N
(> * Update stellar evolution) N
(>               IF \(KZ\(19\).GE.3\) THEN) N
(>                   CALL MDOT) N
(>               ELSE) N
(>                   CALL MLOSS) N
(>               END IF) N
(> *) N
(238a239,240) N
(> * Update next output time.) N
(>           TPLOT = TPLOT + DTPLOT) N
(241c243) N
(< *       Check optional writing of data on unit 3 \(frequency NFIX\). ) N
(---) N
(> * Check optional writing of data on unit 3 \(frequency NFIX\).) N
(243d244) N
(<       IF \(KZ\(3\).GT.2.AND.KZ\(3\).NE.5\) GO TO 99) N
(245,264c246,249) N
(<       AS\(1\) = TTOT) N
(<       AS\(2\) = FLOAT\(NPAIRS\)) N
(<       AS\(3\) = RBAR) N
(<       AS\(4\) = ZMBAR) N
(<       AS\(5\) = RTIDE) N
(<       AS\(6\) = TIDAL\(4\)) N
(<       AS\(7\) = RDENS\(1\)) N
(<       AS\(8\) = RDENS\(2\)) N
(<       AS\(9\) = RDENS\(3\)) N
(<       AS\(10\) = TTOT/TCR) N
(<       AS\(11\) = TSCALE) N
(<       AS\(12\) = VSTAR) N
(<       AS\(13\) = RC) N
(<       AS\(14\) = NC) N
(<       AS\(15\) = VC) N
(<       AS\(16\) = RHOM) N
(<       AS\(17\) = CMAX) N
(<       AS\(18\) = RSCALE) N
(<       AS\(19\) = RSMIN) N
(<       AS\(20\) = DMIN1) N
(---) N
(>       DO 80 IPAIR = 1,NPAIRS) N
(>           RHO\(2*IPAIR-1\) = RHO\(N+IPAIR\)) N
(>           RHO\(2*IPAIR\) = RHO\(N+IPAIR\)) N
(>  80 CONTINUE) N
(266c251) N
(< *       Convert masses, coordinates & velocities to single precision.) N
(---) N
(> * Convert masses, coordinates & velocities to single precision.) N
(268a254,256) N
(>           RHOS\(I\) = RHO\(I\)) N
(>           XNS\(I\) = XNDBL\(I\)) N
(>           PHI\(I\) = PHIDBL\(I\)) N
(272c260) N
(<    85     CONTINUE) N
(---) N
(>    85 CONTINUE) N
(275c263) N
(OUT) (Page 160/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (80/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (161-162) 81
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Replace any ghosts by actual M, R & V \(including 2 binaries\).) p n
(---) N
(> * Replace any ghosts by actual M, R & V \(including 2 binaries\).) N
(280c268) N
(< *       Determine merger & ghost index for negative c.m. name.) N
(---) N
(> * Determine merger & ghost index for negative c.m. name.) N
(283c271) N
(< *       Note: J is ghost index and IM is merger index.) N
(---) N
(> * Note: J is ghost index and IM is merger index.) N
(288c276) N
(< *       Form global coordinates and velocities from c.m. with XREL & VREL.) N
(---) N
(> * Form global coordinates and velocities from c.m. with XREL & VREL.) N
(296c284) N
(<                   XS\(K,J\)  = X1\(K,2\)) N
(---) N
(>                   XS\(K,J\) = X1\(K,2\)) N
(298c286) N
(<                   VS\(K,J\)  = V1\(K,2\)) N
(---) N
(>                   VS\(K,J\) = V1\(K,2\)) N
(300,301c288,289) N
(< *       Look for ghosts of possible second \(i.e. outer\) merged binary.) N
(<               IF \(NAME\(J\).GT.NZERO\) THEN) N
(---) N
(> * Look for ghosts of possible second \(i.e. outer\) merged binary.) N
(>               IF \(NAMEG\(J\).GT.NZERO\) THEN) N
(303,304c291,292) N
(<                   DO  JJ = N+1,NTOT ) N
(<                       IF \(NAME\(JJ\).EQ.NAME\(J\)\) ICM2 = JJ) N
(---) N
(>                   DO JJ = N+1,NTOT) N
(>                       IF \(NAME\(JJ\).EQ.NAMEG\(J\)\) ICM2 = JJ) N
(306c294) N
(< *       Treat the second binary using inactive KS variables.) N
(---) N
(> * Treat the second binary using inactive KS variables.) N
(313c301) N
(< *       Copy KS variables to local scalars.) N
(---) N
(> * Copy KS variables to local scalars.) N
(318c306) N
(< *       Transform to physical variables and multiply by 4 \(momentum formula\).) N
(---) N
(> * Transform to physical variables and multiply by 4 \(momentum formula\).) N
(329c317) N
(<                           XS\(K,I2\)  = X1\(K,4\)) N
(---) N
(>                           XS\(K,I2\) = X1\(K,4\)) N
(331c319) N
(<                           VS\(K,I2\)  = V1\(K,4\)) N
(---) N
(>                           VS\(K,I2\) = V1\(K,4\)) N
(340c328) N
(< *       Check modification for chain regularization \(case NAME\(ICM\) = 0\).) N
(---) N
(> * Check modification for chain regularization \(case NAME\(ICM\) = 0\).) N
(344c332) N
(< *       Copy global address from common JLIST \(set in CHDATA\).) N
(---) N
(> * Copy global address from common JLIST \(set in CHDATA\).) N
(350,351c338,339) N
(<    97         CONTINUE) N
(<    98     CONTINUE) N
(---) N
(>    97 CONTINUE) N
(>    98 CONTINUE) N
(OUT) (Page 161/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(354,431c342,376) p n
(< *       Split into WRITE \(3\) NTOT & WRITE \(3\) ..  if disc instead of tape.) N
(<       IF \(FIRST\) THEN) N
(<           OPEN \(UNIT=3,STATUS='NEW',FORM='UNFORMATTED',FILE='OUT3'\)) N
(<           FIRST = .FALSE.) N
(<       END IF) N
(<       NK = 20) N
(<       WRITE \(3\)  NTOT, MODEL, NRUN, NK) N
(<       WRITE \(3\)  \(AS\(K\),K=1,NK\), \(BODYS\(J\),J=1,NTOT\),) N
(<      &           \(\(XS\(K,J\),K=1,3\),J=1,NTOT\), \(\(VS\(K,J\),K=1,3\),J=1,NTOT\),) N
(<      &           \(NAME\(J\),J=1,NTOT\)) N
(< *     CLOSE \(UNIT=3\)) N
(< *) N
(< *       Produce output file for tidal tail members.) N
(<    99 IF \(KZ\(3\).LE.3.AND.NTAIL.GT.0\) THEN) N
(<           IF \(SECOND\) THEN) N
(<              OPEN \(UNIT=33,STATUS='NEW',FORM='UNFORMATTED',FILE='OUT33'\)) N
(<              SECOND = .FALSE.) N
(<           END IF) N
(<           DO 110 I = ITAIL0,NTTOT) N
(<               BODYS\(I\) = BODY\(I\)) N
(<               DO 105 K = 1,3) N
(<                   XS\(K,I\) = X\(K,I\) - RG\(K\)) N
(<                   VS\(K,I\) = XDOT\(K,I\) - VG\(K\)) N
(<   105         CONTINUE) N
(<   110     CONTINUE) N
(< *       Include cluster centre just in case.) N
(<           DO 115 K = 1,3) N
(<               AS\(K\) = RG\(K\)) N
(<               AS\(K+3\) = VG\(K\)) N
(<               AS\(K+6\) = RDENS\(K\)) N
(<   115     CONTINUE) N
(<           AS\(10\) = TTOT) N
(<           AS\(11\) = RBAR) N
(<           AS\(12\) = TSCALE) N
(<           AS\(13\) = VSTAR) N
(<           NK = 13) N
(<           WRITE \(33\)  NTAIL, NK) N
(<           WRITE \(33\)  \(AS\(K\),K=1,NK\), \(BODYS\(J\),J=ITAIL0,NTTOT\),) N
(<      &                \(\(XS\(K,J\),K=1,3\),J=ITAIL0,NTTOT\),) N
(<      &                \(\(VS\(K,J\),K=1,3\),J=ITAIL0,NTTOT\),) N
(<      &                \(NAME\(J\),J=ITAIL0,NTTOT\)) N
(<       END IF) N
(< *) N
(< *       Include all stars in same file \(KZ\(3\) > 3; astrophysical units\). ) N
(<       IF \(KZ\(3\).GT.3.AND.NTAIL.GT.0\) THEN) N
(<           IF \(THIRD\) THEN) N
(<               OPEN \(UNIT=34,STATUS='NEW',FORM='FORMATTED',FILE='OUT34'\)) N
(<               THIRD = .FALSE.) N
(<           END IF) N
(<           NP = 0) N
(< *       Copy cluster members with respect to density centre.) N
(<           DO 120 I = IFIRST,NTOT) N
(<               IF \(BODY\(I\).LE.0.0D0\) GO TO 120) N
(<               NP = NP + 1) N
(<               DO 118 K = 1,3) N
(<                   XS\(K,NP\) = \(X\(K,I\) - RDENS\(K\)\)*RBAR) N
(<                   VS\(K,NP\) = XDOT\(K,I\)*VSTAR) N
(<   118         CONTINUE) N
(<               BODYS\(NP\) = BODY\(I\)*SMU) N
(<   120     CONTINUE) N
(<           N1 = NP) N
(< *       Add tidal tail in the same frame.) N
(<           DO 130 I = ITAIL0,NTTOT) N
(<               NP = NP + 1) N
(<               DO 125 K = 1,3) N
(<                   XS\(K,NP\) = \(X\(K,I\) - RG\(K\) - RDENS\(K\)\)*RBAR) N
(<                   VS\(K,NP\) = \(XDOT\(K,I\) - VG\(K\)\)*VSTAR) N
(<   125         CONTINUE) N
(OUT) (Page 162/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (81/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (163-164) 82
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               BODYS\(NP\) = BODY\(I\)*SMU) p n
(<   130     CONTINUE) N
(<           WRITE \(34,140\)  NP, N1, \(TIME+TOFF\)*TSCALE, RBAR, VSTAR,) N
(<      &                    \(RDENS\(K\),K=1,3\), \(RG\(K\),K=1,3\), \(VG\(K\),K=1,3\)) N
(<   140     FORMAT \(' ',2I6,F8.1,2F6.2,3F7.3,1P,6E10.2\)) N
(<           DO 150 I = 1,NP) N
(<               WRITE \(34,145\) \(XS\(K,I\),K=1,3\), \(VS\(K,I\),K=1,3\), BODYS\(I\)) N
(<   145         FORMAT \(' ',3F10.3,3F8.1,F7.2\)) N
(<   150     CONTINUE) N
(<       END IF) N
(---) N
(>           AS\(1\) = TTOT) N
(>           AS\(2\) = FLOAT\(NPAIRS\)) N
(>           AS\(3\) = RBAR) N
(>           AS\(4\) = ZMBAR) N
(>           AS\(5\) = RTIDE) N
(>           AS\(6\) = TIDAL\(4\)) N
(>           AS\(7\) = RDENS\(1\)) N
(>           AS\(8\) = RDENS\(2\)) N
(>           AS\(9\) = RDENS\(3\)) N
(>           AS\(10\) = TTOT/TCR0) N
(>           AS\(11\) = I6) N
(>           AS\(12\) = FLOAT\(NZERO\)) N
(>           AS\(13\) = RC) N
(>           AS\(14\) = NC) N
(>           AS\(15\) = VC) N
(>           AS\(16\) = RHOM) N
(>           AS\(17\) = CMAX) N
(>           AS\(18\) = RSCALE) N
(>           AS\(19\) = RSMIN) N
(>           AS\(20\) = DMIN1) N
(>           NK = 20) N
(> *) N
(> * Write all data in binary format on unit 3 = conf.3.) N
(> *) N
(> ) N
(> ) N
(> ) N
(>           WRITE \(3\) NTOT, MODEL, NRUN, NK) N
(>           WRITE \(3\) \(AS\(K\),K=1,NK\),) N
(>      & \(BODYS\(J\),J=1,NTOT\),\(RHOS\(J\),J=1,NTOT\),\(XNS\(J\),J=1,NTOT\),) N
(>      & \(\(XS\(K,J\),K=1,3\),J=1,NTOT\), \(\(VS\(K,J\),K=1,3\),J=1,NTOT\),) N
(>      & \(PHI\(J\),J=1,NTOT\),\(NAME\(J\),J=1,NTOT\)) N
(> ) N
(> ) N
(> ) N
(433c378) N
(< *       Update next output interval and initialize the corresponding error.) N
(---) N
(> * Update next output interval and initialize the corresponding error.) N
(1,2c1,2) N
(< 815 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/params.h) N
(< nbody6compare/params.h) N
(---) N
(> 1301 2005-03-09 17:47 /work/Umi2/spurzem/5/nbody6++compare/params.h) N
(> nbody6++compare/params.h) N
(4,5c4,13) N
(<       PARAMETER  \(NMAX=4010,KMAX=1010,LMAX=100,MMAX=10,) N
(<      &            MLD=22,MLR=22,MLV=10,MCL=10,NCMAX=10\)) N
(---) N
(>       PARAMETER  \(NMAX=140000,KMAX=5000,LMAX=128,MMAX=60,) N
(> *     PARAMETER  \(NMAX=50000,KMAX=50,LMAX=64,MMAX=60,) N
(> *     PARAMETER  \(NMAX=25000,KMAX=5000,LMAX=128,MMAX=60,) N
(> *     PARAMETER  \(NMAX=16384,KMAX=50,LMAX=64,MMAX=60,) N
(> *     PARAMETER  \(NMAX=10100,KMAX=3000,LMAX=256,MMAX=60,) N
(> *     PARAMETER  \(NMAX=5100,KMAX=2000,LMAX=256,MMAX=60,) N
(> *     PARAMETER  \(NMAX=1010,KMAX=50,LMAX=60,MMAX=1,) N
(>      &            MLD=60,MLR=60,MLV=60,MCL=1,NCMAX=10\)) N
(>       PARAMETER  \(ID=3\)) N
(OUT) (Page 163/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       parameter \(maxpe=1024\)) p n
(9c17) N
(< *       NMAX    Maximum number of single bodies + 3*NBIN + NHI.) N
(---) N
(> *       NMAX    Maximum number of single bodies & c.m.) N
(17c25) N
(< *       NCMAX   Maximum number of chain members \(do not change\).) N
(---) N
(> *       NCMAX   Maximum members of chain members.) N
(19c27,28) N
(< *) N
(---) N
(> *       ID      First dimension of 3d-vectors \(usually = 3\)) N
(> *               Has to be set to 4 on CRAY T3D for hardware reasons) N
(1,2c1,2) N
(< 1893 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/peri.f) N
(< nbody6compare/peri.f) N
(---) N
(> 1893 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/peri.f) N
(> nbody6++compare/peri.f) N
(1,2c1,2) N
(< 1526 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/permit.f) N
(< nbody6compare/permit.f) N
(---) N
(> 912 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/permit.f) N
(> nbody6++compare/permit.f) N
(1c1) N
(<       SUBROUTINE PERMIT\(PERIM,IGO\)) N
(---) N
(>       SUBROUTINE PERMIT\(RPERT,IGO\)) N
(4c4) N
(< *       Check on existing multiple regularization.) N
(---) N
(> *       Permission for unperturbed triple or quad.) N
(8,9d7) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(<       REAL*8  M,MASS,MC,MIJ,MKK) N
(12,15d9) N
(<       COMMON/CHAIN1/  XCH\(NMX3\),VCH\(NMX3\),M\(NMX\),) N
(<      &                ZZ\(NMX3\),WC\(NMX3\),MC\(NMX\),) N
(<      &                XI\(NMX3\),PI\(NMX3\),MASS,RINV\(NMXm\),RSUM,MKK\(NMX\),) N
(<      &                MIJ\(NMX,NMX\),TKK\(NMX\),TK1\(NMX\),INAME\(NMX\),NN) N
(18c12) N
(< *       Search any existing subsystem.) N
(---) N
(> *       Search any existing subsystems.) N
(20d13) N
(<       ICHSUB = 1) N
(22,28c15,19) N
(< *       Identify chain pointer for possible reduction of STEPS.) N
(<           IF \(ISYS\(L\).EQ.3\) ICHSUB = ISYS\(L\)) N
(< *       Distinguish between triple & quad case \(denoted ISUB = 1 or 2\).) N
(<           IF \(JCOMP.LE.N.AND.NAMES\(4,L\).EQ.0\) THEN) N
(<               ISUB = 1) N
(<       ELSE IF \(JCOMP.GT.N.AND.NAMES\(4,L\).GT.0\) THEN) N
(<               ISUB = 2) N
(---) N
(> *       Distinguish between triple, quad & chain case.) N
(>           IF \(JCOMP.LE.N.AND.ISYS\(L\).EQ.1\) THEN) N
(>               ISUB = L) N
(>           ELSE IF \(JCOMP.GT.N.AND.ISYS\(L\).GE.2\) THEN) N
(>               ISUB = L) N
(34,40c25,28) N
(< *       See whether the case ISUB = 1 or 2 is used already.) N
(<           DO 20 L = 1,NSUB) N
(<               IF \(ISUB.EQ.ISYS\(L\)\) IGO = 1) N
(<    20     CONTINUE) N
(< *       Enforce chain termination at next extension if new system < RSUM/2.) N
(<           IF \(PERIM.LT.0.5*RSUM.AND.IGO.GT.0\) THEN) N
(OUT) (Page 164/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (82/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (165-166) 83
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               STEPS\(ICHSUB\) = 0.0) p n
(---) N
(>           IGO = 1) N
(> *       Enforce termination at next extension if new system is smaller.) N
(>           IF \(RPERT.LT.RMAXS\(ISUB\)\) THEN) N
(>               STEPS\(ISUB\) = 0.0D0) N
(1,2c1,2) N
(< 1313 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/pfac.f) N
(< nbody6compare/pfac.f) N
(---) N
(> 1313 1999-12-23 13:25 /work/Umi2/spurzem/5/nbody6++compare/pfac.f) N
(> nbody6++compare/pfac.f) N
(1,2c1,2) N
(< 875 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/physks.f) N
(< nbody6compare/physks.f) N
(---) N
(> 875 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/physks.f) N
(> nbody6++compare/physks.f) N
(1,2c1,2) N
(< 400 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/qforce.f) N
(< nbody6compare/qforce.f) N
(---) N
(> 400 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/qforce.f) N
(> nbody6++compare/qforce.f) N
(1,2c1,2) N
(< 5176 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/qpmod3.f) N
(< nbody6compare/qpmod3.f) N
(---) N
(> 5177 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/qpmod3.f) N
(> nbody6++compare/qpmod3.f) N
(143c143) N
(<      &                              2I5,1P,E10.2,0P,2F8.3,F9.1,1P,E10.2\)) N
(---) N
(>      &                                 2I5,1PE10.2,0P2F8.3,F9.1,1PE10.2\)) N
(149a150) N
(> ) N
(1,2c1,2) N
(< 4205 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/qpmod4.f) N
(< nbody6compare/qpmod4.f) N
(---) N
(> 4206 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/qpmod4.f) N
(> nbody6++compare/qpmod4.f) N
(127c127) N
(<      &                              2I5,1P,E10.2,0P,2F8.3,F9.1,1P,E10.2\)) N
(---) N
(>      &                                 2I5,1PE10.2,0P2F8.3,F9.1,1PE10.2\)) N
(132a133) N
(> ) N
(1,2c1,2) N
(< 7554 2006-09-03 10:25 /work/Umi2/spurzem/5/nbody6compare/qpmod.f) N
(< nbody6compare/qpmod.f) N
(---) N
(> 6999 2003-06-23 19:32 /work/Umi2/spurzem/5/nbody6++compare/qpmod.f) N
(> nbody6++compare/qpmod.f) N
(8a9,10) N
(>       LOGICAL  KSLOW,KCOLL) N
(>       REAL*8  KSCH) N
(11a14) N
(>       COMMON/SLOW1/   TK2\(0:NMX\),EJUMP,KSCH\(NMX\),KSLOW,KCOLL) N
(18c21) N
(< *       Skip for small dissipation \(ISYNC > 0 delays further calls\).) N
(---) N
(> *       Skip for small dissipation \(ISYNC > 0 prevents further calls\).) N
(45a49) N
(>       AM0 = SEMI*\(1.0D0 - ECC**2\)) N
(48,74c52,53) N
(< *       Treat sequential circularization as standard case \(KZ27 = 1\).) N
(<       IF \(KZ27.EQ.1\) THEN) N
(<           AM0 = SEMI*\(1.0D0 - ECC**2\)) N
(OUT) (Page 165/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           ECC2 = ECCM2) p n
(<           ECC1 = SQRT\(ECC2\)) N
(<           ACIRC = AM0/\(1.0 - ECC2\)) N
(<           R1 = MAX\(RADIUS\(1\),RADIUS\(2\)\)) N
(< *       Accept circularized orbit directly if ACIRC < 4*R.) N
(<           IF \(ACIRC.LT.4.0*R1\) THEN) N
(<               SEMI1 = ACIRC) N
(<           ELSE) N
(< *       Obtain E1 by \(1 + E1\) = AM0/\(4*R1\) and A1 by A1*\(1 - E1\) = 4*R1.) N
(<               ECC1 = 0.25*AM0/R1 - 1.0) N
(<               ECC1 = MAX\(ECC1,ECCM\)) N
(<               ECC1 = MAX\(ECC1,0.9*ECC\)) N
(<               SEMI1 = AM0/\(1.0 - ECC1**2\)) N
(<           END IF) N
(< *       Form the corresponding energy change.) N
(<           DH = 0.5*MB*\(1.0/SEMI - 1.0/SEMI1\)) N
(<           DE\(1\) = -MU*DH) N
(<           DE\(2\) = 0.0) N
(< *       Obtain the tidal energy change for PT or GR.) N
(<       ELSE IF \(KZ27.EQ.2\) THEN) N
(<           CALL TIDES\(QPERI,M\(K1\),M\(K2\),RADIUS\(1\),RADIUS\(2\),IS,DE\)) N
(<       ELSE) N
(<           CALL TIDES2\(QPERI,M\(K1\),M\(K2\),VSTAR1,H,ECC,DE\)) N
(<       END IF) N
(---) N
(> *       Obtain the tidal energy change for PT.) N
(>       CALL TIDES\(QPERI,M\(K1\),M\(K2\),RADIUS\(1\),RADIUS\(2\),IS,DE\)) N
(87,95c66,80) N
(< *       Skip on final hyperbolic orbit.) N
(<       IF \(H + DH.GT.0.0\) GO TO 90) N
(< *) N
(< *       Use alternative expression for PT & GR capture condition.) N
(<       IF \(KZ27.GE.2\) THEN) N
(<           SEMI1 = -0.5*MB/\(H + DH\)) N
(<           ECC1 = 1.0 - PERI/SEMI1) N
(<           ECC1 = MAX\(ECC1,0.0D0\)) N
(< *         ECC1 = MAX\(ECC1,ECCM\)) N
(---) N
(> *       Adopt sequential circularization instead of standard PT.) N
(>       ECC2 = ECCM2) N
(>       ECC1 = SQRT\(ECC2\)) N
(>       ACIRC = AM0/\(1.0 - ECC2\)) N
(>       R1 = MAX\(RADIUS\(1\),RADIUS\(2\)\)) N
(> ) N
(> *       Accept circularized orbit directly if ACIRC < 4*R.) N
(>       IF \(ACIRC.LT.4.0*R1\) THEN) N
(>           SEMI1 = ACIRC) N
(>       ELSE) N
(> *       Obtain E1 by \(1 + E1\) = AM0/\(4*R1\) and A1 by A1*\(1 - E1\) = 4*R1.) N
(>           ECC1 = 0.25*AM0/R1 - 1.0) N
(>           ECC1 = MAX\(ECC1,ECCM\)) N
(>           ECC1 = MAX\(ECC1,0.9*ECC\)) N
(>           SEMI1 = AM0/\(1.0 - ECC1**2\)) N
(97a83,90) N
(> *       Form the corresponding energy change.) N
(>       DH = 0.5*MB*\(1.0/SEMI - 1.0/SEMI1\)) N
(>       DE\(1\) = -MU*DH) N
(>       DE\(2\) = 0.0) N
(> *) N
(> *       Skip on possible hyperbolic case.) N
(>       IF \(H + DH.GT.0.0\) GO TO 90) N
(> *) N
(106,107d98) N
(< *       Distinguish between circularization and GR capture.) N
(<       IF \(KZ27.EQ.1\) THEN) N
(109,112c100) N
(<           C2 = 1.0/C1**2) N
(<       ELSE) N
(<           C2 = SQRT\(\(MB + H*PERI\)/\(MB + HI*PERI\)\)) N
(OUT) (Page 166/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (83/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (167-168) 84
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       END IF) p n
(---) N
(>       C2 = 1.0/C1**2) N
(115,118c103,106) N
(<       IF \(ECC1.LE.ECCM.AND.KZ27.EQ.1\) THEN) N
(<           AM = SEMI1*\(1.0D0 - ECC1**2\)) N
(<           C2 = \(AM/AM0\)/C1**2) N
(<       END IF) N
(---) N
(> *     IF \(ECC1.LE.0.002\) THEN) N
(> *         AM = SEMI1*\(1.0D0 - ECC1**2\)) N
(> *         C2 = \(AM/AM0\)/C1**2) N
(> *     END IF) N
(217d204) N
(<           R1 = MAX\(SIZE\(K1\),SIZE\(K2\)\)) N
(234a222,223) N
(> ) N
(> ) N
(1,2c1,2) N
(< 11948 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/quad.f) N
(< nbody6compare/quad.f) N
(---) N
(> 11909 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/quad.f) N
(> nbody6++compare/quad.f) N
(214d213) N
(<               DMINC = MIN\(RCOLL,DMINC\)) N
(1,2c1,2) N
(< 652 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/r2sort.f) N
(< nbody6compare/r2sort.f) N
(---) N
(> 652 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/r2sort.f) N
(> nbody6++compare/r2sort.f) N
(1,2c1,2) N
(< 749 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/ran2.f) N
(< nbody6compare/ran2.f) N
(---) N
(> 1059 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/ran2.f) N
(> nbody6++compare/ran2.f) N
(1,32c1,34) N
(<       FUNCTION RAN2\(IDUM\)) N
(< *) N
(< *) N
(< *       Random number generator \(Press p. 195\).) N
(< *       ---------------------------------------) N
(< *) N
(<       PARAMETER \(M=714025,IA=1366,IC=150889,RM=1./M\)) N
(<       COMMON/RAND2/  IY,IFF,IR\(97\) ) N
(< *     DATA  IFF /0/) N
(< *) N
(< *) N
(<       IF \(IDUM.LT.0.OR.IFF.EQ.0\) THEN) N
(<           IFF = 1) N
(<           IDUM = MOD\(IC-IDUM,M\)) N
(<           DO 11 J = 1,97) N
(<               IDUM = MOD\(IA*IDUM+IC,M\)) N
(<               IR\(J\) = IDUM) N
(<    11     CONTINUE) N
(<           IDUM = MOD\(IA*IDUM+IC,M\)) N
(<           IY = IDUM) N
(<       END IF) N
(<       J = 1 + \(97*IY\)/M) N
(<       IF \(J.GT.97.OR.J.LT.1\) WRITE \(6,12\)  J, IDUM) N
(<    12 FORMAT \(/,'  TROUBLES IN RAN2   J IDUM ',2I12\)) N
(<       IY = IR\(J\)) N
(<       RAN2 = IY*RM) N
(<       IDUM = MOD\(IA*IDUM+IC,M\)) N
(<       IR\(J\) = IDUM) N
(< *) N
(<       RETURN) N
(OUT) (Page 167/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(<       END ) N
(---) N
(>       FUNCTION ran2\(idum\)) N
(>       INTEGER idum,IM1,IM2,IMM1,IA1,IA2,IQ1,IQ2,IR1,IR2,NTAB,NDIV) N
(>       REAL ran2,AM,EPS,RNMX) N
(>       PARAMETER \(IM1=2147483563,IM2=2147483399,AM=1./IM1,IMM1=IM1-1,) N
(>      *IA1=40014,IA2=40692,IQ1=53668,IQ2=52774,IR1=12211,IR2=3791,) N
(>      *NTAB=32,NDIV=1+IMM1/NTAB,EPS=1.2e-7,RNMX=1.-EPS\)) N
(>       INTEGER idum2,j,k,iv\(NTAB\),iy) N
(>       SAVE iv,iy,idum2) N
(>       DATA idum2/123456789/, iv/NTAB*0/, iy/0/) N
(>       if \(idum.le.0\) then) N
(>         idum=max\(-idum,1\)) N
(>         idum2=idum) N
(>         do 11 j=NTAB+8,1,-1) N
(>           k=idum/IQ1) N
(>           idum=IA1*\(idum-k*IQ1\)-k*IR1) N
(>           if \(idum.lt.0\) idum=idum+IM1) N
(>           if \(j.le.NTAB\) iv\(j\)=idum) N
(> 11      continue) N
(>         iy=iv\(1\)) N
(>       endif) N
(>       k=idum/IQ1) N
(>       idum=IA1*\(idum-k*IQ1\)-k*IR1) N
(>       if \(idum.lt.0\) idum=idum+IM1) N
(>       k=idum2/IQ2) N
(>       idum2=IA2*\(idum2-k*IQ2\)-k*IR2) N
(>       if \(idum2.lt.0\) idum2=idum2+IM2) N
(>       j=1+iy/NDIV) N
(>       iy=iv\(j\)-idum2) N
(>       iv\(j\)=idum) N
(>       if\(iy.lt.1\)iy=iy+IMM1) N
(>       ran2=min\(AM*iy,RNMX\)) N
(>       return) N
(>       END) N
(> C  \(C\) Copr. 1986-92 Numerical Recipes Software >\).) N
(1,2c1,2) N
(< 4165 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/rchain.f) N
(< nbody6compare/rchain.f) N
(---) N
(> 4190 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/rchain.f) N
(> nbody6++compare/rchain.f) N
(30d29) N
(<       JC = 0) N
(31a31) N
(>       JC = 0) N
(66a67) N
(>               DTAU0 = DS) N
(1,2c1,2) N
(< 7881 2005-03-21 18:44 /work/Umi2/spurzem/5/nbody6compare/recoil.f) N
(< nbody6compare/recoil.f) N
(---) N
(> 7755 2005-03-11 11:33 /work/Umi2/spurzem/5/nbody6++compare/recoil.f) N
(> nbody6++compare/recoil.f) N
(18a19,21) N
(>       INCLUDE 'mpif.h') N
(>       INTEGER group,rank,ierr,isize,status\(MPI_STATUS_SIZE\)) N
(>       COMMON/MPIDAT/group,rank,ierr,isize,status) N
(26a30,31) N
(> *       Set redundant index for N = 3.) N
(>       IF \(N.EQ.3\) I4 = I1) N
(30,46d34) N
(<       ELSE IF \(N.EQ.3\) THEN) N
(<           I4 = I1) N
(<       ELSE IF \(N.GT.4\) THEN) N
(< *       Determine indices of second closest pair \(avoid pair I1-I2\).) N
(<           RX1 = 1.0) N
(<           RX0 = R2\(I1,I2\)) N
(OUT) (Page 168/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (84/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (169-170) 85
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           DO 2 J1 = 1,N) p n
(<               IF \(J1.EQ.I1.OR.J1.EQ.I2\) GO TO 2) N
(<               DO 1 J2 = J1+1,N) N
(<                   IF \(J2.EQ.I1.OR.J2.EQ.I2\) GO TO 1) N
(<                   IF \(R2\(J1,J2\).LT.RX1.AND.R2\(J1,J2\).GT.RX0\) THEN) N
(<                       RX1 = R2\(J1,J2\)) N
(<                       I3 = J1) N
(<                       I4 = J2) N
(<                   END IF) N
(<     1         CONTINUE) N
(<     2     CONTINUE) N
(48,49c36,45) N
(<       K1 = I3) N
(<       K2 = I4) N
(---) N
(> *) N
(> *       Define indices \(K1,K2\) for the second closest distance.) N
(>       IF \(R2\(I2,I3\).LT.R2\(I1,I3\)\) THEN) N
(>           K1 = I2) N
(>           K2 = I3) N
(>           IF \(N.EQ.2\) K2 = I1) N
(>       ELSE) N
(>           K1 = I1) N
(>           K2 = I3) N
(>       END IF) N
(175d170) N
(<           IF \(N.GT.4\) RM = MAX\(R13,R24\)) N
(195c190) N
(<       IF \(NAME1 + NAME2.NE.NAMEC\(I1\) + NAMEC\(I2\).AND.EB.LT.0.0\) THEN) N
(---) N
(>       IF \(NAME1 + NAME2.NE.NAMEC\(I1\) + NAMEC\(I2\)\) THEN) N
(198c193,194) N
(<           WRITE \(6,15\)  TCH, NAME1, NAME2, NAMEC\(I1\), NAMEC\(I2\), ECC0,) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,15\)  TCH, NAME1, NAME2, NAMEC\(I1\), NAMEC\(I2\), ECC0,) N
(210c206,207) N
(<           WRITE \(6,20\)  NAMEC\(I1\), NAMEC\(I2\), SEMI, ECC, EB, GB, G4,) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,20\)  NAMEC\(I1\), NAMEC\(I2\), SEMI, ECC, EB, GB, G4,) N
(219c216) N
(<       IF \(IEND.EQ.2.AND.PMIN.LT.2.0*SEMI.AND.DB.GT.0.1\) THEN) N
(---) N
(>       IF \(IEND.EQ.2.AND.PMIN.LT.3.0*SEMI.AND.ECC1.GT.1.0\) THEN) N
(221c218,219) N
(<           WRITE \(6,25\)  NAMEC\(I3\), ECC, ECC1, PMIN/SEMI, RCDOT/RCP,) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,25\)  NAMEC\(I3\), ECC, ECC1, PMIN/SEMI, RCDOT/RCP,) N
(232c230,231) N
(<           WRITE \(6,30\)  I1, I2, I3, I4, RB, R13, R24, DE, TC, NSTEP1,) N
(---) N
(>           if \(rank.eq.0\)) N
(>      &    WRITE \(6,30\)  I1, I2, I3, I4, RB, R13, R24, DE, TC, NSTEP1,) N
(234c233) N
(<    30     FORMAT \(/,' END CHAIN  ',4I3,'  RB =',1PE8.1,'  R13 =',E8.1,) N
(---) N
(>    30     FORMAT \(/,' END CHAIN  ',4I3,'  RB =',1P,E8.1,'  R13 =',E8.1,) N
(1,2c1,2) N
(< 745 2003-11-08 14:43 /work/Umi2/spurzem/5/nbody6compare/redraw.f) N
(< nbody6compare/redraw.f) N
(---) N
(> 742 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/redraw.f) N
(> nbody6++compare/redraw.f) N
(9c9) N
(<       INTEGER IC\(NMX2\),ICC\(2\),IJ\(NMXM,2\)) N
(---) N
(>       INTEGER IC\(1\),ICC\(2\),IJ\(NMXM,2\)) N
(OUT) (Page 169/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1,2c1,2) p n
(< 8649 2004-05-21 12:19 /work/Umi2/spurzem/5/nbody6compare/reduce.f) N
(< nbody6compare/reduce.f) N
(---) N
(> 8856 2002-08-12 22:10 /work/Umi2/spurzem/5/nbody6++compare/reduce.f) N
(> nbody6++compare/reduce.f) N
(35c35,38) N
(<       IF \(KZ\(30\).GT.2\) THEN) N
(---) N
(> *       Enforce exit from SUBINT \(new value set on return to INTGRT\).) N
(>       TBLOCK = TPREV) N
(> *) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.2\) THEN) N
(94c97,98) N
(<               IF \(BODY\(J\).GT.0.0D0\) WRITE \(6,35\)  I, IESC, NAMEC\(IESC\)) N
(---) N
(>               IF \(rank.eq.0.and.BODY\(J\).GT.0.0D0\) ) N
(>      &            WRITE \(6,35\)  I, IESC, NAMEC\(IESC\)) N
(117c121) N
(<       WRITE \(6,48\)  IESC, NAMEC\(NEW\)) N
(---) N
(>       if\(rank.eq.0\)WRITE \(6,48\)  IESC, NAMEC\(NEW\)) N
(134c138) N
(<       IF \(KZ\(30\).GT.1\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.1\) THEN) N
(232d235) N
(<           CALL FPOLY2\(I,I,0\)) N
(237a241,242) N
(>           CALL FPOLY2\(I,I,0\)) N
(>           CALL HIVEL\(I\)) N
(276c281) N
(<       IF \(KZ\(30\).GT.2\) THEN) N
(---) N
(>       IF \(rank.eq.0.and.KZ\(30\).GT.2\) THEN) N
(286a292,293) N
(> ) N
(> ) N
(1,2c1,2) N
(< 1006 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/reflct.f) N
(< nbody6compare/reflct.f) N
(---) N
(> 1039 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/reflct.f) N
(> nbody6++compare/reflct.f) N
(15c15) N
(< *       Obtain radial velocity with respect to the inertial centre.) N
(---) N
(> *       Obtain radial velocity assuming small density centre displacement.) N
(38a39,40) N
(> *     NBREF = NBREF + 1) N
(> *) N
(1,2c1,2) N
(< 21221 2006-02-14 19:04 /work/Umi2/spurzem/5/nbody6compare/regint.f) N
(< nbody6compare/regint.f) N
(---) N
(> 21522 2005-04-13 16:11 /work/Umi2/spurzem/5/nbody6++compare/regint.f) N
(> nbody6++compare/regint.f) N
(1,2c1) N
(<       SUBROUTINE REGINT\(I,XI,XIDOT\)) N
(< *) N
(---) N
(>       SUBROUTINE REGINT\(I,KLIST\)) N
(9a9,11) N
(> *       Calculate potential with little extra cost.) N
(>       COMMON/POTENT/PHII\(NMAX\),PHIR\(NMAX\),PHIR1\(NMAX\)) N
(>       REAL*8  W0\(4\),W1\(4\),W2\(4\),W3\(4\)) N
(11c13,15) N
(<       REAL*8  FRX\(3\),FDX\(3\)) N
(---) N
(OUT) (Page 170/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (85/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (171-172) 86
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       INTEGER ESCFLG\(NMAX\)) p n
(> *) N
(>       INTEGER KLIST\(LMAX\)) N
(12a17,20) N
(>       DO 6 K = 1,3) N
(>           XI\(K\) = X\(K,I\)) N
(>           XIDOT\(K\) = XDOT\(K,I\)) N
(>    6  CONTINUE) N
(14,15c22,23) N
(< *       Set neighbour number, time-step & choice of central distance.) N
(<       NNB0 = LIST\(1,I\)) N
(---) N
(> *       Copy uncorrected X and set time-step & central distance.) N
(>       NNB0 = KLIST\(1\)) N
(18,25c26,28) N
(<       IF \(KZ\(39\).EQ.0\) THEN) N
(<           RI2 = \(XI\(1\) - RDENS\(1\)\)**2 + \(XI\(2\) - RDENS\(2\)\)**2 +) N
(<      &                                  \(XI\(3\) - RDENS\(3\)\)**2) N
(<           RH2 = RSCALE**2) N
(<       ELSE) N
(<           RI2 = XI\(1\)**2 + XI\(2\)**2 + XI\(3\)**2) N
(<           RH2 = 9.0*RSCALE**2) N
(<       END IF) N
(---) N
(>       RI2 = \(XI\(1\) - RDENS\(1\)\)**2 + \(XI\(2\) - RDENS\(2\)\)**2 +) N
(>      &                              \(XI\(3\) - RDENS\(3\)\)**2) N
(>       RH2 = RSCALE**2) N
(42a46,48) N
(>       PHII\(I\) = 0.D0) N
(>       PHIR\(I\) = 0.D0) N
(>       PHIR1\(I\) = 0.D0) N
(46,48c52,53) N
(< *       Treat unperturbed KS in the single particle approximation.) N
(<          I1 = 2*\(I - N\) - 1) N
(<          IF \(LIST\(1,I1\).GT.0\) THEN) N
(---) N
(> *       See whether perturbation allows single particle approximation.) N
(>           IF \(GAMMA\(I-N\).GE.GMIN\) THEN) N
(52c57) N
(<          END IF) N
(---) N
(>           END IF) N
(55a61) N
(>           call cputim\(tt1\)) N
(56a63,65) N
(> *RSP) N
(>           IF \(J.EQ.I\) GO TO 10) N
(> *RSP) N
(65a75,76) N
(>           DR2I = 1.0/RIJ2) N
(>           DR3I = BODY\(J\)*DR2I*SQRT\(DR2I\)) N
(66a78) N
(>           DRDP = 3.0*DRDV*DR2I) N
(68c80) N
(< *       First see whether the distance exceeds the outer shell radius.) N
(---) N
(> *       See whether the distance exceeds the outer shell radius.) N
(75,76d86) N
(<           ELSE) N
(<               IF \(J.EQ.I\) GO TO 10) N
(82,84d91) N
(<           DR2I = 1.0/RIJ2) N
(<           DRDV = 3.0*DRDV*DR2I) N
(<           DR3I = BODY\(J\)*DR2I*SQRT\(DR2I\)) N
(88,90c95,99) N
(<           FD\(1\) = FD\(1\) + \(DV\(1\) - A1*DRDV\)*DR3I) N
(<           FD\(2\) = FD\(2\) + \(DV\(2\) - A2*DRDV\)*DR3I) N
(<           FD\(3\) = FD\(3\) + \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(OUT) (Page 171/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           FD\(1\) = FD\(1\) + \(DV\(1\) - A1*DRDP\)*DR3I) p n
(>           FD\(2\) = FD\(2\) + \(DV\(2\) - A2*DRDP\)*DR3I) N
(>           FD\(3\) = FD\(3\) + \(DV\(3\) - A3*DRDP\)*DR3I) N
(> *       Obtain potential.) N
(>           PHII\(I\) = PHII\(I\) - DR3I*RIJ2) N
(94,97c103) N
(<     8     DR2I = 1.0/RIJ2) N
(<           DRDV = 3.0*DRDV*DR2I) N
(<           DR3I = BODY\(J\)*DR2I*SQRT\(DR2I\)) N
(<           FREG\(1\) = FREG\(1\) + A1*DR3I) N
(---) N
(>     8     FREG\(1\) = FREG\(1\) + A1*DR3I) N
(100,102c106,111) N
(<           FDR\(1\) = FDR\(1\) + \(DV\(1\) - A1*DRDV\)*DR3I) N
(<           FDR\(2\) = FDR\(2\) + \(DV\(2\) - A2*DRDV\)*DR3I) N
(<           FDR\(3\) = FDR\(3\) + \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(>           FDR\(1\) = FDR\(1\) + \(DV\(1\) - A1*DRDP\)*DR3I) N
(>           FDR\(2\) = FDR\(2\) + \(DV\(2\) - A2*DRDP\)*DR3I) N
(>           FDR\(3\) = FDR\(3\) + \(DV\(3\) - A3*DRDP\)*DR3I) N
(> *       Obtain potential and derivative.) N
(>           PHIR\(I\) = PHIR\(I\) - DR3I*RIJ2) N
(>           PHIR1\(I\) = PHIR1\(I\) + DRDV*DR3I) N
(103a113,114) N
(>           call cputim\(tt2\)) N
(>           ttfrc = ttfrc + \(tt2-tt1\)*60.) N
(104a116,127) N
(> *       Check total energy) N
(>           VI2 = XIDOT\(1\)**2 + XIDOT\(2\)**2 + XIDOT\(3\)**2) N
(>           EI = VI2/2.D0 + PHIR\(I\) + PHII\(I\)) N
(>           ETIDAL = -ZMASS/RTIDE) N
(>           IF\(EI.GT.ETIDAL\)THEN) N
(>               IF\(ESCFLG\(NAME\(I\)\).NE.1\)) N
(>      *        WRITE\(95,1001\) TIME,I,NAME\(I\),BODY\(I\),DSQRT\(RI2\),) N
(>      *                       DSQRT\(VI2\),EI,ETIDAL) N
(>               ESCFLG\(NAME\(I\)\) = 1) N
(>  1001     FORMAT\(1X,' T=',1P,D15.7,' I,N=',2I6,' m,r,v=',3D15.7,) N
(>      *        ' e,et=',2D15.7\)) N
(>           END IF) N
(123,127d145) N
(<       END IF ) N
(< *) N
(< *       Check optional interstellar clouds.) N
(<    20 IF \(KZ\(13\).GT.0\) THEN) N
(<           CALL FCLOUD\(I,FREG,FDR,1\)) N
(131,138c149) N
(<       IF \(KZ\(14\).GT.0\) THEN) N
(< *       Save current values for deriving work done by tides \(#14 = 3\).) N
(<           IF \(KZ\(14\).EQ.3\) THEN) N
(<               DO 22 K = 1,3) N
(<                   FRX\(K\) = FREG\(K\)) N
(<                   FDX\(K\) = FDR\(K\)) N
(<    22         CONTINUE) N
(<           END IF) N
(---) N
(>    20 CONTINUE) N
(140,141c151,153) N
(< *       Obtain the tidal perturbation \(force and first derivative\).) N
(<           CALL XTRNLF\(XI,XIDOT,FIRR,FREG,FD,FDR,1\)) N
(---) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(>           CALL XTRNLF\(I,XI,XIDOT,FIRR,FREG,FD,FDR,1\)) N
(>       END IF) N
(143,154c155,157) N
(< *       Form rate of tidal energy change during last regular step.) N
(<           IF \(KZ\(14\).EQ.3\) THEN) N
(<               WDOT = 0.0) N
(<               W2DOT = 0.0) N
(<               DO 24 K = 1,3) N
(OUT) (Page 172/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (86/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (173-174) 87
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<                   PX = FREG\(K\) - FRX\(K\)) p n
(<                   DPX = FDR\(K\) - FDX\(K\)) N
(<                   WDOT = WDOT + XIDOT\(K\)*PX) N
(<                   W2DOT = W2DOT + \(FREG\(K\) + FIRR\(K\)\)*PX + XIDOT\(K\)*DPX) N
(<    24         CONTINUE) N
(< *       Note: second-order term derived by Douglas Heggie \(Aug/03\).) N
(<           END IF) N
(---) N
(> *       Check whether cloud forces should be included.) N
(>       IF \(KZ\(13\).GT.0\) THEN) N
(>           CALL FCLOUD\(I,FREG,FDR,1\)) N
(161,162c164,165) N
(< *       Double the neighbour sphere and try again unless RI > 10*RSCALE.) N
(<           IF \(RI2.GT.100.0*RH2.OR.LIST\(1,I\).EQ.0\) THEN) N
(---) N
(> *       Double the neighbour sphere and try again unless RI > 30*RSCALE.) N
(>           IF \(RI2.GT.100.0*RH2.OR.KLIST\(1\).EQ.0\) THEN) N
(178,179c181,183) N
(< *       Reduce neighbour sphere gradually but allow encounter detection.) N
(<                   RS\(I\) = MAX\(0.75*RS\(I\),0.1*RSCALE\)) N
(---) N
(> *       Specify zero members and reduce neighbour sphere gradually \(but > 0\).) N
(>                   KLIST\(1\) = 0) N
(>                   RS\(I\) = MAX\(0.75*RS\(I\),0.01*RSCALE\)) N
(187c191) N
(<           IF \(RS\(I\).GT.10.0*RSCALE.AND.KZ\(39\).EQ.0\) IRSKIP = 1) N
(---) N
(>           IF \(RS\(I\).GT.10.0*RSCALE\) IRSKIP = 1) N
(220a225) N
(>           DRDP = 3.0*DRDV*DR2I) N
(233,234c238) N
(<    34     DRDV = 3.0*DRDV*DR2I) N
(<           FIRR\(1\) = FIRR\(1\) - A1*DR3I) N
(---) N
(>    34     FIRR\(1\) = FIRR\(1\) - A1*DR3I) N
(237,239c241,243) N
(<           FD\(1\) = FD\(1\) - \(DV\(1\) - A1*DRDV\)*DR3I) N
(<           FD\(2\) = FD\(2\) - \(DV\(2\) - A2*DRDV\)*DR3I) N
(<           FD\(3\) = FD\(3\) - \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(>           FD\(1\) = FD\(1\) - \(DV\(1\) - A1*DRDP\)*DR3I) N
(>           FD\(2\) = FD\(2\) - \(DV\(2\) - A2*DRDP\)*DR3I) N
(>           FD\(3\) = FD\(3\) - \(DV\(3\) - A3*DRDP\)*DR3I) N
(243,245c247,253) N
(<           FDR\(1\) = FDR\(1\) + \(DV\(1\) - A1*DRDV\)*DR3I) N
(<           FDR\(2\) = FDR\(2\) + \(DV\(2\) - A2*DRDV\)*DR3I) N
(<           FDR\(3\) = FDR\(3\) + \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(>           FDR\(1\) = FDR\(1\) + \(DV\(1\) - A1*DRDP\)*DR3I) N
(>           FDR\(2\) = FDR\(2\) + \(DV\(2\) - A2*DRDP\)*DR3I) N
(>           FDR\(3\) = FDR\(3\) + \(DV\(3\) - A3*DRDP\)*DR3I) N
(> *       Obtain potential and derivative.) N
(>           PHII\(I\) = PHII\(I\) - DR3I*RIJ2) N
(>           PHIR\(I\) = PHIR\(I\) - DR3I*RIJ2) N
(>           PHIR1\(I\) = PHIR1\(I\) + DRDV*DR3I) N
(257,259c265,278) N
(<    40 A3 = ALPHA*SQRT\(FLOAT\(NNB\)*RS\(I\)\)/RS2) N
(<       NBP = A3) N
(<       A3 = MIN\(A3,ZNBMAX\) ) N
(---) N
(> *       Include optional stabilization to increase neighbour number.) N
(> *       Take input parameter NNBOPT as optimal neighbour number \(R.Sp.\)) N
(> *       Note that it substitutes input parameter NNBMAX, which) N
(> *       is now a parameter NNBMAX=LMAX-3) N
(>    40 CONTINUE) N
(> *) N
(>       FAC = 1.D0) N
(>       IF \(KZ\(40\).GT.0\) THEN) N
(>           FAC = 1.0 + 0.1*\(FLOAT\(NNBOPT\) - FLOAT\(NNB\)\)/FLOAT\(NNB\)) N
(OUT) (Page 173/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       END IF) p n
(> *) N
(> *     A3 = ALPHA*FAC*SQRT\(FLOAT\(NNB\)*RS\(I\)\)/RS2) N
(>       A3 = FLOAT\(NNB\)*FAC) N
(>       A3 = MIN\(A3,0.9*ZNBMAX\)) N
(266a286) N
(> *) N
(271c291) N
(<       IF \(RI2.GT.RC2.AND.KZ\(39\).EQ.0.AND.RI2.LT.9.0*RH2\) THEN) N
(---) N
(>       IF \(RI2.GT.RC2.AND.RI2.LT.100.0*RH2\) THEN) N
(306,309d325) N
(< *       Prevent reduction of small NNB if predicted value exceeds ZNBMIN.) N
(<           IF \(NNB.LT.ZNBMIN.AND.NBP.GT.ZNBMIN\) THEN) N
(<               IF \(A1.LT.1.0\) A1 = 1.05) N
(<           END IF) N
(317c333) N
(<       IF \(NNB.LE.3.AND.RI2.LT.9.0*RH2\) THEN) N
(---) N
(>       IF \(NNB.LE.3.AND.RI2.LT.100.0*RH2\) THEN) N
(335,337d350) N
(< *       Check minimum neighbour sphere since last output \(skip NNB = 0\).) N
(<       IF \(LIST\(1,I\).GT.0\) RSMIN = MIN\(RSMIN,RS\(I\)\)) N
(< *) N
(339,341c352,354) N
(<       IF \(\(KZ\(18\).EQ.1.AND.LISTV\(1\).GT.0\).OR.KZ\(18\).GT.1\) THEN) N
(<           CALL CHECKL\(I,NNB,XI,XIDOT,RS2,FIRR,FREG,FD,FDR\)) N
(<       END IF) N
(---) N
(>       IF \(KZ\(18\).EQ.0\) GO TO 50) N
(>       IF \(KZ\(18\).EQ.1.AND.LISTV\(1\).EQ.0\) GO TO 50) N
(>       CALL CHECKL\(I,NNB,XI,XIDOT,RS2,FIRR,FREG,FD,FDR\)) N
(347,354c360) N
(< *       Accumulate tidal energy change for general galactic potential.) N
(<       IF \(KZ\(14\).EQ.3\) THEN) N
(< *       Note: Taylor series at end of interval with negative argument.) N
(<           ETIDE = ETIDE + BODY\(I\)*\(0.5*W2DOT*DTR - WDOT\)*DTR) N
(< *       Note: integral of Taylor series for V*P using final values.) N
(<       END IF) N
(< *) N
(< *       Check case of zero old membership \(NBGAIN = NNB specifies net gain\).) N
(---) N
(> *       Check case of zero old or new membership \(skip if both are zero\).) N
(356,357c362,363) N
(<           NBGAIN = NNB) N
(<           GO TO 70) N
(---) N
(>           IF \(NNB.EQ.0\) GO TO 70) N
(>           KLIST\(2\) = 0) N
(365c371) N
(<       ILIST\(1\) = LIST\(NNB0+1,I\)) N
(---) N
(>       ILIST\(1\) = KLIST\(NNB0+1\)) N
(368c374) N
(<    56 IF \(LIST\(L,I\).EQ.ILIST\(LG\)\) GO TO 58) N
(---) N
(>    56 IF \(KLIST\(L\).EQ.ILIST\(LG\)\) GO TO 58) N
(371c377) N
(<       IF \(LIST\(L,I\).GE.ILIST\(LG\)\) THEN) N
(---) N
(>       IF \(KLIST\(L\).GE.ILIST\(LG\)\) THEN) N
(379c385) N
(<           J = LIST\(L,I\)) N
(---) N
(>           J = KLIST\(L\)) N
(394c400) N
(<           LIST\(L,I\) = NTOT + 1) N
(---) N
(>           KLIST\(L\) = NTOT + 1) N
(OUT) (Page 174/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (87/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (175-176) 88
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(410c416) p n
(<       IF \(RIJ2.GT.4.0*RS2.OR.NAME\(J\).EQ.0\) GO TO 68) N
(---) N
(>       IF \(RIJ2.GT.4.0*RS2\) GO TO 68) N
(423c429) N
(<       LIST\(NNB0+1,I\) = ILIST\(1\)) N
(---) N
(>       KLIST\(NNB0+1\) = ILIST\(1\)) N
(437c443,444) N
(<       DRDV = 3.0*\(A1*DV\(1\) + A2*DV\(2\) + A3*DV\(3\)\)*DR2I) N
(---) N
(>       DRDV = A1*DV\(1\) + A2*DV\(2\) + A3*DV\(3\)) N
(>       DRDP = 3.0*DRDV*DR2I) N
(442,444c449,451) N
(<       FD\(1\) = FD\(1\) + \(DV\(1\) - A1*DRDV\)*DR3I) N
(<       FD\(2\) = FD\(2\) + \(DV\(2\) - A2*DRDV\)*DR3I) N
(<       FD\(3\) = FD\(3\) + \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(>       FD\(1\) = FD\(1\) + \(DV\(1\) - A1*DRDP\)*DR3I) N
(>       FD\(2\) = FD\(2\) + \(DV\(2\) - A2*DRDP\)*DR3I) N
(>       FD\(3\) = FD\(3\) + \(DV\(3\) - A3*DRDP\)*DR3I) N
(448,450c455,461) N
(<       FDR\(1\) = FDR\(1\) - \(DV\(1\) - A1*DRDV\)*DR3I) N
(<       FDR\(2\) = FDR\(2\) - \(DV\(2\) - A2*DRDV\)*DR3I) N
(<       FDR\(3\) = FDR\(3\) - \(DV\(3\) - A3*DRDV\)*DR3I) N
(---) N
(>       FDR\(1\) = FDR\(1\) - \(DV\(1\) - A1*DRDP\)*DR3I) N
(>       FDR\(2\) = FDR\(2\) - \(DV\(2\) - A2*DRDP\)*DR3I) N
(>       FDR\(3\) = FDR\(3\) - \(DV\(3\) - A3*DRDP\)*DR3I) N
(> *       Obtain potential and derivative.) N
(>       PHII\(I\) = PHII\(I\) - DR3I*RIJ2) N
(>       PHIR\(I\) = PHIR\(I\) - DR3I*RIJ2) N
(>       PHIR1\(I\) = PHIR1\(I\) + DRDV*DR3I) N
(465,467c476,480) N
(<    70 DTSQ = DTR**2) N
(<       DT6 = 6.0D0/\(DTR*DTSQ\)) N
(<       DT2 = 2.0D0/DTSQ) N
(---) N
(>    70 CONTINUE) N
(> *) N
(>       DTSQ = DTR**2) N
(>       DT6 = 6.0/\(DTR*DTSQ\)) N
(>       DT2 = 2.0/DTSQ) N
(473c486) N
(<       IF \(STEP\(I\).LT.5.0D0*DTMIN.AND.DTR.GT.50.0*STEP\(I\)\) THEN) N
(---) N
(>       IF \(DTR.GT.50.0*STEP\(I\)\) THEN) N
(486,493c499,503) N
(< ) S 8 T (  AT3 = 2.0D0*DFR + DTR*SUM) N
(< ) S 8 T (  BT2 = -3.0D0*DFR - DTR*\(SUM + FRD\)) N
(< *) N
(< ) S 8 T (  X0\(K,I\) = X0\(K,I\) + \(0.6D0*AT3 + BT2\)*DTSQ12) N
(< ) S 8 T (  X0DOT\(K,I\) = X0DOT\(K,I\) + \(0.75D0*AT3 + BT2\)*DTR13) N
(< *) N
(< *         X0\(K,I\) = X\(K,I\)) N
(< *         X0DOT\(K,I\) = XDOT\(K,I\)) N
(---) N
(> ) S 8 T (  AT3 = 2.0*DFR + DTR*SUM) N
(> ) S 8 T (  BT2 = -3.0*DFR - DTR*\(SUM + FRD\)) N
(> *       Use here new variables for consistency in parallel execution \(R.Sp.\)) N
(>           XN\(K,I\) = X0\(K,I\) + \(0.6*AT3 + BT2\)*DTSQ12) N
(>           XNDOT\(K,I\) = X0DOT\(K,I\) + \(0.75*AT3 + BT2\)*DTR13) N
(496,497c506) N
(< ) S 8 T (  FR\(K,I\) = FREG\(K\)) N
(<           F\(K,I\) = 0.5D0*\(FREG\(K\) + FIRR\(K\)\)) N
(---) N
(>           FR\(K,I\) = FREG\(K\)) N
(499,500c508) N
(< ) S 8 T (  FRDOT\(K,I\) = FDR\(K\)) N
(OUT) (Page 175/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           FDOT\(K,I\) = ONE6*\(FDR\(K\) + FD\(K\)\)) p n
(---) N
(>           FRDOT\(K,I\) = FDR\(K\)) N
(504,507d511) N
(< *         D0R\(K,I\) = FREG\(K\) - \(FI\(K,I\) - FIRR\(K\)\)) N
(< *         D1R\(K,I\) = FDR0) N
(< *       Use actual first derivatives \(2nd derivs only consistent in FPCORR\).) N
(<           D1\(K,I\) = FD\(K\)) N
(509,511c513,514) N
(< *       Set second & third derivatives based on old neighbours \(cf. FPCORR\).) N
(< ) S 8 T (  D2R\(K,I\) = \(3.0D0*AT3 + BT2\)*DT2) N
(< ) S 8 T (  D3R\(K,I\) = AT3*DT6) N
(---) N
(>           D3R\(K,I\) = AT3*DT6) N
(>           D2R\(K,I\) = \(3.0*AT3 + BT2\)*DT2) N
(513a517) N
(>       NBFLUX = NBFLUX + NBLOSS + NBGAIN) N
(516c520) N
(<           CALL FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT\)) N
(---) N
(>           CALL FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT,FIRR,FREG,FD,FDR,KLIST\)) N
(519c523) N
(<               CALL FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT\)) N
(---) N
(>           CALL FPCORR\(I,NBLOSS,NBGAIN,XI,XIDOT,FIRR,FREG,FD,FDR,KLIST\)) N
(525c529) N
(<           LIST\(1,I\) = NNB) N
(---) N
(>           KLIST\(1\) = NNB) N
(527c531) N
(<               LIST\(L,I\) = ILIST\(L\)) N
(---) N
(>               KLIST\(L\) = ILIST\(L\)) N
(529d532) N
(<           NBFLUX = NBFLUX + NBLOSS + NBGAIN) N
(533,538c536,538) N
(< *     IF \(KZ\(29\).GT.0\) THEN) N
(< *         RI2 = X\(1,I\)**2 + X\(2,I\)**2 + X\(3,I\)**2) N
(< *         IF \(RI2.GT.RSPH2\) THEN) N
(< *             CALL REFLCT\(I,RI2\)) N
(< *             IF \(RI2.LT.0.0\) GO TO 120 ) N
(< *         END IF) N
(---) N
(> *     IF \(KZ\(29\).GT.0.AND.RI2.GT.RS2\) THEN) N
(> *         CALL REFLCT\(I,RI2\)) N
(> *         IF \(RI2.LT.0.0\) GO TO 120) N
(543,556c543,575) N
(<       FR2 = FREG\(1\)**2 + FREG\(2\)**2 + FREG\(3\)**2) N
(<       W1 = FDR\(1\)**2 + FDR\(2\)**2 + FDR\(3\)**2) N
(<       W2 = D2R\(1,I\)**2 + D2R\(2,I\)**2 + D2R\(3,I\)**2) N
(<       W3 = D3R\(1,I\)**2 + D3R\(2,I\)**2 + D3R\(3,I\)**2) N
(< *) N
(< *       Form new step by relative criterion.) N
(<       W0 = \(SQRT\(FR2*W2\) + W1\)/\(SQRT\(W1*W3\) + W2\)) N
(<       W0 = ETAR*W0) N
(<       TTMP = SQRT\(W0\)) N
(<       DT0 = TTMP) N
(< *) N
(< *       Determine new regular step \(standard criterion or fast expression\).) N
(< *     IF \(KZ\(37\).EQ.0\) THEN) N
(< *         TTMP = TSTEP\(FREG,FDR,D2R\(1,I\),D3R\(1,I\),ETAR\)) N
(---) N
(>       DO 100 K = 1,3) N
(>           W1\(K\) = FDR\(K\)) N
(>           W2\(K\) = D2R\(K,I\)) N
(>           W3\(K\) = D3R\(K,I\)) N
(>   100 CONTINUE) N
(> *) N
(>       W0\(4\) = FREG\(1\)**2 + FREG\(2\)**2 + FREG\(3\)**2) N
(OUT) (Page 176/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (88/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (177-178) 89
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       W1\(4\) = W1\(1\)**2 + W1\(2\)**2 + W1\(3\)**2) p n
(>       W2\(4\) = W2\(1\)**2 + W2\(2\)**2 + W2\(3\)**2) N
(>       W3\(4\) = W3\(1\)**2 + W3\(2\)**2 + W3\(3\)**2) N
(> *) N
(> *       Form new step by relative criterion \(extra SQRT for large F3DOT\).) N
(>       IF \(W3\(4\).LT.1.0E+20\) THEN) N
(>           W0\(1\) = \(SQRT\(W0\(4\)*W2\(4\)\) + W1\(4\)\)/) N
(>      &                                       \(SQRT\(W1\(4\)*W3\(4\)\) + W2\(4\)\)) N
(>       ELSE) N
(>           W0\(1\) = \(SQRT\(W0\(4\)*W2\(4\)\) + W1\(4\)\)/) N
(>      &                                 \(SQRT\(W1\(4\)\)*SQRT\(W3\(4\)\) + W2\(4\)\)) N
(>       END IF) N
(>       W0\(1\) = ETAR*W0\(1\)) N
(>       TTMP = SQRT\(W0\(1\)\)) N
(> *       Winston Sweatman's suggestion) N
(> *     DVV = \(XDOT\(1,I\)-X0DOT\(1,I\)\)**2 + \(XDOT\(2,I\)-X0DOT\(2,I\)\)**2 +) N
(> *    &     \(XDOT\(3,I\)-X0DOT\(3,I\)\)**2) N
(> *     FFD = FREG\(1\)**2 + FREG\(2\)**2 + FREG\(3\)**2) N
(> *     ETARW = ETAR) N
(> *     TTMPW = ETARW*DVV*BODY\(I\)/FFD) N
(> *) N
(> *     PRINT*,' Reg I=',I,' TTMP,TTMPW,RATIO=',) N
(> *    &  TTMP,TTMPW,TTMP/TTMPW) N
(> *) N
(> *     IF\(TTMP.GT.TTMPW\)THEN) N
(> *     IGT = IGT + 1) N
(558c577) N
(< *         TTMP = STEPI\(FREG,FDR,D2R\(1,I\),D3R\(1,I\),ETAR\)) N
(---) N
(> *     ILE = ILE + 1) N
(559a579,582) N
(> *     IF\(MOD\(IGT+ILE,100\).EQ.0\)PRINT*,' irr IGT,ILE=',IGT,ILE) N
(> *) N
(> *     TTMP = MAX\(TTMPW,TTMP\)) N
(> *     TTR = TSTEP\(FREG,FDR,D2R\(1,I\),D3R\(1,I\),ETAR\)) N
(563c586) N
(<       IF \(KZ\(14\).EQ.0\) THEN) N
(---) N
(>       IF \(TIDAL\(1\).EQ.0.0D0\) THEN) N
(565,570c588) N
(<           DF2 = FAC**2*MIN\(FR2,FI2\)) N
(< *       Ignore irregular force criterion if no neighbours.) N
(<           IF \(NNB.EQ.0\) DF2 = FAC**2*FR2) N
(<       ELSE IF \(KZ\(14\).EQ.1\) THEN) N
(<           W0 = \(TIDAL\(1\)*XI\(1\)\)**2) N
(<           DF2 = FAC**2*MAX\(FR2,W0\)) N
(---) N
(>           W0\(4\) = FAC**2*MIN\(DBLE\(W0\(4\)\),FI2\)) N
(572c590,591) N
(<           DF2 = FAC**2*FR2) N
(---) N
(>           W0\(1\) = \(TIDAL\(1\)*XI\(1\)\)**2) N
(>           W0\(4\) = FAC**2*MAX\(W0\(4\),W0\(1\)\)) N
(579c598) N
(<       W0 = 0.0) N
(---) N
(>       W0\(1\) = 0.0) N
(581,582c600,601) N
(<           W2 = \(\(D3R\(K,I\)*S3 + D2R\(K,I\)\)*S2 + FDR\(K\)\)*DTC) N
(<           W0 = W0 + W2**2) N
(---) N
(>           W0\(2\) = \(\(W3\(K\)*S3 + W2\(K\)\)*S2 + W1\(K\)\)*DTC) N
(>           W0\(1\) = W0\(1\) + W0\(2\)**2) N
(586c605) N
(<       IF \(W0.LT.DF2\) THEN) N
(---) N
(>       IF \(W0\(1\).LT.W0\(4\)\) THEN) N
(597,599c616,618) N
(<       IF \(TTMP.GT.2.0*STEPR\(I\)\) THEN) N
(OUT) (Page 177/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           IF \(DMOD\(TIME,2.0*STEPR\(I\)\).EQ.0.0D0\) THEN ) p n
(<               TTMP = MIN\(2.0*STEPR\(I\),1.0D0\)) N
(---) N
(> ) S 8 T () S 16 T (IF \(TTMP .GT. 2.0*STEPR\(I\)\) THEN) N
(> ) S 8 T () S 16 T () S 24 T (IF \(DMOD\(TIME,2.0*STEPR\(I\)\) .EQ. 0.0D0\) THEN) N
(>               TTMP = MIN\(2.0*STEPR\(I\),1.D0\)) N
(601c620) N
(<               TTMP = STEPR\(I\) ) N
(---) N
(>               TTMP = STEPR\(I\)) N
(603c622) N
(<       ELSE IF \(TTMP.LT.STEPR\(I\)\) THEN) N
(---) N
(>       ELSE IF \(TTMP .LT. STEPR\(I\)\) THEN) N
(605,608d623) N
(< *       Allow a second reduction to prevent spurious contributions.) N
(<           IF \(TTMP.GT.DT0\) THEN) N
(<               TTMP = 0.5*TTMP) N
(<           END IF) N
(613a629) N
(> *     PRINT*,' New Step = ',TTMP,' Old ',STEPR\(I\),' Quot ',TTMP/STEPR\(I\)) N
(614a631,632) N
(> *     STEPR\(I\) = MIN\(1.4*STEPR\(I\),DTR1\)) N
(> *) N
(621d638) N
(<       NSTEPR = NSTEPR + 1) N
(623c640) N
(<       RETURN) N
(---) N
(>   120 RETURN) N
(1,2c1,2) N
(< 1961 2004-05-13 10:29 /work/Umi2/spurzem/5/nbody6compare/reinit.f) N
(< nbody6compare/reinit.f) N
(---) N
(> 2258 1998-01-08 15:34 /work/Umi2/spurzem/5/nbody6++compare/reinit.f) N
(> nbody6++compare/reinit.f) N
(8c8,9) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(51a53,60) N
(> *       Set maximum integration interval equal to c.m. step.) N
(>       TMAX = STEP\(ICH\)) N
(> *) N
(> *       Check next treatment time of perturbers & output time.) N
(>       CALL TCHAIN\(ISUB,TSMIN\)) N
(>       TMAX = MIN\(TMAX,TSMIN\)) N
(>       TMAX = MIN\(TMAX,TADJ - TIME\)) N
(> *) N
(1,2c1,2) N
(< 3645 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/remove.f) N
(< nbody6compare/remove.f) N
(---) N
(> 3645 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/remove.f) N
(> nbody6++compare/remove.f) N
(1,2c1,2) N
(< 7719 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/rename.f) N
(< nbody6compare/rename.f) N
(---) N
(> 7720 2001-08-04 17:19 /work/Umi2/spurzem/5/nbody6++compare/rename.f) N
(> nbody6++compare/rename.f) N
(213a214) N
(> ) N
(1,2c1,2) N
(< 2062 2001-04-07 13:23 /work/Umi2/spurzem/5/nbody6compare/renew.f) N
(< nbody6compare/renew.f) N
(---) N
(> 2062 1998-08-15 14:47 /work/Umi2/spurzem/5/nbody6++compare/renew.f) N
(OUT) (Page 178/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (89/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (179-180) 90
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> nbody6++compare/renew.f) p n
(1,2c1,2) N
(< 13375 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/reset2.f) N
(< nbody6compare/reset2.f) N
(---) N
(> 13553 2003-06-25 21:09 /work/Umi2/spurzem/5/nbody6++compare/reset2.f) N
(> nbody6++compare/reset2.f) N
(53c53,54) N
(<           WRITE \(6,5\)  WHICH1, TIME+TOFF, ZM, NAME\(2*IPAIR-1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,5\)  WHICH1, TIME+TOFF, ZM, NAME\(2*IPAIR-1\),) N
(67c68,69) N
(<               WRITE \(6,9\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\), NAME\(JG\),) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,9\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(JG\), NAME\(I2\),) N
(72c74,75) N
(<               WRITE \(6,11\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(I2\), NAME\(JG\),) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,11\)  TIME+TOFF, ZM, NAME\(I1\), NAME\(JG\), NAME\(I2\),) N
(96c99,100) N
(<           WRITE \(6,18\)  TIME+TOFF, ZM, NAME\(I1\), NAMEG\(IM\), -NAMEM\(JM\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,18\)  TIME+TOFF, ZM, NAME\(I1\), NAMEG\(IM\), -NAMEM\(JM\),) N
(153c157,158) N
(<           WRITE \(6,12\)  IMERGE, NAMEG\(IMERGE\), JCOMP) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,12\)  IMERGE, NAMEG\(IMERGE\), JCOMP) N
(327c332,333) N
(<           WRITE \(6,48\)  JPAIR, H\(JPAIR\), BODY\(2*JPAIR-1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,48\)  JPAIR, H\(JPAIR\), BODY\(2*JPAIR-1\),) N
(358c364,365) N
(<           WRITE \(6,65\)  IMERGE, TIME+TOFF, BODY\(2*IPAIR-1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,65\)  IMERGE, TIME+TOFF, BODY\(2*IPAIR-1\),) N
(403a411,412) N
(> ) N
(> ) N
(1,2c1,2) N
(< 10487 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/reset.f) N
(< nbody6compare/reset.f) N
(---) N
(> 10592 2003-06-25 17:29 /work/Umi2/spurzem/5/nbody6++compare/reset.f) N
(> nbody6++compare/reset.f) N
(103c103,104) N
(<           WRITE \(6,12\)  NAMEG\(IMERGE\)) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,12\)  NAMEG\(IMERGE\)) N
(213a215) N
(> *) N
(216a219) N
(> *) N
(225c228,229) N
(<           WRITE \(6,45\)  JPAIR, H\(JPAIR\), BODY\(2*JPAIR-1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,45\)  JPAIR, H\(JPAIR\), BODY\(2*JPAIR-1\),) N
(228c232) N
(<    45     FORMAT \(' END QUAD',I4,'  H =',F7.1,'  M =',2F7.4,) N
(---) N
(>    45     FORMAT \(' END QUAD ',I4,'  H =',F7.1,'  M =',2F7.4,) N
(OUT) (Page 179/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(257c261,262) p n
(<           WRITE \(6,65\)  IMERGE, TIME+TOFF, BODY\(2*NPAIRS-1\),) N
(---) N
(>           if\(rank.eq.0\)) N
(>      &    WRITE \(6,65\)  IMERGE, TIME+TOFF, BODY\(2*NPAIRS-1\),) N
(306c311,312) N
(<               WRITE \(6,95\)  I, NAME\(I\), \(NAMEM\(L\),L=1,NMERGE\)) N
(---) N
(>               if\(rank.eq.0\)) N
(>      &        WRITE \(6,95\)  I, NAME\(I\), \(NAMEM\(L\),L=1,NMERGE\)) N
(1,2c1,2) N
(< 4368 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/resolv.f) N
(< nbody6compare/resolv.f) N
(---) N
(> 4310 2003-06-23 19:32 /work/Umi2/spurzem/5/nbody6++compare/resolv.f) N
(> nbody6++compare/resolv.f) N
(47c47) N
(<       DTU2 = DTU/24.0D0) N
(---) N
(>       DTU2 = 0.0416666666666667*DTU) N
(95d94) N
(< *       Note: Update X0 for call from KSTERM after RESOLV call in MDOT.) N
(127a127,128) N
(> ) N
(> ) N
(file /work/Umi2/spurzem/5/nbody6++compare/rpmax.f does not exist) N
(file /work/Umi2/spurzem/5/nbody6++compare/rpmin.f does not exist) N
(1,2c1,2) N
(< 607 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/rsort.f) N
(< nbody6compare/rsort.f) N
(---) N
(> 607 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/rsort.f) N
(> nbody6++compare/rsort.f) N
(7c7) N
(<       REAL*8  R\(6\)) N
(---) N
(>       REAL*8  R\(1\)) N
(1,2c1,2) N
(< 6201 2006-02-08 18:42 /work/Umi2/spurzem/5/nbody6compare/scale.f) N
(< nbody6compare/scale.f) N
(---) N
(> 4601 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/scale.f) N
(> nbody6++compare/scale.f) N
(0a1,4) N
(> # 1 "scale.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "scale.F") N
(4,5c8,9) N
(< *       Scaling to new units.) N
(< *       ---------------------) N
(---) N
(> * Scaling to new units.) N
(> * ---------------------) N
(8,13c12,28) N
(< *) N
(< *) N
(< *       Read virial ratio, rotation scaling factors & tidal radius.) N
(<       READ \(5,*\)  Q, VXROT, VZROT, RTIDE) N
(<       RSPH2 = RTIDE) N
(<       QVIR = Q) N
(---) N
(>       LOGICAL LSCALE) N
(> * Scaling if initial model is constructed or King model is read) N
(>       LSCALE = KZ\(22\).LT.2.OR.KZ\(22\).GE.6) N
(> *) N
(> # 21 "scale.F") N
(> *) N
(> * Read virial ratio, rotation scaling factors & boundary radius.) N
(OUT) (Page 180/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (90/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (181-182) 91
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       if\(rank.eq.0\)then) p n
(>       READ \(5,*\) Q, VXROT, VZROT, RSPH2) N
(>       end if) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(> ) N
(21c36) N
(< *       Form total mass and centre of mass displacements.) N
(---) N
(> * Form total mass and centre of mass displacements.) N
(27c42) N
(<    25     CONTINUE) N
(---) N
(>    25 CONTINUE) N
(30c45,47) N
(< *       Adjust coordinates and velocities to c.m. rest frame.) N
(---) N
(> * Adjust coordinates and velocities to c.m. rest frame.) N
(> * \(if start model data were read from other source do NOT scale\)\(R.Sp.\)) N
(>       IF \(LSCALE\) THEN) N
(35c52) N
(<    35     CONTINUE) N
(---) N
(>    35 CONTINUE) N
(38,41c55) N
(< *       Skip scaling of masses for unscaled upload or planetesimal disk.) N
(<       IF \(KZ\(22\).GT.2.OR.KZ\(5\).EQ.3\) GO TO 52) N
(< *) N
(< *       Scale masses to standard units of <M> = 1/N and set total mass.) N
(---) N
(> * Scale masses to standard units of <M> = 1/N.) N
(45d58) N
(<       ZMASS = 1.0) N
(47,48c60,69) N
(< *       Obtain the total kinetic & potential energy.) N
(<    52 CALL ENERGY) N
(---) N
(>       ZMASS = 1.D0) N
(> *) N
(>       END IF) N
(> *) N
(> * Obtain the total kinetic & potential energy.) N
(> ) N
(> ) N
(> ) N
(>       CALL ENERGY) N
(> ) N
(50,51c71,72) N
(< *       Use generalized virial theorem for external tidal field.) N
(<       IF \(KZ\(14\).GT.0\) THEN) N
(---) N
(> * Use generalized virial theorem for external tidal field.) N
(>       IF \(KZ\(14\).EQ.1\) THEN) N
(55,61c76,78) N
(<    55     CONTINUE) N
(<           IF \(KZ\(14\).EQ.1\) THEN) N
(< *       Use Chandrasekhar eq. \(5.535\) for virial ratio \(rotating frame only\).) N
(<               VIR = POT - 2.0*\(ETIDE + 0.5*TIDAL\(4\)*AZ\)) N
(<           ELSE) N
(<               VIR = POT - 2.0*ETIDE) N
(<           END IF) N
(---) N
(>    55 CONTINUE) N
(>           ZKIN1 = ZKIN + 0.5*TIDAL\(4\)*AZ) N
(>           VIR = POT - 2.0*ETIDE) N
(OUT) (Page 181/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(62a80) p n
(>           ZKIN1 = ZKIN) N
(66,89c84,102) N
(< *       Allow two optional ways of skipping standard velocity scaling.) N
(<       IF \(KZ\(22\).GT.2.OR.KZ\(5\).EQ.2.OR.KZ\(5\).EQ.3\) THEN) N
(<           QV = SQRT\(Q*VIR/ZKIN\)) N
(<           E0 = ZKIN*QV**2 - POT + ETIDE) N
(<           SX = 1.0) N
(< *       Rescale velocities to new masses for two Plummer spheres.) N
(<           IF \(KZ\(5\).EQ.2\) THEN) N
(<               ZKIN = 0.0) N
(<               DO 57 I = 1,N) N
(<                   DO 56 K = 1,3) N
(<                       XDOT\(K,I\) = XDOT\(K,I\)*QV) N
(<                       ZKIN = ZKIN + 0.5*BODY\(I\)*XDOT\(K,I\)**2) N
(<    56             CONTINUE) N
(<    57         CONTINUE) N
(<               E0 = ZKIN - POT + ETIDE) N
(<               Q = ZKIN/POT) N
(<               WRITE \(6,59\)  E0, ZKIN/POT) N
(<    59         FORMAT \(/,12X,'UNSCALED ENERGY    E =',F10.6,) N
(<      &                                       '  Q =',F6.2\)) N
(<           ELSE) N
(<               IF \(KZ\(5\).EQ.3\) E0 = ZKIN - POT) N
(<               WRITE \(6,54\)  E0) N
(<    54         FORMAT \(/,12X,'UNSCALED ENERGY    E =',F10.6\)) N
(<           END IF) N
(---) N
(> * Scale non-zero velocities by virial theorem ratio.) N
(> * \(if start model data were read from other source do NOT scale\)\(R.Sp.\)) N
(>       IF \(LSCALE\) THEN) N
(>       IF \(ZKIN.GT.0.0D0\) THEN) N
(>           QV = SQRT\(Q*VIR/ZKIN1\)) N
(>           DO 60 I = 1,N) N
(>               DO 58 K = 1,3) N
(>                   XDOT\(K,I\) = XDOT\(K,I\)*QV) N
(>    58 CONTINUE) N
(>    60 CONTINUE) N
(>       END IF) N
(> *) N
(> * Scale total energy to standard units \(E = -0.25 for Q < 1\).) N
(>       E0 = -0.25) N
(>       ETOT = \(Q - 1.0\)*POT) N
(> * Include case of hot system inside reflecting boundary.) N
(>       IF \(KZ\(29\).GT.0.AND.Q.GT.1.0\) THEN) N
(>           E0 = ETOT) N
(>       END IF) N
(91,132c104,128) N
(< *       Scale non-zero velocities by virial theorem ratio.) N
(<           IF \(ZKIN.GT.0.0D0\) THEN) N
(<               QV = SQRT\(Q*VIR/ZKIN\)) N
(<               DO 60 I = 1,N) N
(<                   DO 58 K = 1,3) N
(<                       XDOT\(K,I\) = XDOT\(K,I\)*QV) N
(<    58             CONTINUE) N
(<    60         CONTINUE) N
(<           ELSE) N
(<               QV = 1.0) N
(<           END IF) N
(< *) N
(< *       Scale total energy to standard units \(E = -0.25 for Q < 1\).) N
(<           E0 = -0.25) N
(< *       Include case of hot system inside reflecting boundary.) N
(<           IF \(KZ\(29\).GT.0.AND.Q.GT.1.0\) E0 = 0.25) N
(< *         ETOT = \(Q - 1.0\)*POT) N
(<           ETOT = ZKIN*QV**2 - POT + ETIDE) N
(< *       Note that final ETOT will differ from -0.25 since ETIDE = 0.) N
(<           IF \(Q.LT.1.0\) THEN) N
(<               SX = E0/ETOT) N
(OUT) (Page 182/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (91/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (183-184) 92
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           ELSE) p n
(<               SX = 1.0) N
(<           END IF) N
(< *) N
(<           WRITE \(6,65\)  SX, ETOT, BODY\(1\), BODY\(N\), ZMASS/FLOAT\(N\)) N
(<    65     FORMAT \(//,12X,'SCALING:    SX =',F6.2,'  E =',1PE10.2,) N
(<      &                   '  M\(1\) =',E9.2,'  M\(N\) =',E9.2,'  <M> =',E9.2\)) N
(< *) N
(< *       Scale coordinates & velocities to the new units.) N
(<           RIJ2 = 0.0) N
(<           DO 70 I = 1,N) N
(<               RIJ = 0.0) N
(<               DO 68 K = 1,3) N
(<                   X\(K,I\) = X\(K,I\)/SX) N
(<                   XDOT\(K,I\) = XDOT\(K,I\)*SQRT\(SX\)) N
(<                   RIJ = RIJ + X\(K,I\)*X\(K,I\)) N
(<    68         CONTINUE) N
(<               RIJ2 = MAX\(RIJ2,RIJ\)) N
(<    70     CONTINUE) N
(<           RIJ2 = SQRT\(RIJ2\)) N
(<       ENDIF) N
(---) N
(>       ETOT = ZKIN + POT) N
(>       E0 = ETOT) N
(>       END IF) N
(> * Define scaling factor \(set E0 = ETOT if energy scaling not desired\).) N
(>       SX = E0/ETOT) N
(> *) N
(>           if\(rank.eq.0\)) N
(>      *WRITE \(6,65\) SX, ETOT, BODY\(1\), BODY\(N\), ZMASS/FLOAT\(N\)) N
(>    65 FORMAT \() N
(>      & '  M\(1\) =',E9.2,'  M\(N\) =',E9.2,'  <M> =',E9.2\)) N
(> *) N
(> * Scale coordinates & velocities to the new units.) N
(>       DO 70 I = 1,N) N
(>           DO 68 K = 1,3) N
(>               X\(K,I\) = X\(K,I\)/SX) N
(>               XDOT\(K,I\) = XDOT\(K,I\)*SQRT\(SX\)) N
(>    68 CONTINUE) N
(>    70 CONTINUE) N
(> * In case of no tidal field choose very large RTIDE \(R.Sp.\)) N
(>       IF \(TIDAL\(1\).EQ.0.0D0.AND.KZ\(23\).LE.2\) RTIDE = 1.D8) N
(> * In case of King model scale initial tidal radius) N
(>       IF\(KZ\(23\).GE.3\)THEN) N
(>       RTIDE = RTIDE/SX) N
(>       if\(rank.eq.0\)PRINT*,' RTIDE =',RTIDE,' ETID=',ZMASS/RTIDE) N
(>       END IF) N
(134c130) N
(< *       Check whether to include rotation \(VXROT = 0 in standard case\). ) N
(---) N
(> * Check whether to include rotation \(VXROT = 0 in standard case\).) N
(137c133) N
(< *       Set angular velocity for retrograde motion \(i.e. star clusters\).) N
(---) N
(> * Set angular velocity for retrograde motion \(i.e. star clusters\).) N
(139,141c135,138) N
(<           WRITE \(6,75\)  VXROT, VZROT, OMEGA) N
(<    75     FORMAT \(/,12X,'VXROT =',F6.2,'  VZROT =',F6.2,) N
(<      &                                                 '  OMEGA =',F7.2\)) N
(---) N
(>        if\(rank.eq.0\)) N
(>      * WRITE \(6,75\) VXROT, VZROT, OMEGA) N
(>    75 FORMAT \(/,12X,'VXROT =',F6.2,'  VZROT =',F6.2,) N
(>      & '  OMEGA =',F7.2\)) N
(143c140) N
(< *       Add solid-body rotation about Z-axis \(reduce random velocities\).) N
(---) N
(> * Add solid-body rotation about Z-axis \(reduce random velocities\).) N
(148,164c145) N
(OUT) (Page 183/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<    80     CONTINUE) p n
(<       END IF) N
(< *) N
(< *       Check option for writing the initial conditions on unit 10.) N
(<       IF \(KZ\(22\).EQ.1\) THEN) N
(<           DO 85 I = 1,N) N
(<               WRITE \(10,84\)  BODY\(I\), \(X\(K,I\),K=1,3\), \(XDOT\(K,I\),K=1,3\)) N
(<    84         FORMAT \(1P,7E14.6\)) N
(<    85     CONTINUE) N
(<       END IF) N
(< *) N
(< *       Check option for reading initial subsystems.) N
(<       IF \(KZ\(24\).GT.0\) THEN) N
(<           K = KZ\(24\)) N
(<           DO 90 I = 1,K) N
(<               READ \(5,*\)  \(X\(J,I\),J=1,3\), \(XDOT\(J,I\),J=1,3\)) N
(<    90     CONTINUE) N
(---) N
(>    80 CONTINUE) N
(167c148) N
(< *       Set initial crossing time in scaled units.) N
(---) N
(> * Set initial crossing time in scaled units.) N
(171c152) N
(< *       Obtain approximate half-mass radius after scaling.) N
(---) N
(> * Obtain approximate half-mass radius after scaling.) N
(173c154) N
(< *       Set square radius of reflecting sphere \(used with option 29\).) N
(---) N
(> * Set square radius of reflecting sphere.) N
(175c156) N
(< *       Form equilibrium rms velocity \(temporarily defined as VC\).) N
(---) N
(> * Form equilibrium rms velocity \(temporarily defined as VC\).) N
(178c159) N
(< *       Check for general binary search of initial condition.) N
(---) N
(> * Check for general binary search of initial condition.) N
(183c164) N
(< *       Print half-mass relaxation time & equilibrium crossing time.) N
(---) N
(> * Print half-mass relaxation time & equilibrium crossing time.) N
(186c167) N
(<       WRITE \(6,95\)  TRH, TCR, 2.0*RSCALE/VC) N
(---) N
(>       if\(rank.eq.0\)WRITE \(6,95\) TRH, TCR, 2.0*RSCALE/VC) N
(188c169) N
(<      &                                            '  2<R>/<V> =',E8.1,/\)) N
(---) N
(>      & '  2<R>/<V> =',E8.1,/\)) N
(1,2c1,2) N
(< 4086 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/search.f) N
(< nbody6compare/search.f) N
(---) N
(> 4334 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/search.f) N
(> nbody6++compare/search.f) N
(14a15,22) N
(> *       Predict current state vector of body #I to order FDOT.) N
(>           S = TIME - T0\(I\)) N
(>           DO 1 K = 1,3) N
(>               X\(K,I\) = \(\(FDOT\(K,I\)*S + F\(K,I\)\)*S + X0DOT\(K,I\)\)*S +) N
(>      &                                                           X0\(K,I\)) N
(>               XDOT\(K,I\) = \(3.0*FDOT\(K,I\)*S + 2.0*F\(K,I\)\)*S + X0DOT\(K,I\)) N
(>     1     CONTINUE) N
(> *) N
(26a35,41) N
(> *       Prediction \(R.Sp.\)) N
(>           S = TIME - T0\(J\)) N
(OUT) (Page 184/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (92/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (185-186) 93
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           DO 25 K = 1,3) p n
(>               X\(K,J\) = \(\(FDOT\(K,J\)*S + F\(K,J\)\)*S + X0DOT\(K,J\)\)*S +) N
(>      &                                                           X0\(K,J\)) N
(>               XDOT\(K,J\) = \(3.0*FDOT\(K,J\)*S + 2.0*F\(K,J\)\)*S + X0DOT\(K,J\)) N
(>    25     CONTINUE) N
(49a65,71) N
(> *       Prediction \(R.Sp.\)) N
(>           S = TIME - T0\(J\)) N
(>           DO 65 KK = 1,3) N
(>           X\(KK,J\) = \(\(FDOT\(KK,J\)*S + F\(KK,J\)\)*S + X0DOT\(KK,J\)\)*S +) N
(>      &                                                         X0\(KK,J\)) N
(>           XDOT\(KK,J\) = \(3.0*FDOT\(KK,J\)*S + 2.0*F\(KK,J\)\)*S + X0DOT\(KK,J\)) N
(>    65     CONTINUE) N
(78,103c100) N
(<       IF \(RDOT.GT.0.02*SQRT\(\(BODY\(I\) + BODY\(JCOMP\)\)*RIJMIN\)\) GO TO 10) N
(< *) N
(< *       Ensure a massive neighbour is included in perturbation estimate.) N
(<       BCM = BODY\(I\) + BODY\(JCOMP\)) N
(<       IF \(BODY1.GT.10.0*BCM\) THEN) N
(<           JBIG = 0) N
(<           BIG = BCM) N
(<           NNB1 = LIST\(1,I\) + 1) N
(<           DO 20 L = 2,NNB1) N
(<               J = LIST\(L,I\)) N
(<               IF \(BODY\(J\).GT.BIG\) THEN) N
(<                   JBIG = J) N
(<                   BIG = BODY\(J\)) N
(<               END IF) N
(<    20     CONTINUE) N
(< *       Check whether already present, otherwise add to JLIST.) N
(<           DO 25 L = 1,NCLOSE) N
(<               IF \(JLIST\(L\).EQ.JBIG\) THEN) N
(<                   JBIG = 0) N
(<               END IF) N
(<    25     CONTINUE) N
(<           IF \(JBIG.GT.0\) THEN) N
(<               NCLOSE = NCLOSE + 1) N
(<               JLIST\(NCLOSE\) = JBIG) N
(<           END IF) N
(<       END IF) N
(---) N
(>       IF \(RDOT.GT.0.1*SQRT\(\(BODY\(I\) + BODY\(JCOMP\)\)*RIJMIN\)\) GO TO 10) N
(109c106) N
(<       GI = PERT*RJMIN2/BCM) N
(---) N
(>       GI = PERT*RJMIN2/\(BODY\(I\) + BODY\(JCOMP\)\)) N
(111,112c108,109) N
(< *         IF \(KZ\(4\).GT.0.AND.TIME-TLASTT.GT.4.44*TCR/FLOAT\(N\)\)) N
(< *    &                                             CALL EVOLVE\(JCOMP,0\)) N
(---) N
(>           IF \(KZ\(4\).GT.0.AND.TIME-TLASTT.GT.4.44*TCR/FLOAT\(N\)\)) N
(>      &                                             CALL EVOLVE\(JCOMP,0\)) N
(1,2c1,2) N
(< 1004 2004-06-17 18:58 /work/Umi2/spurzem/5/nbody6compare/select.f) N
(< nbody6compare/select.f) N
(---) N
(> 993 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/select.f) N
(> nbody6++compare/select.f) N
(12d11) N
(<       SAVE) N
(1,2c1,2) N
(< 7067 2005-03-28 11:29 /work/Umi2/spurzem/5/nbody6compare/setsys.f) N
(< nbody6compare/setsys.f) N
(---) N
(> 5171 2003-06-25 20:04 /work/Umi2/spurzem/5/nbody6++compare/setsys.f) N
(> nbody6++compare/setsys.f) N
(8c8,9) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(OUT) (Page 185/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) p n
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(17,21d17) N
(<       COMMON/BINARY/  ZM\(4,MMAX\),XREL\(3,MMAX\),VREL\(3,MMAX\),) N
(<      &                HM\(MMAX\),UM\(4,MMAX\),UMDOT\(4,MMAX\),) N
(<      &                NAMEM\(MMAX\),NAMEG\(MMAX\),KSTARM\(MMAX\)) N
(<       SAVE JSAVE) N
(<       INTEGER JSAVE\(3\)) N
(74,98d69) N
(< *) N
(< *       Check for addition of binary \(NCH < 4\).) N
(<       IF \(JCMAX.GT.N.AND.NCH.LT.4\) THEN) N
(<           KSP2 = JCMAX - N) N
(<           IF \(KSP2.GT.KSPAIR\) KSP2 = KSP2 - 1) N
(<           KSPAIR = KSP2) N
(<           JCOMP = 0) N
(< *       Save current members to prevent over-writing in KSTERM.) N
(<           DO 6 L = 1,NCH) N
(<               JSAVE\(L\) = JLIST\(L\)) N
(<     6     CONTINUE) N
(<           CALL KSTERM) N
(< *       Note that second binary will now come first in N-body arrays.) N
(<           DO 7 L = 1,NCH) N
(<               JLIST\(L\) = JSAVE\(L\)) N
(<     7     CONTINUE) N
(< *       Add terminated KS components to chain arrays.) N
(<           DO 8 L = 1,2) N
(<               NCH = NCH + 1) N
(<               JLIST\(NCH\) = 2*NPAIRS + L) N
(<               NAMEC\(NCH\) = NAME\(2*NPAIRS+L\)) N
(<               BODYC\(NCH\) = BODY\(2*NPAIRS+L\)) N
(<               M\(NCH\) = BODY\(2*NPAIRS+L\)) N
(<     8     CONTINUE) N
(<       END IF) N
(136d106) N
(<           JG = 0) N
(138,152c108,110) N
(< *       Identify merger index and ghost for addition to chain.) N
(<               DO 12 K = 1,NMERGE) N
(<                   IF \(NAMEM\(K\).EQ.NAME\(JCLOSE\)\) THEN) N
(<                       IM = K) N
(<                   END IF) N
(<    12         CONTINUE) N
(< *       Note ghost must be single for maximum chain membership of 6.) N
(<               DO 14 J = 1,N) N
(<                   IF \(BODY\(J\).EQ.0.0D0.AND.NAME\(J\).EQ.NAMEG\(IM\)\) THEN) N
(<                       JG = J) N
(<                   END IF) N
(<    14         CONTINUE) N
(<               WRITE \(6,15\)  NAME\(JCLOSE\), NAME\(JG\), RSUM,  R\(JCLOSE-N\)) N
(<    15         FORMAT \(' SETSYS HIARCH    NM NMG RSUM RB ',) N
(<      &                                   I6,I5,1P,2E10.2\)) N
(---) N
(>               WRITE \(6,15\)  JCLOSE, RSUM,  R\(JCLOSE-N\)) N
(>    15         FORMAT \(/,5X,'WARNING!    SETSYS    JCLOSE RSUM R ',) N
(>      &                                            I5,1P,2E10.2\)) N
(174c132) N
(< *       Terminate KS pair and copy components \(JCOMP=0 excludes ghost\).) N
(---) N
(> *       Terminate KS pair and copy components.) N
(192,204d149) N
(< *       See whether to include merger ghost.) N
(<           IF \(JG.GT.0\) THEN) N
(<               NCH = NCH + 1) N
(<               JLIST\(NCH\) = JG) N
(<               NAMEC\(NCH\) = NAME\(JG\)) N
(<               BODYC\(NCH\) = BODY\(JG\)) N
(<               M\(NCH\) = BODY\(JG\)) N
(<           END IF) N
(OUT) (Page 186/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (93/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (187-188) 94
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           IF \(NCH.GT.6\) THEN) p n
(<               WRITE \(6,30\)  NCH) N
(<    30         FORMAT \(' DANGER!    NCH ',I4\)) N
(<               STOP) N
(<           END IF) N
(1,2c1,2) N
(< 9125 2006-03-06 18:33 /work/Umi2/spurzem/5/nbody6compare/setup.f) N
(< nbody6compare/setup.f) N
(---) N
(> 2801 2002-08-17 15:15 /work/Umi2/spurzem/5/nbody6++compare/setup.f) N
(> nbody6++compare/setup.f) N
(42c42) N
(<       GO TO 90) N
(---) N
(>       GO TO 60) N
(92,95d91) N
(<           IF \(KZ\(22\).EQ.1\) THEN) N
(<               WRITE \(10,46\)  BODY\(I\), \(X\(K,I\),K=1,3\), \(XDOT\(K,I\),K=1,3\)) N
(<    46         FORMAT \(1P,7E14.6\)) N
(<           END IF) N
(97,269d92) N
(<       IF\(KZ\(22\).EQ.1\) CALL FLUSH\(10\)) N
(< *) N
(< *       Check initial conditions for two orbiting Plummer spheres.) N
(<       IF \(KZ\(5\).LE.1\) GO TO 90) N
(< *) N
(< *       Save membership of first system for colour plot \(N2 = NZERO - N1\).) N
(<       N1 = N) N
(<       IF \(KZ\(5\).EQ.2\) THEN) N
(<       READ \(5,*\)  APO, ECC, N2, SCALE) N
(<       N2 = MIN\(N,N2\)) N
(<       SEMI = APO/\(1.0 + ECC\)) N
(<       SEMI = MIN\(SEMI,50.0D0\)) N
(<       SEMI = MAX\(SEMI,2.0D0\)) N
(<       ECC = MIN\(ECC,0.999D0\)) N
(<       ECC = MAX\(ECC,0.0D0\)) N
(<       ZM2 = 0.0) N
(<       KSKIP = N1/N2) N
(<       DO 52 I = 1,N2) N
(<           J = KSKIP*I) N
(<           ZM2 = ZM2 + BODY\(J\)) N
(<    52 CONTINUE) N
(<       FAC1 = ZM2/\(ZMASS + ZM2\)) N
(<       FAC2 = ZMASS/\(ZMASS + ZM2\)) N
(< *       Restrict volume ratio to 125 \(i.e. unreasonable density contrast\).) N
(<       IF \(SCALE.LE.0.2D0\) SCALE = 0.2) N
(< *       Increase total mass \(save in ZMTOT for possible use in XTRNL0\).) N
(<       ZMTOT = ZMTOT + ZMBAR*ZM2) N
(<       ZMASS = ZMASS + ZM2) N
(< *       Set apocentre velocity for new combined mass.) N
(<       VAP = SQRT\(ZMASS/SEMI\)*SQRT\(\(1.0 - ECC\)/\(1.0 + ECC\)\)) N
(<       DO 55 I = 1,N) N
(<           IF \(I.LE.N2\) THEN) N
(< *       Copy members from first system by uniform skipping \(N2 <= N1\).) N
(<           J = KSKIP*I) N
(<           BODY\(I+N\) = BODY\(J\)) N
(<           X\(1,I+N\) = SCALE*X\(1,J\) + FAC2*APO) N
(<           X\(2,I+N\) = SCALE*X\(2,J\)) N
(<           X\(3,I+N\) = SCALE*X\(3,J\)) N
(<           XDOT\(1,I+N\) = XDOT\(1,J\)/SQRT\(SCALE\)) N
(<           XDOT\(2,I+N\) = XDOT\(2,J\)/SQRT\(SCALE\) + FAC2*VAP) N
(<           XDOT\(3,I+N\) = XDOT\(3,J\)/SQRT\(SCALE\)) N
(<           END IF) N
(<           X\(1,I\) = X\(1,I\) - FAC1*APO) N
(<           XDOT\(2,I\) = XDOT\(2,I\) - FAC1*VAP) N
(<    55 CONTINUE) N
(<       ELSE IF \(KZ\(5\).EQ.3\) THEN) N
(< *       Prepare case of accretion disk with massive perturber.) N
(<           READ \(5,*\)  APO, ECC, DMIN, SCALE) N
(OUT) (Page 187/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           RIN = 0.5) p n
(<           ROUT = 1.0) N
(<           ZMASS = 1.0) N
(<           BODY\(1\) = ZMASS) N
(<           DO 99 K = 1,3) N
(<               X\(K,1\) = 0.0) N
(<               XDOT\(K,1\) = 0.0) N
(<    99     CONTINUE) N
(< *       Generate a thin disk population in circular orbits.) N
(<           DO 100 I = 2,N) N
(<               BODY\(I\) = 1.0D-03/FLOAT\(N\)) N
(<               SEMI = RIN + \(ROUT - RIN\)*FLOAT\(I\)/FLOAT\(N\)) N
(<               VCIRC = SQRT\(\(BODY\(1\) + BODY\(I\)\)/SEMI\)) N
(<               PHASE = TWOPI*RAN2\(KDUM\)) N
(<               X\(1,I\) = SEMI*COS\(PHASE\)) N
(<               X\(2,I\) = SEMI*SIN\(PHASE\)) N
(<               X\(3,I\) = 0.01*\(2.0*RAN2\(KDUM\) - 1.0\)) N
(<               XDOT\(1,I\) = -VCIRC*SIN\(PHASE\)) N
(<               XDOT\(2,I\) = VCIRC*COS\(PHASE\)) N
(<               XDOT\(3,I\) = 0.01*VCIRC*\(2.0*RAN2\(KDUM\) - 1.0\)) N
(<   100     CONTINUE) N
(< *       Define membership of perturber and ensure no external tide.) N
(<           N2 = 1) N
(<           KZ\(14\) = 0) N
(< *       Redefine solar mass unit and astronomical length scale in AU.) N
(<           ZMBAR = 1.0) N
(<           RBAR = 1.0/2.05D+05) N
(<           BODY\(N+1\) = SCALE*BODY\(1\)) N
(<           ZMTOT = ZMASS + BODY\(N+1\)) N
(< *       Set appropriate mass ratios for transforming to new c.m. frame.) N
(<           FAC1 = BODY\(N+1\)/\(ZMASS + BODY\(N+1\)\)) N
(<           FAC2 = ZMASS/\(ZMASS + BODY\(N+1\)\)) N
(<           ZMASS = ZMASS + BODY\(N+1\)) N
(< *       Form orbital elements for massive perturber \(avoid ECC = 1\).) N
(<           IF \(ABS\(ECC - 1.0\).GT.1.0D-05\) THEN) N
(<               SEMI = DMIN/\(1.0 - ECC\)) N
(<           ELSE) N
(<               SEMI = -1.0D+05) N
(<           END IF) N
(<           VM2 = ZMASS*\(2.0/DMIN - 1.0/SEMI\)) N
(<           VAP2 = ZMASS*\(2.0/APO - 1.0/SEMI\)) N
(< *       Determine initial y-velocity from angular momentum conservation.) N
(<           VY = SQRT\(VM2\)*DMIN/APO) N
(<           VX = SQRT\(VAP2 - VY**2\)) N
(< *       Place perturber on the Y-axis with appropriate velocities.) N
(<           X\(1,N+1\) = APO*FAC2) N
(<           X\(2,N+1\) = 0.0) N
(<           X\(3,N+1\) = 0.0) N
(<           XDOT\(1,N+1\) = -VX*FAC2) N
(<           XDOT\(2,N+1\) = VY*FAC2) N
(<           XDOT\(3,N+1\) = 0.0) N
(< *       Displace the disk members and include negative y-velocity.) N
(<           DO 120 I = 1,N) N
(<               X\(1,I\) = X\(1,I\) - FAC1*APO) N
(<               XDOT\(1,I\) = XDOT\(1,I\) + FAC1*VX) N
(<               XDOT\(2,I\) = XDOT\(2,I\) - FAC1*VY) N
(<   120     CONTINUE) N
(<       ELSE IF \(KZ\(5\).EQ.4\) THEN) N
(< *       Include two massive bodies \(ECC > 1: NAME = 1 & 2 free floating\).) N
(<           N2 = 0) N
(<           READ \(5,*\)  SEMI, ECC, ZM1, ZM2) N
(<           WRITE \(6,125\)  SEMI, ECC, ZM1, ZM2) N
(<   125     FORMAT \(/,12X,'MASSIVE BODIES    A =',1P,E9.1,) N
(<      &            '  E =',0P,F6.2,'  M1/<M> =',F6.2,'  M2/<M> =',F6.2\)) N
(<           BODY\(1\) = ZM1) N
(<           BODY\(2\) = ZM2) N
(<           IF \(ECC.LT.1.0\) THEN) N
(< *       Set apocentre velocity for new combined mass \(using NAME = 1 & 2\).) N
(<               VAP = SQRT\(\(ZM1 + ZM2\)/SEMI\)*SQRT\(\(1.0 - ECC\)/\(1.0 + ECC\)\)) N
(OUT) (Page 188/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (94/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (189-190) 95
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               FAC1 = ZM2/\(ZM1 + ZM2\)) p n
(<               FAC2 = ZM1/\(ZM1 + ZM2\)) N
(<               DO 130 K = 1,3) N
(<                   X\(K,1\) = 0.0) N
(<                   X\(K,2\) = 0.0) N
(<                   XDOT\(K,2\) = 0.0) N
(<   130         CONTINUE) N
(< *       Initialize binary with c.m. at rest \(elements change in SCALE\).) N
(<               X\(1,1\) = -FAC1*SEMI*\(1.0 + ECC\)) N
(<               X\(1,2\) = FAC2*SEMI*\(1.0 + ECC\)) N
(<               XDOT\(2,1\) = -FAC1*VAP) N
(<               XDOT\(2,2\) = FAC2*VAP) N
(<           END IF) N
(<       ELSE) N
(<           GO TO 90) N
(<       END IF) N
(< *) N
(< *       Specify new membership.) N
(<       N = N + N2) N
(<       NZERO = N) N
(<       NTOT = N) N
(<       IF \(N.GE.NMAX-10\) THEN) N
(<           WRITE \(6,56\)  N, NMAX) N
(<    56     FORMAT \(' DANGER!    LIMIT EXCEEDED   N =',I6,'  NMAX =',I6\)) N
(<           STOP) N
(<       END IF) N
(< *) N
(<       IF \(KZ\(5\).EQ.2\) THEN) N
(<           WRITE \(6,58\)  SEMI, ECC, N1, N2, SCALE) N
(<    58     FORMAT \(/,12X,'PLUMMER BINARY    A =',F6.2,'  E =',F6.2,) N
(<      &                  '  N1 =',I6,'  N2 =',I6,'  SCALE =',F6.2\)) N
(<       ELSE IF \(KZ\(5\).EQ.3\) THEN) N
(<           WRITE \(6,59\)  APO, ECC, DMIN, SCALE) N
(<    59     FORMAT \(/,12X,'MASSIVE PERTURBER    APO =',F6.2,'  E =',F6.2,) N
(<      &                  '  DMIN =',F6.2,'  MP/M1 =',F6.2\)) N
(<       END IF) N
(< *) N
(< *       Re-initialize centre of mass terms.) N
(<       DO 60 K = 1,3) N
(<           CMR\(K\) = 0.0D0) N
(<           CMRDOT\(K\) = 0.0D0) N
(<    60 CONTINUE) N
(<       ZMASS = 0.0) N
(<       DO 70 I = 1,N) N
(<           ZMASS = ZMASS + BODY\(I\)) N
(<           DO 65 K = 1,3) N
(<               CMR\(K\) = CMR\(K\) + BODY\(I\)*X\(K,I\)) N
(<               CMRDOT\(K\) = CMRDOT\(K\) + BODY\(I\)*XDOT\(K,I\)) N
(<    65     CONTINUE) N
(<    70 CONTINUE) N
(<       DO 80 I = 1,N) N
(<           DO 75 K = 1,3) N
(<               X\(K,I\) = X\(K,I\) - CMR\(K\)/ZMASS) N
(<               XDOT\(K,I\) = XDOT\(K,I\) - CMRDOT\(K\)/ZMASS) N
(<    75     CONTINUE) N
(<    80 CONTINUE) N
(272c95) N
(<    90 IDUM1 = KDUM) N
(---) N
(>    60 IDUM1 = KDUM) N
(1,2c1,2) N
(< 2422 2006-09-10 16:50 /work/Umi2/spurzem/5/nbody6compare/shrink.f) N
(< nbody6compare/shrink.f) N
(---) N
(> 2407 2000-05-04 21:24 /work/Umi2/spurzem/5/nbody6++compare/shrink.f) N
(> nbody6++compare/shrink.f) N
(1c1) N
(<       SUBROUTINE SHRINK\(TMIN\)) N
(---) N
(OUT) (Page 189/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       SUBROUTINE SHRINK) p n
(8c8) N
(<       PARAMETER  \(DTM = 0.03125D0\)) N
(---) N
(>       PARAMETER  \(DTM = 0.03125\)) N
(54,55c54,55) N
(< *       See whether the regular time-step can be shortened to TMIN.) N
(<               IF \(T0R\(J\) + 0.5*STEPR\(J\).GE.TMIN.AND.IT.LT.5\) THEN) N
(---) N
(> *       See whether the regular time-step can be shortened.) N
(>               IF \(T0R\(J\) + 0.5*STEPR\(J\).GT.TIME.AND.IT.LT.5\) THEN) N
(73a74) N
(> ) N
(1,2c1,2) N
(< 12032 2005-10-26 16:11 /work/Umi2/spurzem/5/nbody6compare/slow.f) N
(< nbody6compare/slow.f) N
(---) N
(> 5097 1999-12-13 11:35 /work/Umi2/spurzem/5/nbody6++compare/slow.f) N
(> nbody6++compare/slow.f) N
(9,10c9,10) N
(<       LOGICAL  KSLOW,KCOLL,KCASE) N
(<       REAL*8  KSCH,KSNEW,VI\(NMX3\),VC\(NMX3\),RC1\(3\),RC2\(3\)) N
(---) N
(>       LOGICAL  KSLOW,KCOLL) N
(>       REAL*8  Y\(NMX8\),KSCH,KSNEW) N
(16d15) N
(<       COMMON/CHREG/  TIMEC,TMAX,RMAXC,CM\(10\),NAMEC\(6\),NSTEP1,KZ27,KZ30) N
(20,29c19) N
(< *       Check for switching off slow-down at start of iteration.) N
(<       if \(GCRIT.eq.0.0d0\) then) N
(<           ksnew = 1.0) N
(<           go to 90) N
(<       end if) N
(< *) N
(< *       Set logical variable to avoid multiple copies of QK & PK.) N
(<       KCASE = .FALSE.) N
(< *) N
(< *       Perform perturbation check if slow-down not active.) N
(---) N
(> *       Perform fast perturbation check if slow-down not active.) N
(33c23) N
(<           DO 1 I = 1,N-1) N
(---) N
(>           DO I = 1,N-1) N
(38c28) N
(<     1     CONTINUE) N
(---) N
(>           END DO) N
(40,80c30) N
(< *       Check carefully two possible binaries \(eccentricity effect\).) N
(<           IF \(N.GT.3\) THEN) N
(<               KCASE = .TRUE.) N
(< *       Save QK & PK and copy current configuration for EREL & TRANSK.) N
(<               DO 5 I = 1,N-1) N
(<                   KS = 4*\(I - 1\)) N
(<                   DO 4 J = 1,4) N
(<                       QK\(KS+J\) = Q\(KS+J\)) N
(<                       PK\(KS+J\) = P\(KS+J\)) N
(<     4             CONTINUE) N
(<     5         CONTINUE) N
(< *       Evaluate first semi-major axis from non-singular variables.) N
(<               K1 = INAME\(i1\)) N
(<               K2 = INAME\(i1+1\)) N
(<               CALL EREL\(i1,EB,SEMI\)) N
(< *       Determine index of second smallest separation.) N
(<               RI2 = 0.0) N
(<               DO 10 I = 1,N-1) N
(<                   IF \(I.NE.I1.AND.RINV\(I\).GT.RI2\) THEN) N
(<                       I2 = I) N
(OUT) (Page 190/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (95/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (191-192) 96
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<                       RI2 = RINV\(I\)) p n
(<                   END IF) N
(<    10         CONTINUE) N
(< *       Obtain second semi-major axis \(errors only affect decision-making\).) N
(<               K1 = INAME\(i2\)) N
(<               K2 = INAME\(i2+1\)) N
(<               CALL EREL\(i2,EB,SEMI2\)) N
(< *       Switch to #I2 if second binary is smaller or first pair is not bound.) N
(<               IF \(SEMI2.GT.0.0\) THEN) N
(<                   IF \(SEMI2.LT.SEMI.OR.SEMI.LT.0.0\) THEN) N
(<                       I1 = I2) N
(<                       SEMI = SEMI2) N
(<                       RM = RINV\(I2\)) N
(<                   END IF) N
(< *       Exit in case of two hyperbolic two-body motions.) N
(<               ELSE IF \(SEMI.LT.0.0\) THEN) N
(<                   GO TO 100) N
(<               END IF) N
(<           END IF) N
(< *) N
(< *       Sum the perturbing forces m/r^3 next to #i1 \(two terms if i1 = 2\).) N
(---) N
(> *       Sum the perturbating forces m/r^3 next to #i1.) N
(82c32) N
(<           do 15 i = 1,n-1) N
(---) N
(>           do i = 1,n-1) N
(88,109c38) N
(<    15     continue) N
(< *) N
(< *       Include one more contribution for two consecutive perturbers.) N
(<           if \(i1.eq.1\) then) N
(<               LJ = 3*i1) N
(<               do k = 1,3) N
(<                   RC2\(k\) = XC\(k+LJ+3\) + XC\(k+LJ\)) N
(<               end do) N
(< *       Add perturbation from second subsequent member \(i = i1 + 2\).) N
(<               RJ = SQRT\(RC2\(1\)**2 + RC2\(2\)**2 + RC2\(3\)**2\)) N
(<               j = i1 + 3) N
(<               sum = sum + mc\(j\)/RJ**3) N
(<           else if \(i1.ge.3\) then) N
(<               LJ = 3*\(i1 - 2\)) N
(<               do k = 1,3) N
(<                   RC2\(k\) = XC\(k+LJ-3\) + XC\(k+LJ\)) N
(<               end do) N
(< *       Add the previous perturbation \(neglected in do 15 loop\).) N
(<               RJ = SQRT\(RC2\(1\)**2 + RC2\(2\)**2 + RC2\(3\)**2\)) N
(<               j = i1 - 2) N
(<               sum = sum + mc\(j\)/RJ**3) N
(<           end if) N
(---) N
(>           end do) N
(115c44) N
(<               GO TO 100) N
(---) N
(>               GO TO 50) N
(118a48,50) N
(> *       Save the current variables in common \(RINV is OK after switching\).) N
(>       CALL YSAVE\(Y\)) N
(> *) N
(120,178c52,55) N
(<       IF \(KSLOW.AND.N.GT.3\) THEN) N
(<           DO 20 I = 1,N-1) N
(<               IF \(KSCH\(I\).GT.1.0D0\) i1 = i) N
(<    20     CONTINUE) N
(< *       See whether a closer particle pair is present \(factor of 2\).) N
(<           I2 = 0) N
(<           R1 = 1.0/RINV\(I1\)) N
(<           DO 60 I = 1,N-1) N
(OUT) (Page 191/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               RI2 = 1.0/RINV\(I\)) p n
(<               IF \(I.NE.I1.AND.R1.LT.0.5*RI2\) THEN) N
(<                   I2 = I) N
(<                   IF \(R1.LT.0.1*SEMI.AND.RI2.LT.0.1*SEMI\) THEN) N
(<                       GO TO 100) N
(<                   END IF) N
(< *       Compare closest separation with current slow-down binary.) N
(<                   IF \(RI2.LT.0.5*SEMI.AND.R1.GT.0.5*SEMI\) THEN) N
(< *       Evaluate semi-major axis directly \(cf. small RI2 in EREL\).) N
(<                       L = 3*\(N-2\)) N
(<                       DO 25 K = 1,3) N
(<                           VI\(K\) = -WC\(K\)/MC\(1\)) N
(<                           VI\(L+K+3\) = WC\(L+K\)/MC\(N\)) N
(<    25                 CONTINUE) N
(<                       DO 35 II = 2,N-1) N
(<                           L = 3*\(II-1\)) N
(<                           DO 30 K = 1,3) N
(<                               VI\(L+K\) = \(WC\(L+K-3\) - WC\(L+K\)\)/MC\(II\)) N
(<    30                     CONTINUE) N
(<    35                 CONTINUE) N
(<                       DO 40 J = 1,3*\(N-1\)) N
(<                           VC\(J\) = VI\(J+3\) - VI\(J\)) N
(<    40                 CONTINUE) N
(<                       L = 3*\(I1-1\)) N
(<                       R2 = XC\(L+1\)**2 + XC\(L+2\)**2 + XC\(L+3\)**2) N
(<                       W2 = VC\(L+1\)**2 + VC\(L+2\)**2 + VC\(L+3\)**2) N
(<                       SEMI = 2.0D0/R1 - W2/\(MC\(I1\) + MC\(I1+1\)\)) N
(<                       SEMI = 1.0D0/SEMI) N
(<                       GO TO 80) N
(<                   ELSE IF \(RI2.LT.MIN\(SEMI,R1\).AND.R1.GT.0.5*SEMI\) THEN) N
(< *       Determine second binary by regular expression \(R1 not too small\).) N
(<                       DO 50 II = 1,N-1) N
(<                           KS = 4*\(II - 1\)) N
(<                           DO 45 J = 1,4) N
(<                               QK\(KS+J\) = Q\(KS+J\)) N
(<                               PK\(KS+J\) = P\(KS+J\)) N
(<    45                     CONTINUE) N
(<    50                 CONTINUE) N
(<                       K1 = INAME\(i2\)) N
(<                       K2 = INAME\(i2+1\)) N
(<                       CALL EREL\(i2,EB2,SEMI2\)) N
(<                       IF \(SEMI2.GT.0.0.AND.SEMI2.LT.SEMI\) THEN) N
(<                           KSNEW = 1.0D0) N
(<                           GO TO 90) N
(<                       ELSE) N
(< *       Continue with the current binary \(ie. small change in perturbation\).) N
(<                           GO TO 80) N
(<                       END IF) N
(<                   END IF) N
(<               END IF) N
(<    60     CONTINUE) N
(---) N
(>       IF \(KSLOW\) THEN) N
(>           DO I = 1,N-1) N
(>               IF \(KSCH\(I\).GT.1.0\) i1 = i) N
(>           END DO) N
(181,182c58,63) N
(< *       Obtain regular semi-major axis for missing cases \(including N = 3\).) N
(<       IF \(.NOT.KCASE\) THEN) N
(---) N
(> *       Check for switching off slow-down at start of iteration.) N
(>       if \(GCRIT.eq.0.0d0\) then) N
(>           ksnew = 1.0) N
(>           go to 30) N
(>       end if) N
(> *) N
(184,190c65,71) N
(<           DO 70 I = 1,N-1) N
(<               KS = 4*\(I - 1\)) N
(OUT) (Page 192/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (96/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (193-194) 97
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               DO 65 J = 1,4) p n
(<                   QK\(KS+J\) = Q\(KS+J\)) N
(<                   PK\(KS+J\) = P\(KS+J\)) N
(<    65         CONTINUE) N
(<    70     CONTINUE) N
(---) N
(>       DO 10 I = 1,N-1) N
(>           KS = 4*\(I - 1\)) N
(>           DO 5 J = 1,4) N
(>               QK\(KS+J\) = Q\(KS+J\)) N
(>               PK\(KS+J\) = P\(KS+J\)) N
(>     5     CONTINUE) N
(>    10 CONTINUE) N
(193,202c74,76) N
(<           K1 = INAME\(i1\)) N
(<           K2 = INAME\(i1+1\)) N
(<           CALL EREL\(i1,EB,SEMI\)) N
(< *       Exit if no current binary \(set KSLOW = .false. just in case\).) N
(<           IF \(SEMI.LE.0.0d0\) THEN) N
(<               KSLOW = .false.) N
(<               TK2\(0\) = 0.0) N
(<               GO TO 100) N
(<           END IF) N
(<       END IF) N
(---) N
(>       K1 = INAME\(i1\)) N
(>       K2 = INAME\(i1+1\)) N
(>       CALL EREL\(i1,EB,SEMI\)) N
(204,216c78,82) N
(< *       Check for switching to smaller binary \(exchange leads to escape\).) N
(<       IF \(KSLOW.AND.N.GT.3\) THEN) N
(<           IF \(I2.GT.0\) THEN) N
(< *       Evaluate second semi-major axis \(K1 & K2 can be over-written\).) N
(<               K1 = INAME\(i2\)) N
(<               K2 = INAME\(i2+1\)) N
(<               CALL EREL\(i2,EB2,SEMI2\)) N
(<               IF \(SEMI2.GT.0.0.AND.SEMI2.LT.SEMI\) THEN) N
(< *       Switch off the present pair to prepare re-activation.) N
(<                   ksnew = 1.0) N
(<                   go to 90) N
(<               END IF) N
(<           END IF) N
(---) N
(> *       Exit if no current binary \(set KSLOW = .false. just in case\).) N
(>       IF \(SEMI.LE.0.0d0\) THEN) N
(>           KSLOW = .false.) N
(>           TK2\(0\) = 0.0) N
(>           GO TO 50) N
(219,220c85,86) N
(< *       Sum the perturbations \(on either side and non-dominant terms\).) N
(<    80 IF \(KSLOW\) THEN) N
(---) N
(> *       Sum the perturbations next to #i1 \(already known if KSLOW active\).) N
(>       IF \(KSLOW\) THEN) N
(223,252d88) N
(< *) N
(< *       Include full perturbation \(non-symmetrical i1 for n = 4 or n > 4\).) N
(<               if \(\(n.eq.4.and.i1.ne.2\).or.n.gt.4\) then) N
(<                   do k = 1,3) N
(<                       RC1\(K\) = 0.0) N
(<                   end do) N
(< *       Save vector sum on either side of #i1 excluding closest neighbour.) N
(<                   if \(i.lt.i1-1\) then) N
(<                       do j = i+1,i1-1) N
(<                           LJ = 3*\(j-1\)) N
(<                           do k = 1,3) N
(<                               RC1\(k\) = RC1\(k\) + XC\(k+LJ\)) N
(<                           end do) N
(<                       end do) N
(OUT) (Page 193/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Check alternative case of subsequent distant members \(i > i1 + 1\).) p n
(<                   else if \(i.gt.i1+1\) then) N
(<                       do j = i1+1,i-1) N
(<                           LJ = 3*\(j-1\)) N
(<                           do k = 1,3) N
(<                               RC1\(k\) = RC1\(k\) + XC\(k+LJ\)) N
(<                           end do) N
(<                       end do) N
(<                   end if) N
(<               end if) N
(< *) N
(< *       Set chain offset and mass reference index.) N
(<               L = 3*\(I-1\)) N
(<               j = i) N
(<               if \(i.gt.i1\) j = i + 1) N
(< *       Use actual separation if perturber is next to dominant binary.) N
(253a90,91) N
(>                   j = i) N
(>                   if \(i.gt.i1\) j = i + 1) N
(255,262d92) N
(<               else if \(i.ne.i1\) then) N
(< *       Include chain vector to yield full distance to binary.) N
(<                   do k = 1,3) N
(<                       RC2\(k\) = RC1\(k\) + XC\(k+L\)) N
(<                   end do) N
(< *       Add contribution from more distant member.) N
(<                   RJ = SQRT\(RC2\(1\)**2 + RC2\(2\)**2 + RC2\(3\)**2\)) N
(<                   sum = sum + mc\(j\)/RJ**3) N
(300c130) N
(<    90 if \(ksnew.ne.ksch\(i1\)\) then) N
(---) N
(>    30 if \(ksnew.ne.ksch\(i1\)\) then) N
(343c173) N
(<   100 RETURN) N
(---) N
(>    50 RETURN) N
(1,2c1,2) N
(< 798 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/sort1.f) N
(< nbody6compare/sort1.f) N
(---) N
(> 817 2001-08-26 01:41 /work/Umi2/spurzem/5/nbody6++compare/sort1.f) N
(> nbody6++compare/sort1.f) N
(7,8c7,9) N
(<       INTEGER  RB\(N\),RRB) N
(<       REAL*8  RA\(N\),RRA) N
(---) N
(>       INTEGER  RB,RRB) N
(>       REAL*8 RA\(N\),RRA) N
(>       DIMENSION  RB\(N\)) N
(1,2c1,2) N
(< 3590 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stabl3.f) N
(< nbody6compare/stabl3.f) N
(---) N
(> 2855 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/stabl3.f) N
(> nbody6++compare/stabl3.f) N
(60,61c60,61) N
(< *     AM = \(2.65 + E\)*\(1.0 + M\(I\)/MB\)**0.3333) N
(< *     FM = \(2.0*M\(I\) - MB\)/\(3.0*MB\)) N
(---) N
(>       AM = \(2.65 + E\)*\(1.0 + M\(I\)/MB\)**0.3333) N
(>       FM = \(2.0*M\(I\) - MB\)/\(3.0*MB\)) N
(64,83c64,65) N
(< *     IF \(ABS\(FM\).LT.0.67\) THEN) N
(< *         BM = FM*\(1.0 - \(0.5 - ONE3*FM\)*FM\)) N
(< *     ELSE) N
(< *         BM = LOG\(1.0D0 + FM\)) N
(< *     END IF) N
(< *       Define mass dependent criterion of Harrington \(A.J. 80\) & Bailyn.) N
(< *     PCRIT = AM*\(1.0 + 0.7*BM\)*SEMI) N
(OUT) (Page 194/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (97/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (195-196) 98
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(< *       Form hierarchical stability ratio \(Kiseleva & Eggleton 1995\).) N
(< *     Q0 = MB/M\(I\)) N
(< *     Q1 = MAX\(M\(3\)/M\(IM\),M\(IM\)/M\(3\)\)) N
(< *     Q3 = Q0**0.33333) N
(< *     Q13 = Q1**0.33333) N
(< *     AR = 1.0 + 3.7/Q3 - 2.2/\(1.0 + Q3\) + 1.4/Q13*\(Q3 - 1.0\)/\(Q3 + 1.0\)) N
(< *     PCRIT = AR*SEMI*\(1.0D0 + E\)) N
(< *) N
(< *       Adopt the semi-analytical stability criterion \(MA 1997\).) N
(<       Q1 = M\(I\)/MB) N
(<       IF \(E1.LT.1.0\) THEN) N
(<           XFAC = \(1.0 + Q1\)*\(1.0 + E1\)/SQRT\(1.0 - E1\)) N
(---) N
(>       IF \(ABS\(FM\).LT.0.67\) THEN) N
(>           BM = FM*\(1.0 - \(0.5 - 0.3333*FM\)*FM\)) N
(85c67) N
(<           XFAC = 40.0*\(1.0 + Q1\)) N
(---) N
(>           BM = LOG\(1.0D0 + FM\)) N
(87c69,71) N
(<       PCRIT = 2.8*XFAC**0.4*SEMI) N
(---) N
(> *) N
(> *       Adopt mass dependent criterion of Harrington \(A.J. 80\) & Bailyn.) N
(>       PCRIT = AM*\(1.0 + 0.7*BM\)*SEMI) N
(90,91c74,81) N
(< *       Set negative termination index if system is stable and RB > SEMI.) N
(<       IF \(PCRIT.LT.PMIN.AND.E1.LT.1.0.AND.RB.GT.SEMI\) THEN) N
(---) N
(> *       Obtain stability parameter by Zare's method.) N
(>       M1 = M\(IM\)) N
(>       M2 = M\(3\)) N
(>       M3 = M\(I\)) N
(>       CALL STABLZ\(M1,M2,M3,SP\)) N
(> *) N
(> *       Set negative termination index if system is stable.) N
(>       IF \(PCRIT.LT.PMIN\) THEN) N
(93,97d82) N
(< *       Obtain Zare's stability parameter \(valid for small inclinations\).) N
(<           M1 = M\(IM\)) N
(<           M2 = M\(3\)) N
(<           M3 = M\(I\)) N
(<           CALL STABLZ\(M1,M2,M3,SP\)) N
(99c84) N
(<    20     FORMAT \('  STABT:    A A1 E E1 RI RATIO SP PCR PM ',) N
(---) N
(>    20     FORMAT \('  STABT:  A A1 E E1 RI RATIO SP PCR PM ',) N
(101,103d85) N
(< *       Terminate if escaper is outside 3*SEMI.) N
(<       ELSE IF \(E1.GT.1.0.AND.RI.GT.3.0*SEMI\) THEN) N
(<           ITERM = -1) N
(1,2c1,2) N
(< 5439 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stabl4.f) N
(< nbody6compare/stabl4.f) N
(---) N
(> 3706 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/stabl4.f) N
(> nbody6++compare/stabl4.f) N
(38d37) N
(<       RB2 = 0.0D0) N
(41d39) N
(<       RDOT2 = 0.0D0) N
(45d42) N
(<       VREL22 = 0.0D0) N
(64d60) N
(<           RB2 = RB2 + \(RC0\(K\) - X\(J3\)\)**2) N
(67d62) N
(<           RDOT2 = RDOT2 + \(RC0\(K\) - X\(J3\)\)*\(VC0\(K\) - XD\(J3\)\)) N
(71d65) N
(OUT) (Page 195/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           VREL22 = VREL22 + \(VC0\(K\) - XD\(J3\)\)**2) p n
(80c74) N
(< *       Form semi-major axis & eccentricity of outer pair.) N
(---) N
(> *       Form semi-major axis & eccentricity of wide pair.) N
(84c78) N
(< *     E = SQRT\(\(1.0D0 - RB/SEMI\)**2 + RDOT**2/\(SEMI*MB\)\)) N
(---) N
(>       E = SQRT\(\(1.0D0 - RB/SEMI\)**2 + RDOT**2/\(SEMI*MB\)\)) N
(92,98d85) N
(< *       Consider the inner triple.) N
(<       MB2 = MB0 + M\(K3\)) N
(<       RB2 = SQRT\(RB2\)) N
(<       SEMI2 = 2.0D0/RB2 - VREL22/MB2) N
(<       SEMI2 = 1.0/SEMI2) N
(<       E2 = SQRT\(\(1.0D0 - RB2/SEMI2\)**2 + RDOT2**2/\(SEMI2*MB2\)\)) N
(< *) N
(103,104c90,91) N
(< *     AM = \(2.65 + E0\)*\(1.0 + MB0/MB\)**0.3333) N
(< *     FM = \(2.0*MB0 - MB\)/\(3.0*MB\)) N
(---) N
(>       AM = \(2.65 + E0\)*\(1.0 + MB0/MB\)**0.3333) N
(>       FM = \(2.0*MB0 - MB\)/\(3.0*MB\)) N
(107,111c94,98) N
(< *     IF \(ABS\(FM\).LT.0.67\) THEN) N
(< *         BM = FM*\(1.0 - \(0.5 - 0.3333*FM\)*FM\)) N
(< *     ELSE) N
(< *         BM = LOG\(1.0D0 + FM\)) N
(< *     END IF) N
(---) N
(>       IF \(ABS\(FM\).LT.0.67\) THEN) N
(>           BM = FM*\(1.0 - \(0.5 - 0.3333*FM\)*FM\)) N
(>       ELSE) N
(>           BM = LOG\(1.0D0 + FM\)) N
(>       END IF) N
(114c101,102) N
(< *     PCRIT = AM*\(1.0 + 0.7*BM\)*SEMI0) N
(---) N
(>       PCRIT = AM*\(1.0 + 0.7*BM\)*SEMI0) N
(>       PMIN = SEMI1*\(1.0D0 - E1\)) N
(116,158c104,112) N
(< *       Form hierarchical stability ratio \(Kiseleva & Eggleton 1995\).) N
(< *     Q0 = MB/MB0) N
(< *     Q1 = MAX\(M\(K2\)/M\(K1\),M\(K1\)/M\(K2\)\)) N
(< *     Q3 = Q0**0.33333) N
(< *     Q13 = Q1**0.33333) N
(< *     AR = 1.0 + 3.7/Q3 - 2.2/\(1.0 + Q3\) + 1.4/Q13*\(Q3 - 1.0\)/\(Q3 + 1.0\)) N
(< *     PCRIT = AR*SEMI0*\(1.0D0 + E0\)) N
(< *) N
(< *       Check stability \(AM 1997; inner triple or well separated quadruple\).) N
(<       ITERM = 0) N
(<       IF \(RB1.GT.5.0*RB2.AND.E2.LT.1.0\) THEN) N
(<           Q1 = M\(K3\)/MB0) N
(<           XFAC = \(1.0 + Q1\)*\(1.0 + E2\)/SQRT\(1.0 - E2\)) N
(<           PCRIT = 2.8*XFAC**0.4*SEMI0) N
(<           PMIN = SEMI2*\(1.0 - E2\)) N
(<           IF \(PCRIT.LT.PMIN\) THEN) N
(<               ITERM = -1) N
(<               RATIO = SEMI2*\(1.0D0 - E2\)/\(SEMI0*\(1.0D0 + E0\)\)) N
(<               WRITE \(6,15\)  SEMI0, SEMI2, E0, E2, RATIO, RB0, RB2,) N
(<      &                      PCRIT, PMIN) N
(<    15         FORMAT \('  STABT:    A0 A2 E0 E2 RATIO R0 R2 PCR PM ',) N
(<      &                             1P,2E10.2,0P,2F7.3,F6.2,1P,4E9.1\)) N
(<           END IF) N
(<       ELSE IF \(RB1.GT.5.0*MAX\(RB0,RB\).AND.E1.LT.1.0.AND.) N
(<      &         MIN\(SEMI0,SEMI\).GT.0.0\) THEN) N
(< *       Choose smallest binary as third body and ignore fudge factor.) N
(<           IF \(SEMI.GT.SEMI0\) THEN) N
(<               Q1 = MB0/MB) N
(OUT) (Page 196/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (98/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (197-198) 99
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<               AIN = SEMI) p n
(<           ELSE) N
(<               Q1 = MB/MB0) N
(<               AIN = SEMI0) N
(<           END IF) N
(<           XFAC = \(1.0 + Q1\)*\(1.0 + E1\)/SQRT\(1.0 - E1\)) N
(<           PCRIT = 2.8*XFAC**0.4*AIN) N
(<           PMIN = SEMI1*\(1.0 - E1\)) N
(<           IF \(PCRIT.LT.PMIN\) THEN) N
(<               ITERM = -1) N
(<               WRITE \(6,20\)  AIN, SEMI1, E0, E1, RATIO, RB0, RB1,) N
(<      &                      PCRIT, PMIN) N
(<    20         FORMAT \('  STABQ:    AIN A1 E0 E1 RATIO R0 R1 PCR PM ',) N
(<      &                             1P,2E10.2,0P,2F7.3,F6.2,1P,4E9.1\)) N
(<           END IF) N
(---) N
(> *       Set negative termination index if system is stable or SEMI < 0.) N
(>       IF \(PCRIT.LT.PMIN\) THEN) N
(>           ITERM = -1) N
(>           WRITE \(6,20\)  SEMI, SEMI1, E, E1, RB1, RATIO, PCRIT, PMIN,) N
(>      &                  SEMI0, RB0) N
(>    20     FORMAT \('  STABQ:  A A1 E E1 R1 RATIO PCR PM A0 RB0 ',) N
(>      &                            1P,2E10.2,0P,2F6.2,F9.5,F6.2,1P,4E9.1\)) N
(>       ELSE) N
(>           ITERM = 0) N
(1,2c1,2) N
(< 5136 1999-12-17 10:14 /work/Umi2/spurzem/5/nbody6compare/stablc.f) N
(< nbody6compare/stablc.f) N
(---) N
(> 5136 1999-12-17 10:14 /work/Umi2/spurzem/5/nbody6++compare/stablc.f) N
(> nbody6++compare/stablc.f) N
(1,2c1,2) N
(< 2172 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stablz.f) N
(< nbody6compare/stablz.f) N
(---) N
(> 2172 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/stablz.f) N
(> nbody6++compare/stablz.f) N
(1,2c1,2) N
(< 12011 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/star.f) N
(< nbody6compare/star.f) N
(---) N
(> 12006 2006-06-18 03:51 /work/Umi2/spurzem/5/nbody6++compare/star.f) N
(> nbody6++compare/star.f) N
(13c13) N
(<       real*8 tgb,tbagb,mch,mcmax,mc1,mc2,mcbagb,dx,am) N
(---) N
(>       real*8 tgb,tbagb,mch,mcmax,mc1,mc2,mcbagb,dx,me,am) N
(57,60c57) N
(<       if\(kw.ge.10\) then) N
(<          tn = 1.d10) N
(<          goto 95) N
(<       endif) N
(---) N
(>       if\(kw.ge.10\) goto 95) N
(124a122) N
(>             me = MAX\(mass - mc1,0.d0\)) N
(1,2c1,2) N
(< 10764 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/start3.f) N
(< nbody6compare/start3.f) N
(---) N
(> 10764 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/start3.f) N
(> nbody6++compare/start3.f) N
(1,2c1,2) N
(< 11282 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/start4.f) N
(< nbody6compare/start4.f) N
(---) N
(> 11282 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/start4.f) N
(> nbody6++compare/start4.f) N
(1,2c1,2) N
(OUT) (Page 197/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 4470 2006-02-08 18:54 /work/Umi2/spurzem/5/nbody6compare/start.f) p n
(< nbody6compare/start.f) N
(---) N
(> 5678 2006-10-03 16:14 /work/Umi2/spurzem/5/nbody6++compare/start.f) N
(> nbody6++compare/start.f) N
(0a1,4) N
(> # 1 "start.F") N
(> # 1 "<built-in>") N
(> # 1 "<command line>") N
(> # 1 "start.F") N
(4,5c8,9) N
(< *       Initialization of data & polynomials.) N
(< *       ------------------------------------) N
(---) N
(> * Initialization of data & polynomials.) N
(> * ------------------------------------) N
(8,9c12,13) N
(<       EXTERNAL SCALE,MERGE) N
(<       PARAMETER  \(NS=12\)) N
(---) N
(>       EXTERNAL SCALE) N
(>       PARAMETER \(NS=12\)) N
(12c16) N
(< *       Initialize global scalars, counters & useful constants.) N
(---) N
(> * Initialize global scalars, counters & useful constants.) N
(15c19) N
(< *       Read input parameters.) N
(---) N
(> * Read input parameters.) N
(18c22,25) N
(< *       Set initial conditions: BODY\(I\), X\(K,I\), XDOT\(K,I\); I=1,N & K=1,3.) N
(---) N
(> * Open all Files.) N
(>       CALL FILE_INIT\(0\)) N
(> *) N
(> * Set initial conditions: BODY\(I\), X\(K,I\), XDOT\(K,I\); I=1,N & K=1,3.) N
(21c28) N
(< *       Scale initial conditions to new units.) N
(---) N
(> * Scale initial conditions to new units.) N
(24c31) N
(< *       Set total mass in case routines DATA & SCALE are not used.) N
(---) N
(> * Set total mass in case routines DATA & SCALE are not used.) N
(30c37) N
(< *       Define mean mass in scaled units and solar mass conversion factor.) N
(---) N
(> * Define mean mass in scaled units and solar mass conversion factor.) N
(32,34c39) N
(<       IF \(KZ\(5\).NE.3\) THEN) N
(<           ZMBAR = ZMBAR/BODYM) N
(<       END IF) N
(---) N
(>       ZMBAR = ZMBAR/BODYM) N
(36c41) N
(< *       Introduce scaling factors DAYS, YRS, SU, RAU, SMU, TSTAR & VSTAR.) N
(---) N
(> * Introduce scaling factors DAYS, YRS, SU, RAU, SMU, TSTAR & VSTAR.) N
(39,40c44,45) N
(< *       Check option for external force.) N
(<       IF \(KZ\(14\).GT.0\) THEN ) N
(---) N
(> * Check option for external force.) N
(>       IF \(KZ\(14\).GT.0\) THEN) N
(42c47) N
(<       END IF ) N
(---) N
(>       END IF) N
(OUT) (Page 198/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (99/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (199-200) 100
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(44c49) p n
(< *       Check optional scaling to hot system.) N
(---) N
(> * Check optional scaling to hot system.) N
(49c54) N
(< *       Check option for initial binaries.) N
(---) N
(> * Check option for initial binaries.) N
(54c59) N
(< *       Include stable primordial triples.) N
(---) N
(> * Include stable primordial triples.) N
(59c64) N
(< *       Check optional initialization for tidal two-body capture.) N
(---) N
(> * Check optional initialization for tidal two-body capture.) N
(64c69) N
(< *       Set sequential name, maximum mass & primary velocity.) N
(---) N
(> * Set sequential name, maximum mass & primary velocity.) N
(71c76) N
(<    15     CONTINUE) N
(---) N
(>    15 CONTINUE) N
(74c79) N
(< *       Initialize fixed block steps \(40 levels\).) N
(---) N
(> * Initialize fixed block steps \(64 levels\).) N
(77c82) N
(< *       Create table of inverse Stumpff coefficients.) N
(---) N
(> * Create table of inverse Stumpff coefficients.) N
(79c84) N
(<           SCOEFF\(I\) = 1.0D0/\(\(I + 1\)*\(I + 2\)\)) N
(---) N
(>           SCOEFF\(I\) = 1.0/\(\(I + 1\)*\(I + 2\)\)) N
(82c87) N
(< *       Set optional stellar evolution parameters or define STEPX.) N
(---) N
(> * Set optional stellar evolution parameters.) N
(85,88d89) N
(<       ELSE IF \(KZ\(14\).GT.1\) THEN) N
(<           DT = 1.0E-03/TSCALE) N
(<           CALL STEPK\(DT,DTN\)) N
(<           STEPX = DTN) N
(91c92) N
(< *       Initialize optional cloud parameters.) N
(---) N
(> * Initialize optional cloud parameters.) N
(96c97) N
(< *       Set initial neighbour list & corresponding radius.) N
(---) N
(> * Set initial neighbour list & corresponding radius.) N
(98a100) N
(> *) N
(104c106,110) N
(< *       Obtain force & first derivative.) N
(---) N
(> * Obtain force & first derivative.) N
(>       call cputim\(tt1\)) N
(> ) N
(> ) N
(> ) N
(106,107c112,120) N
(< *) N
(< *       Obtain second & third force derivatives and set time-steps.) N
(---) N
(> ) N
(>       call cputim\(tt2\)) N
(OUT) (Page 199/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       if\(rank.eq.0\)print*,' fpoly1 time=',\(tt2-tt1\)*60.) p n
(> *) N
(> * Obtain second & third force derivatives and set time-steps.) N
(>       call cputim\(tt1\)) N
(> ) N
(> ) N
(> ) N
(108a122,124) N
(> ) N
(>       call cputim\(tt2\)) N
(>       if\(rank.eq.0\)print*,' fpoly2 time=',\(tt2-tt1\)*60.) N
(110c126) N
(< *       Regularize any hard primordial binaries \(assume sequential ordering\).) N
(---) N
(> * Regularize any hard primordial binaries \(assume sequential ordering\).) N
(111a128,134) N
(>           SMMIN = 1.D30) N
(>           SMMAX = 0.D0) N
(>           XMMIN = 1.D30) N
(>           XMMAX = 0.D0) N
(>           TMMIN = 1.D30) N
(>           TMMAX = 0.D0) N
(> *) N
(116c139) N
(< *       Include standard distance criterion.) N
(---) N
(> * Include standard distance criterion.) N
(119c142,150) N
(<    45         CONTINUE) N
(---) N
(>    45 CONTINUE) N
(>         IF\(RIJ2.LT.SMMIN\)SMMIN=RIJ2) N
(>         IF\(RIJ2.GT.SMMAX\)SMMAX=RIJ2) N
(>               XMBIN = BODY\(ICOMP\) + BODY\(JCOMP\)) N
(>               PERIOD = RIJ2**0.75/DSQRT\(XMBIN\)) N
(>         IF\(XMBIN.LT.XMMIN\)XMMIN=XMBIN) N
(>         IF\(XMBIN.GT.XMMAX\)XMMAX=XMBIN) N
(>         IF\(PERIOD.LT.TMMIN\)TMMIN=PERIOD) N
(>         IF\(PERIOD.GT.TMMAX\)TMMAX=PERIOD) N
(121c152,173) N
(<                   CALL KSREG) N
(---) N
(>                  CALL KSREG) N
(>               ELSE) N
(>         if\(rank.eq.0\)PRINT*,' Pair ',IPAIR,' not regularised ') N
(>               END IF) N
(>         if\(rank.eq.0\)PRINT*,' rij/AU, tcross/YRS=',) N
(>      * DSQRT\(RIJ2\)*RAU,PERIOD*YRS) N
(>                   CALL FLUSH\(6\)) N
(>    50 CONTINUE) N
(> *) N
(> * Adjust NNBMAX \(R.Sp.\)) N
(>       NNBMAX = MIN\(N/2,LMAX - 3\)) N
(>       ZNBMIN = MAX\(0.01*FLOAT\(NNBMAX\),1.0\)) N
(>       ZNBMAX = 0.9*FLOAT\(NNBMAX\)) N
(> *) N
(> * Check initial neighbour lists again.) N
(>           DO 55 I = IFIRST,NTOT) N
(>               IF\(I.GT.N\)THEN) N
(>               ICOMP = 2*IPAIR - 1) N
(>               JCOMP = 2*IPAIR) N
(>                   RS0 = RS\(ICOMP\)) N
(>               ELSE) N
(>                   RS0 = RC) N
(123c175,177) N
(<    50     CONTINUE) N
(---) N
(>                   CALL NBLIST\(I,RS0\)) N
(>    55 CONTINUE) N
(OUT) (Page 200/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (100/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (201-202) 101
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *) p n
(126,150c180,195) N
(< *       Include optional regularization of primordial triples.) N
(<       IF \(KZ\(11\).GT.1.AND.NHI0.GT.0\) THEN) N
(<           KSPAIR = 1) N
(< *       Note that each KS pair will move to the top of the queue.) N
(<    60     ICOMP = 2*KSPAIR - 1) N
(<           ICM = KSPAIR + N) N
(<           RX2 = 1.0) N
(< *       Find index of closest outer component without any assumption.) N
(<           DO 70 J = IFIRST,N) N
(<               RIJ2 = 0.0) N
(<               DO 65 K = 1,3) N
(<                   RIJ2 = RIJ2 + \(X\(K,ICM\) - X\(K,J\)\)**2) N
(<    65         CONTINUE) N
(<               IF \(RIJ2.LT.RX2\) THEN) N
(<                   RX2 = RIJ2) N
(<                   JCOMP = J) N
(<               END IF) N
(<    70     CONTINUE) N
(< *       Evaluate PCRIT for R0\(NPAIRS\) in MERGE since IMPACT is bypassed.) N
(<           CALL HISTAB\(KSPAIR,JCOMP,PMIN,RSTAB\)) N
(< *       Initialize the triple \(constructed to be stable in HIPOP\).) N
(<           IPHASE = 6) N
(<           CALL MERGE) N
(<           IF \(NMERGE.LT.NHI0\) THEN) N
(<               GO TO 60) N
(---) N
(> * Initialize the time-step list used to find next body.) N
(>       DTLIST = 100.0) N
(>       DO 60 I = IFIRST,NTOT) N
(>           DTLIST = MIN\(DTLIST,STEP\(I\)\)) N
(>    60 CONTINUE) N
(> *) N
(> * Set initial time-step list interval twice the smallest step.) N
(>       DTLIST = 2.0*DTLIST) N
(>    70 NNB = 1) N
(>       TLIST = TLIST + DTLIST) N
(> *) N
(> * Select all members due in the interval \(0,TLIST\).) N
(>       DO 80 J = IFIRST,NTOT) N
(>           IF \(T0\(J\) + STEP\(J\).LT.TLIST\) THEN) N
(>               NNB = NNB + 1) N
(>               NLIST\(NNB\) = J) N
(151a197,205) N
(>    80 CONTINUE) N
(> *) N
(> * Check whether membership range is acceptable.) N
(>       IF \(NNB.EQ.1\) GO TO 70) N
(> *) N
(>       IF \(NNB.GT.LMAX\) THEN) N
(>           TLIST = TLIST - DTLIST) N
(>           DTLIST = 0.66*DTLIST) N
(>           GO TO 70) N
(154c208,212) N
(< *       Check the average neighbour number.) N
(---) N
(> * Reduce new DTLIST to prevent early crowding and set membership.) N
(>       DTLIST = 0.2*DTLIST) N
(>       NLIST\(1\) = NNB - 1) N
(> *) N
(> * Check the average neighbour number.) N
(157,159c215,226) N
(<           WRITE \(6,90\)  ZNB) N
(<    90     FORMAT \(/,12X,'WARNING!   SMALL NEIGHBOUR NUMBERS   <NNB> =',) N
(<      &                                                             F5.1\)) N
(---) N
(>           if\(rank.eq.0\)WRITE \(6,90\) ZNB) N
(>    90 FORMAT \(/,12X,'WARNING!   SMALL NEIGHBOUR NUMBERS   <NNB> =',) N
(OUT) (Page 201/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>      & F5.1\)) p n
(>       END IF) N
(> *) N
(> * Check option for writing the initial conditions on unit 10.) N
(>       if\(rank.eq.0\)then) N
(>       IF \(KZ\(22\).EQ.1\) THEN) N
(>           DO 85 I = 1,N) N
(>              WRITE \(10,100\) BODY\(I\),\(X\(K,I\),K=1,3\),\(XDOT\(K,I\),K=1,3\)) N
(>    85 CONTINUE) N
(>   100 FORMAT\(1X,1P,7\(1X,D18.10\)\)) N
(160a228) N
(>       end if) N
(1,2c1,2) N
(< 1768 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/status.f) N
(< nbody6compare/status.f) N
(---) N
(> 1768 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/status.f) N
(> nbody6++compare/status.f) N
(1,2c1,2) N
(< 773 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stepi.f) N
(< nbody6compare/stepi.f) N
(---) N
(> 762 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/stepi.f) N
(> nbody6++compare/stepi.f) N
(19c19) N
(< *       Obtain time-step by simplified relative criterion.           ) N
(---) N
(> *       Obtain time-step by simplified relative criterion.) N
(1,2c1,2) N
(< 780 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stepk.f) N
(< nbody6compare/stepk.f) N
(---) N
(> 752 2000-04-13 02:52 /work/Umi2/spurzem/5/nbody6++compare/stepk.f) N
(> nbody6++compare/stepk.f) N
(8,9c8) N
(<       DATA  ONE32 /0.03125/) N
(< *     DATA  ONE16,ONE32 /0.0625D0,0.03125/) N
(---) N
(>       DATA  ONE16,ONE32 /0.0625D0,0.03125/) N
(1,2c1,2) N
(< 3569 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/steps.f) N
(< nbody6compare/steps.f) N
(---) N
(> 3325 2003-06-26 03:20 /work/Umi2/spurzem/5/nbody6++compare/steps.f) N
(> nbody6++compare/steps.f) N
(9d8) N
(< *) N
(16,17c15) N
(< *       Include precaution for small force or velocity \(i.e. DT = ETA*TCR0\).) N
(<           IF \(FI2.LT.BODYM**2/RS\(I\)**4\) FI2 = BODYM**2/RS\(I\)**4) N
(---) N
(> *       Include precaution for small velocities \(i.e. DT = ETA*TCR0\).) N
(19c17) N
(<           DT = 0.5*ETAI*SQRT\(FI2/FD2\)) N
(---) N
(>           DT = ETAI*SQRT\(FI2/FD2\)) N
(21,29c19,21) N
(<           FD2 = D1R\(1,I\)**2 + D1R\(2,I\)**2 + D1R\(3,I\)**2) N
(<           IF \(FD2.LT.FR2\) FD2 = FR2/TCR0**2) N
(< *       Prescribe safe value for small or zero regular force.) N
(<           IF \(FR2.LT.0.1*BODYM/RS\(I\)**2\) THEN) N
(<               DTR = ETAR*TCR0) N
(<           ELSE) N
(<               DTR = ETAR*SQRT\(FR2/FD2\)) N
(<           END IF) N
(<  ) N
(---) N
(>           FDR2 = D1R\(1,I\)**2 + D1R\(2,I\)**2 + D1R\(3,I\)**2) N
(>           IF \(FDR2.LT.FR2\) FDR2 = FR2/TCR0**2) N
(OUT) (Page 202/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (101/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (203-204) 102
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>           DTR = ETAR*SQRT\(FR2/FDR2\)) p n
(43a36) N
(> *) N
(55,56c48) N
(<                   IF \(ITER.LT.16.OR.STEP\(I\).GT.DTK\(40\)\) GO TO 10) N
(<                   STEP\(I\) = DTK\(40\)) N
(---) N
(>                   IF \(ITER.LT.40.OR.STEP\(I\).GT.DTK\(40\)\) GO TO 10) N
(59a52) N
(>                   STEP\(I\) = DTK\(40\)) N
(65,66c58) N
(<                   IF \(ITER.LT.16.OR.STEPR\(I\).GT.DTK\(40\)\) GO TO 18) N
(<                   STEPR\(I\) = DTK\(40\)) N
(---) N
(>                   IF \(ITER.LT.40.OR.STEPR\(I\).GT.DTK\(40\)\) GO TO 18) N
(69a62) N
(>                   STEPR\(I\) = DTK\(40\)) N
(82c75) N
(< *             WRITE \(7,28\)  I, NAME\(I\), TIME, DT, STEP\(I\), STEPR\(I\)) N
(---) N
(> *             WRITE \(77,28\)  I, NAME\(I\), TIME, DT, STEP\(I\), STEPR\(I\)) N
(85c78) N
(< *             CALL FLUSH\(7\)) N
(---) N
(> *             CALL FLUSH\(77\)) N
(98a92) N
(> ) N
(1,2c1,2) N
(< 1088 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/stumpf.f) N
(< nbody6compare/stumpf.f) N
(---) N
(> 1088 2001-08-24 23:08 /work/Umi2/spurzem/5/nbody6++compare/stumpf.f) N
(> nbody6++compare/stumpf.f) N
(1,2c1,2) N
(< 6207 2006-02-13 09:55 /work/Umi2/spurzem/5/nbody6compare/subint.f) N
(< nbody6compare/subint.f) N
(---) N
(> 6216 2003-06-25 17:26 /work/Umi2/spurzem/5/nbody6++compare/subint.f) N
(> nbody6++compare/subint.f) N
(10c10) N
(<       REAL*8  TSLIST\(KMAX\)) N
(---) N
(>       REAL*8  TSLIST\(10*KMAX\)) N
(32,33d31) N
(<           LI = LI - 1) N
(<           DTB = 0.0) N
(40c38) N
(<               IF \(DTB.EQ.0.0D0.OR.DTB.GT.1.0D+06\) THEN) N
(---) N
(>               IF \(DTB.EQ.0.0D0.OR.DTB.GT.1.0D0\) THEN) N
(43c41,43) N
(<     2         TBLIST = TPREV + DTB) N
(---) N
(>     2         CONTINUE) N
(> *) N
(>               TBLIST = TPREV + DTB) N
(55c55) N
(<               IF \(NNTB.EQ.0\) THEN) N
(---) N
(>               IF \(NNTB.EQ.0.AND.DTB.LT.1.0D0\) THEN) N
(98,99c98) N
(<                   IF \(NNTB.GE.KMAX-5\) THEN) N
(<                       TBLIST = TIME) N
(---) N
(>                   IF \(NNTB.GE.10*\(KMAX-5\)\) THEN) N
(105a105) N
(>                       TBLIST = TIME) N
(189a190,192) N
(> ) N
(OUT) (Page 203/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> ) p n
(> ) N
(1,2c1,2) N
(< 2591 2006-09-03 17:59 /work/Umi2/spurzem/5/nbody6compare/subsys.f) N
(< nbody6compare/subsys.f) N
(---) N
(> 2591 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/subsys.f) N
(> nbody6++compare/subsys.f) N
(1,2c1,2) N
(< 1302 2002-09-23 16:45 /work/Umi2/spurzem/5/nbody6compare/swcond.f) N
(< nbody6compare/swcond.f) N
(---) N
(> 1289 1996-12-14 02:13 /work/Umi2/spurzem/5/nbody6++compare/swcond.f) N
(> nbody6++compare/swcond.f) N
(8d7) N
(<       COMMON/SWCALL/ NCALL) N
(10,11c9,10) N
(<       SAVE NSW) N
(<       DATA NSW/200/) N
(---) N
(>       SAVE NCALL,NSW) N
(>       DATA NCALL,NSW/0,200/) N
(1,2c1,2) N
(< 4096 1999-11-15 14:57 /work/Umi2/spurzem/5/nbody6compare/switch.f) N
(< nbody6compare/switch.f) N
(---) N
(> 4096 1999-11-15 14:57 /work/Umi2/spurzem/5/nbody6++compare/switch.f) N
(> nbody6++compare/switch.f) N
(file /work/Umi2/spurzem/5/nbody6++compare/tail0.f does not exist) N
(1,2c1,2) N
(< 1206 2005-03-05 12:53 /work/Umi2/spurzem/5/nbody6compare/tchain.f) N
(< nbody6compare/tchain.f) N
(---) N
(> 1162 2003-06-23 19:33 /work/Umi2/spurzem/5/nbody6++compare/tchain.f) N
(> nbody6++compare/tchain.f) N
(30c30) N
(< *       Include safety check for large c.m. step \(TPREV = TBLOCK first time\).) N
(---) N
(> *       Include safety check in case of large c.m. step \(exclude first time\).) N
(33,34d32) N
(<       ELSE) N
(<           TSMIN = MIN\(TSMIN,DTMIN\)) N
(44a43,44) N
(> ) N
(> ) N
(1,2c1,2) N
(< 2511 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/tcirc.f) N
(< nbody6compare/tcirc.f) N
(---) N
(> 2511 1999-11-28 17:12 /work/Umi2/spurzem/5/nbody6++compare/tcirc.f) N
(> nbody6++compare/tcirc.f) N
(file /work/Umi2/spurzem/5/nbody6++compare/tides2.f does not exist) N
(1,2c1,2) N
(< 1469 2006-02-17 09:47 /work/Umi2/spurzem/5/nbody6compare/tides.f) N
(< nbody6compare/tides.f) N
(---) N
(> 1460 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/tides.f) N
(> nbody6++compare/tides.f) N
(4,5c4,5) N
(< *       Tidal energy loss for interacting stars.) N
(< *       ----------------------------------------) N
(---) N
(> *       Tidal energy loss for interacting bodies.) N
(> *       -----------------------------------------) N
(21c21) N
(<           IF \(KST.EQ.3.OR.KST.EQ.5.OR.KST.EQ.6\) THEN) N
(---) N
(>           IF \(KST.EQ.3.OR.KST.EQ.5\) THEN) N
(54a55) N
(OUT) (Page 204/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (102/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (205-206) 103
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> ) p n
(1,2c1,2) N
(< 2436 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/tperi.f) N
(< nbody6compare/tperi.f) N
(---) N
(> 2450 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/tperi.f) N
(> nbody6++compare/tperi.f) N
(13c13) N
(< *       DT = pericentre time interval \(DT < 0 before peri\).) N
(---) N
(> *       DT = pericentre time interval \(DT > 0 after peri\).) N
(51,52c51,53) N
(< *       Determine the eccentric anomaly with respect to pericentre \(-PI,PI\).) N
(<           THETA = DATAN2\(PSI/SQRT\(SEMI\),ZETA\)) N
(---) N
(> *       Determine the eccentric anomaly with respect to pericentre \(0,PI\).) N
(>           THETA = DATAN2\(ABS\(PSI\)/SQRT\(SEMI\),ZETA\)) N
(> *) N
(54c55) N
(<           DT = SEMI*SQRT\(SEMI/MB\)*\(THETA - PSI/SQRT\(SEMI\)\)) N
(---) N
(>           DT = SEMI*SQRT\(SEMI/MB\)*\(THETA - ABS\(PSI\)/SQRT\(SEMI\)\)) N
(63c64) N
(<           DT = A0*SQRT\(A0/MB\)*\(PSI/SQRT\(A0\) - THETA\)) N
(---) N
(>           DT = A0*SQRT\(A0/MB\)*\(ABS\(PSI\)/SQRT\(A0\) - THETA\)) N
(1,2c1,2) N
(< 2338 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/tpert.f) N
(< nbody6compare/tpert.f) N
(---) N
(> 2315 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/tpert.f) N
(> nbody6++compare/tpert.f) N
(14d13) N
(<       JCLOSE = 0) N
(47c46) N
(<               JCLOSE = J) N
(---) N
(>               JMIN = J) N
(72c71) N
(<       IF \(JCRIT.NE.JCLOSE\) THEN) N
(---) N
(>       IF \(JCRIT.NE.JMIN\) THEN) N
(74c73) N
(<           DR = SQRT\(RJMIN2\) - RI*\(BODY\(JCLOSE\)*A1\)**0.3333) N
(---) N
(>           DR = SQRT\(RJMIN2\) - RI*\(BODY\(JMIN\)*A1\)**0.3333) N
(80c79) N
(<       DT = MIN\(DT,4.0D0*STEP\(I\)\)) N
(---) N
(>       DT = MIN\(DT,2.0D0*STEP\(I\)\)) N
(1,2c1,2) N
(< 6353 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/trans3.f) N
(< nbody6compare/trans3.f) N
(---) N
(> 6353 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/trans3.f) N
(> nbody6++compare/trans3.f) N
(1,2c1,2) N
(< 2221 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/trans4.f) N
(< nbody6compare/trans4.f) N
(---) N
(> 2221 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/trans4.f) N
(> nbody6++compare/trans4.f) N
(1,2c1,2) N
(< 1864 1996-03-26 22:20 /work/Umi2/spurzem/5/nbody6compare/transk.f) N
(< nbody6compare/transk.f) N
(---) N
(> 1864 1996-03-26 22:20 /work/Umi2/spurzem/5/nbody6++compare/transk.f) N
(> nbody6++compare/transk.f) N
(1,2c1,2) N
(OUT) (Page 205/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 1799 2004-10-22 11:18 /work/Umi2/spurzem/5/nbody6compare/transq.f) p n
(< nbody6compare/transq.f) N
(---) N
(> 1701 1998-08-21 15:59 /work/Umi2/spurzem/5/nbody6++compare/transq.f) N
(> nbody6++compare/transq.f) N
(73,75d72) N
(< *       Include artificial STOP to get round compiler bug.) N
(<       IF \(XI\(4\)-XI\(1\).EQ.0.0D0\) STOP) N
(< *) N
(1,2c1,2) N
(< 1167 1999-12-15 12:00 /work/Umi2/spurzem/5/nbody6compare/transx.f) N
(< nbody6compare/transx.f) N
(---) N
(> 1167 1999-12-15 12:00 /work/Umi2/spurzem/5/nbody6++compare/transx.f) N
(> nbody6++compare/transx.f) N
(1,2c1,2) N
(< 16762 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/triple.f) N
(< nbody6compare/triple.f) N
(---) N
(> 16215 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/triple.f) N
(> nbody6++compare/triple.f) N
(16c16) N
(<       COMMON/CLOSE/  RIJ\(4,4\),RCOLL,QPERI,SIZE\(4\),ECOLL3,IP\(4\)) N
(---) N
(>       COMMON/CLOSE/  RIJ\(4,4\),RCOLL,QPERI,SIZE\(4\),ECOLL3) N
(19d18) N
(<       COMMON/EBSAVE/  EBS) N
(39d37) N
(< *       IP      Polytropic index \(=1: n = 3/2; =2: n = 2; =3: n = 3\).) N
(107a106) N
(>       IQ = 0) N
(144,154d142) N
(< *       Determine the smallest two-body time-scale from parabolic orbit.) N
(<       IM = 1) N
(<       RM = R1) N
(<       IF \(R2.LT.R1\) THEN) N
(<           IM = 2) N
(<           RM = R2) N
(<       END IF) N
(<       VP2 = 2.0*\(M\(IM\) + M\(3\)\)/RM) N
(<       TP = RM/SQRT\(VP2\)) N
(<       TSTAR = MIN\(TP,TSTAR\)) N
(< *) N
(242c230) N
(<       NEXT = NSTEP3 + 2 ) N
(---) N
(>       NEXT = NSTEP3 + 2) N
(247c235) N
(<       IF \(QPERI.LT.4.0*MAX\(SIZE\(IM\),SIZE\(3\)\)\) THEN) N
(---) N
(>       IF \(QPERI.LT.2.7*MAX\(SIZE\(IM\),SIZE\(3\)\)\) THEN) N
(262,265d249) N
(< *       Evaluate the two-body energy for diagnostic purposes.) N
(<               CALL EREL3\(IM,EBS,SEMI\)) N
(<               DMINC = MIN\(RCOLL,DMINC\)) N
(< *) N
(316,318d299) N
(<       I3 = IP\(3\)) N
(<       IP\(3\) = IP\(IMIN\)) N
(<       IP\(IMIN\) = I3) N
(387,389c368,370) N
(<           IM = 1) N
(<           IF \(R2.LT.R1\) IM = 2) N
(<           I = 3 - IM) N
(---) N
(>           IMIN = 1) N
(>           IF \(R2.LT.R1\) IMIN = 2) N
(>           I = 3 - IMIN) N
(402c383) N
(OUT) (Page 206/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (103/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (207-208) 104
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<           RDOT = RDOT + ) p n
(---) N
(>           RDOT = RDOT +) N
(1,2c1,2) N
(< 678 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/tstep.f) N
(< nbody6compare/tstep.f) N
(---) N
(> 678 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/tstep.f) N
(> nbody6++compare/tstep.f) N
(1,2c1,2) N
(< 1981 2006-09-02 12:12 /work/Umi2/spurzem/5/nbody6compare/units.f) N
(< nbody6compare/units.f) N
(---) N
(> 1786 2003-08-12 04:29 /work/Umi2/spurzem/5/nbody6++compare/units.f) N
(> nbody6++compare/units.f) N
(9c9) N
(< *) N
(---) N
(>       ) N
(15a16) N
(>       IF\(ZMBAR.GT.0.D0\)THEN) N
(17a19,22) N
(>       ELSE) N
(>       YRS = 0.D0) N
(>       DAYS = 0.D0) N
(>       END IF) N
(45,57c50,55) N
(<       WRITE \(6,10\)  RBAR, ZMBAR, VSTAR, TSTAR, BODYM*ZMBAR, SU) N
(<    10 FORMAT \(/,12X,'PHYSICAL SCALING:    R* =',1P,E9.1,) N
(<      &              '  M* =',0P,F8.1,'  V* =',1P,E10.2,'  T* =',E10.2,) N
(<      &              '  <M> =',0P,F5.2,'  SU =',1P,E8.1\)) N
(< *) N
(< *       Print relevant parameters for the GR case \(RZ = 6*<m>/c^2\).) N
(<       IF \(KZ\(27\).EQ.3\) THEN) N
(<           CLIGHT = 3.0D+05/VSTAR) N
(<           RZ = 6.0*ZMASS/\(FLOAT\(N\)*CLIGHT**2\)) N
(<           WRITE \(6,20\)  VSTAR, CLIGHT, RZ) N
(<    20     FORMAT \(/,12X,'GR SCALING:    V* =',1P,E10.2,'  C =',E10.2,) N
(<      &                                  '  RZ =',E10.2\)) N
(<       END IF) N
(---) N
(>       if\(rank.eq.0\)then) N
(>       WRITE \(6,10\) RBAR, ZMBAR, VSTAR, TSTAR, BODYM*ZMBAR, SU, RAU, YRS) N
(>    10 FORMAT \(/,5X,'PHYSICAL SCALING:    R* =',1PE11.4,'  M* =',E11.4,) N
(>      &              '  V* =',E11.4,'  T* =',E11.4,'  <M> =',E11.4,/,) N
(>      &           26X, 'SU =',E11.4,'  AU =',E11.4,'  YRS =',E11.4,/\)) N
(>       end if) N
(1,2c1,2) N
(< 6835 2006-02-11 13:18 /work/Umi2/spurzem/5/nbody6compare/unpert.f) N
(< nbody6compare/unpert.f) N
(---) N
(> 6158 2003-06-23 19:33 /work/Umi2/spurzem/5/nbody6++compare/unpert.f) N
(> nbody6++compare/unpert.f) N
(8d7) N
(<       REAL*8  UI\(4\),UIDOT\(4\)) N
(18c17) N
(<       IF \(TIME - T0\(I1\).LT.2.0D+09*TK\) THEN) N
(---) N
(>       IF \(TIME - T0\(I1\).LT.2.0E+09*TK\) THEN) N
(58c57) N
(<       IF \(DT.LT.TK\) THEN) N
(---) N
(>    10 IF \(DT.LT.TK\) THEN) N
(80d78) N
(<               BE\(3\) = BE\(3\) + \(POT2 - POT1\)) N
(88c86) N
(<      &    KSTAR\(I\).LT.19.AND.NAME\(I\).GT.0\) THEN) N
(---) N
(>      &    KSTAR\(I\).NE.20.AND.NAME\(I\).GT.0\) THEN) N
(OUT) (Page 207/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(141,158d138) p n
(< *       Perform general two-body collision test.) N
(<       IF \(KZ\(19\).GE.3.AND.NAME\(I\).GT.0\) THEN) N
(<           RI = 0.0) N
(<           DO 29 K = 1,4) N
(<               UI\(K\) = U0\(K,IPAIR\)) N
(<               UIDOT\(K\) = UDOT\(K,IPAIR\)) N
(<               RI = RI + UI\(K\)**2) N
(<    29     CONTINUE) N
(<           CALL PERI\(UI,UIDOT,RI,BODY\(I1\),BODY\(I1+1\),QPERI\)) N
(<           IF \(QPERI.LT.0.75*\(RADIUS\(I1\) + RADIUS\(I1+1\)\)\) THEN) N
(< *       Obtain KS variables at pericentre before coalescence to one body.) N
(<               CALL KSPERI\(IPAIR\)) N
(<               KSPAIR = IPAIR) N
(<               CALL CMBODY\(QPERI,2\)) N
(<               IF \(IPHASE.LT.0\) GO TO 30) N
(<           END IF) N
(<       END IF) N
(< *) N
(172c152) N
(<       IF \(KZ\(28\).GT.0.AND.KSTAR\(I\).GE.19\) THEN) N
(---) N
(>       IF \(KZ\(28\).GT.0.AND.SEMI*SU.LT.10.0.AND.KSTAR\(I\).GT.19\) THEN) N
(194a175,176) N
(> ) N
(> ) N
(1,2c1,2) N
(< 6687 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/update.f) N
(< nbody6compare/update.f) N
(---) N
(> 6213 2002-02-20 20:28 /work/Umi2/spurzem/5/nbody6++compare/update.f) N
(> nbody6++compare/update.f) N
(69c69) N
(<               LIST\(L,J\) = LIST\(L+1,J\) ) N
(---) N
(>               LIST\(L,J\) = LIST\(L+1,J\)) N
(100c100) N
(<           IF \(KCASE.EQ.1\) WRITE \(6,78\)  NNB, J, JCOMP) N
(---) N
(>           IF \(rank.eq.0.and.KCASE.EQ.1\) WRITE \(6,78\)  NNB, J, JCOMP) N
(161c161,162) N
(<       IF \(IFLAG.NE.-1\) WRITE \(8,104\)  IPAIR, IFLAG, JLIST\(1\), JLIST\(2\)) N
(---) N
(>       IF \(rank.eq.0.and.IFLAG.NE.-1\) ) N
(>      &   WRITE \(8,104\)  IPAIR, IFLAG, JLIST\(1\), JLIST\(2\)) N
(180,195d180) N
(< *       Update list of high velocity particles containing c.m. members.) N
(<       NNB = LISTV\(1\)) N
(<       DO 130 L = 2,NNB+1) N
(<           IF \(LISTV\(L\).EQ.ICM\) THEN) N
(< *       Remove old c.m. and reduce the membership.) N
(<               DO 125 K = L,NNB) N
(<                   LISTV\(K\) = LISTV\(K+1\)) N
(<   125         CONTINUE) N
(<               LISTV\(1\) = LISTV\(1\) - 1) N
(<           END IF) N
(< *       Reduce higher particle locations by one.) N
(<           IF \(LISTV\(L\).GT.ICM\) THEN) N
(<               LISTV\(L\) = LISTV\(L\) - 1) N
(<           END IF) N
(<   130 CONTINUE) N
(< *) N
(1,2c1,2) N
(< 462 1995-11-27 12:52 /work/Umi2/spurzem/5/nbody6compare/vector.f) N
(< nbody6compare/vector.f) N
(---) N
(> 462 1995-11-27 12:52 /work/Umi2/spurzem/5/nbody6++compare/vector.f) N
(> nbody6++compare/vector.f) N
(1,2c1,2) N
(OUT) (Page 208/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (104/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (209-210) 105
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 1698 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/verify.f) p n
(< nbody6compare/verify.f) N
(---) N
(> 1732 2001-08-05 23:17 /work/Umi2/spurzem/5/nbody6++compare/verify.f) N
(> nbody6++compare/verify.f) N
(9d8) N
(< *) N
(11,14c10,13) N
(<       IF \(N.GE.NMAX - 2.OR.NNBMAX.GT.LMAX - 3\) THEN) N
(<           WRITE \(6,10\)  N, NNBMAX) N
(<    10     FORMAT \(/,5X,'FATAL ERROR!   BAD INPUT   N =',I5,) N
(<      &                                                  '  NNBMAX =',I4\)) N
(---) N
(>       IF \(N.GE.NMAX - 2.OR.NNBMAX.GT.LMAX - 3.OR.NNBOPT.GT.NNBMAX\) THEN) N
(>           WRITE \(6,10\)  N, NNBMAX, NNBOPT) N
(>    10     FORMAT \(/,5X,'FATAL ERROR!   BAD INPUT   N =',I5,' NNBMAX =',) N
(>      &                                           I5,'  NNBOPT =',I5\)) N
(33,34c32,33) N
(<       IF \(N.LE.0.OR.NNBMAX.LE.0.OR.ETAI.LE.0.0.OR.ETAR.LE.0.0\) THEN) N
(<           WRITE \(6,40\)  N, NNBMAX, ETAI, ETAR) N
(---) N
(>       IF \(N.LE.0.OR.NNBOPT.LE.0.OR.ETAI.LE.0.0.OR.ETAR.LE.0.0\) THEN) N
(>           WRITE \(6,40\)  N, NNBOPT, ETAI, ETAR) N
(36c35) N
(<      &                  '  NNBMAX =',I4,'  ETAI =',F6.2,'  ETAR =',F6.2\)) N
(---) N
(>      &                  '  NNBOPT =',I4,'  ETAI =',F6.2,'  ETAR =',F6.2\)) N
(1,2c1,2) N
(< 1542 2004-05-13 10:31 /work/Umi2/spurzem/5/nbody6compare/xcpred.f) N
(< nbody6compare/xcpred.f) N
(---) N
(> 1594 1999-10-09 12:04 /work/Umi2/spurzem/5/nbody6++compare/xcpred.f) N
(> nbody6++compare/xcpred.f) N
(9c9,10) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(1,2c1,2) N
(< 1225 1999-01-24 11:05 /work/Umi2/spurzem/5/nbody6compare/xtf.f) N
(< nbody6compare/xtf.f) N
(---) N
(> 1225 1999-01-24 11:05 /work/Umi2/spurzem/5/nbody6++compare/xtf.f) N
(> nbody6++compare/xtf.f) N
(1,2c1,2) N
(< 2597 2004-05-13 10:32 /work/Umi2/spurzem/5/nbody6compare/xtpert.f) N
(< nbody6compare/xtpert.f) N
(---) N
(> 2649 1999-10-02 15:07 /work/Umi2/spurzem/5/nbody6++compare/xtpert.f) N
(> nbody6++compare/xtpert.f) N
(9c9,10) N
(<       PARAMETER  \(NMX=10,NMX3=3*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(---) N
(>       PARAMETER  \(NMX=10,NMX2=2*NMX,NMX3=3*NMX,NMX4=4*NMX,) N
(>      &            NMX8=8*NMX,NMXm=NMX*\(NMX-1\)/2\)) N
(1,2c1,2) N
(< 8482 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/xtrnl0.f) N
(< nbody6compare/xtrnl0.f) N
(---) N
(> 2042 2003-06-26 02:49 /work/Umi2/spurzem/5/nbody6++compare/xtrnl0.f) N
(> nbody6++compare/xtrnl0.f) N
(8,9d7) N
(<       COMMON/GALAXY/ GMG,RG\(3\),VG\(3\),FG\(3\),FGD\(3\),TG,) N
(<      &               OMEGA,DISK,A,B,V02,RL2) N
(19c17) N
(<       RHO = 0.11) N
(---) N
(>       RHON = 0.11) N
(35,40c33) N
(OUT) (Page 209/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       TIDAL\(3\) = -\(2.0*TWOPI*RHO + 2.0*\(A - B\)*\(A + B\)*\(PC/GM\)\)) p n
(< *) N
(<       FAC = 1.0E-10/\(PC/GM\)) N
(<       WRITE \(6,5\)  ZMBAR*ZMASS, FAC*TIDAL\(1\), FAC*TIDAL\(3\), PC/GM) N
(<     5 FORMAT \(/,12X,'TOTAL MASS =',F7.1,'  TIDAL\(1&3\) =',1P,2E10.2,) N
(<      &              '  PC/GM =',E10.2\)) N
(---) N
(>       TIDAL\(3\) = -\(2.0*TWOPI*RHON + 2.0*\(A - B\)*\(A + B\)*\(PC/GM\)\)) N
(45c38,39) N
(< *       Define time scale in seconds and velocity scale in km/sec.) N
(---) N
(> *       Define time scale in seconds using pc as length unit.) N
(> *          and velocity scale in km/sec \(Aug.1998, P.Kroupa\)) N
(47,48d40) N
(<       VSTAR = 1.0E-05*SQRT\(GM/PC\)) N
(< *) N
(51a44,47) N
(> *       Ensure ZMBAR & RBAR > 0 \(=0: assume <M>/Sun = 1, RBAR = 1 pc\).) N
(>       IF \(ZMBAR.LE.0.0D0\) ZMBAR = FLOAT\(N\)/ZMASS) N
(>       IF \(RBAR.LE.0.0D0\) RBAR = 1.0) N
(> *) N
(58d53) N
(<       VSTAR = VSTAR*SQRT\(ZMASS*ZMBAR/RBAR\)) N
(60,229c55,61) N
(< *       Consider alternatives: circular point-mass orbit or 3D galaxy model.) N
(<    20 ZMTOT = ZMASS*ZMBAR) N
(<       IF \(KZ\(14\).EQ.2\) THEN) N
(< *) N
(< *       Read galaxy mass and central distance \(solar units and kpc\).) N
(<           READ \(5,*\)  GMG, RG0) N
(< *) N
(< *       Set circular velocity in km/sec and angular velocity in cgs units.) N
(<           VG0 = 1.0D-05*SQRT\(GMG/\(1000.0*RG0\)\)*SQRT\(GM/PC\)) N
(<           OMEGA = 100.0*VG0/RG0) N
(< *) N
(< *       Obtain King tidal radius in pc \(eq. \(9\) of Fukushige & Heggie, 1995\).) N
(<           RT = \(ZMTOT/\(3.0*GMG\)\)**0.3333*\(1000.0*RG0\)) N
(< *) N
(<           IF \(RTIDE.GT.0.0\) THEN) N
(< *       Determine RBAR \(N-body units\) from RT \(pc\) and King model \(see SCALE\).) N
(<               IF\(KZ\(22\).EQ.2\) RBAR = RT/RTIDE) N
(<           ELSE) N
(<               RTIDE = RT/RBAR) N
(<           END IF) N
(< *) N
(< *       Convert from cgs to N-body units.) N
(<           OMEGA = OMEGA*SQRT\(PC/GM\)*SQRT\(RBAR**3/ZMBAR\)) N
(< *) N
(< *       Specify the galactic parameters for equations of motion.) N
(<           TIDAL\(1\) = 3.0*OMEGA**2) N
(<           TIDAL\(2\) = 0.0D0) N
(<           TIDAL\(3\) = -OMEGA**2) N
(<           TIDAL\(4\) = 2.0*OMEGA) N
(<           GMG = GMG/ZMTOT) N
(< *) N
(< *       Check re-scaling units to current RBAR \(i.e. TSCALE, TSTAR & VSTAR\).) N
(<           IF \(KZ\(22\).EQ.2\) THEN) N
(<               CALL UNITS) N
(<           END IF) N
(< *) N
(<           WRITE \(6,35\)  GMG, RG0, OMEGA, RTIDE, RBAR) N
(< *) N
(< *       Treat the general case of 3D orbit for point-mass, disk and/or halo.) N
(<       ELSE IF \(KZ\(14\).EQ.3\) THEN) N
(< *) N
(< *       Read all parameters \(NB! Do not confuse with Oort's constants A, B\).) N
(<           READ \(5,*\)  GMG, DISK, A, B, VCIRC, RCIRC, \(RG\(K\),K=1,3\),) N
(<      &                                               \(VG\(K\),K=1,3\)) N
(< *) N
(OUT) (Page 210/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (105/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (211-212) 106
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Specify planar motion from SEMI & ECC for no disk & halo if VZ = 0.) p n
(<           IF \(DISK + VCIRC.EQ.0.0.AND.VG\(3\).EQ.0.0D0\) THEN) N
(<               RAP = RG\(1\)) N
(<               ECC = RG\(2\)) N
(<               SEMI = RAP/\(1.0 + ECC\)) N
(<               VG2 = GMG/\(1000.0*SEMI\)*\(1.0 - ECC\)/\(1.0 + ECC\)) N
(<               DO 25 K = 1,3) N
(<                   RG\(K\) = 0.0) N
(<                   VG\(K\) = 0.0) N
(<    25         CONTINUE) N
(< *       Initialize 2D orbit with given eccentricity at apocentre.) N
(<               RG\(1\) = RAP) N
(<               VG\(2\) = 1.0D-05*SQRT\(VG2\)*SQRT\(GM/PC\)) N
(<           END IF) N
(< *) N
(< *       Convert from kpc and km/sec to N-body units.) N
(<           DO 30 K = 1,3) N
(<               RG\(K\) = 1000.0*RG\(K\)/RBAR) N
(<               VG\(K\) = VG\(K\)/VSTAR) N
(<    30     CONTINUE) N
(< *) N
(< *       Define the angular velocity \(z-component\) and mass in N-body units.) N
(<           R02 = RG\(1\)**2 + RG\(2\)**2) N
(<           OMEGA = \(RG\(1\)*VG\(2\) - RG\(2\)*VG\(1\)\)/R02) N
(<           TIDAL\(4\) = 2.0*OMEGA) N
(<           GMG = GMG/ZMTOT) N
(< *       Adopt a tidal radius of 50 pc unless specified by routine SCALE.) N
(<           IF \(RTIDE.EQ.0.0D0\) RTIDE = 50.0/RBAR) N
(< *) N
(<           WRITE \(6,35\)  GMG, SQRT\(R02\), OMEGA, RTIDE, RBAR) N
(<    35     FORMAT \(/,12X,'POINT-MASS MODEL:    MG =',1P,E9.1,) N
(<      &                  '  RG =',E9.1,'  OMEGA =',E9.1,) N
(<      &                  '  RT =',0P,F6.2,'  RBAR =',F6.2\)) N
(< *       Define disk and/or logarithmic halo parameters in N-body units.) N
(<           IF \(DISK.GT.0.0D0\) THEN) N
(<               DISK = DISK/ZMTOT) N
(<               A = 1000.0*A/RBAR) N
(<               B = 1000.0*B/RBAR) N
(<               WRITE \(6,40\)  DISK, A, B) N
(<    40         FORMAT \(/,12X,'DISK MODEL:    MD =',1P,E9.1,) N
(<      &                                   '  A =',E9.1,'  B =',E9.1\)) N
(<           END IF) N
(< *) N
(< *       Determine local halo velocity from total circular velocity.) N
(<           IF \(VCIRC.GT.0.0D0\) THEN) N
(<               VCIRC = VCIRC/VSTAR) N
(<               RCIRC = 1000.0*RCIRC/RBAR) N
(<               A2 = RCIRC**2 + \(A + B\)**2) N
(<               V02 = VCIRC**2 - \(GMG/RCIRC + DISK*RCIRC**2/A2**1.5\)) N
(<               IF \(V02.LT.0.0D0\) THEN) N
(<                   WRITE \(6,45\)  V02, 0.001*RCIRC*RBAR) N
(<    45             FORMAT \(' ',' NEGATIVE HALO VELOCITY!    V02 RCIRC ',) N
(<      &                                                     1P,2E10.2\)) N
(<                   STOP) N
(<               END IF) N
(< *       Specify the corresponding scale length of logarithmic halo.) N
(<               RL2 = RCIRC**2*\(VCIRC**2 - V02\)/V02) N
(< *       Define the asymptotic circular velocity due to halo.) N
(<               V02 = VCIRC**2) N
(< *) N
(< *       Include table of circular velocity on unit #17 \(km/sec & kpc\).) N
(<               RI = 1000.0/RBAR) N
(<               DR = 1000.0/RBAR) N
(<               DO 60 K = 1,30) N
(<                   RI2 = RI**2) N
(<                   A2 = RI2 + \(A + B\)**2) N
(<                   VCIRC2 = GMG/SQRT\(RI2\) + DISK*RI2/A2**1.5 +) N
(<      &                                     V02*RI2/\(RL2 + RI2\)) N
(<                   WRITE \(17,50\)  SQRT\(VCIRC2\)*VSTAR, RI*RBAR/1000.0) N
(OUT) (Page 211/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<    50             FORMAT \(' CIRCULAR VELOCITY:    VC R ',F7.1,F7.2\)) p n
(<                   RI = RI + DR) N
(<    60         CONTINUE) N
(<               CALL FLUSH\(17\)) N
(< *) N
(<               A2 = R02 + \(A + B\)**2) N
(<               VCIRC2 = GMG/SQRT\(R02\) + DISK*R02/A2**1.5 +) N
(<      &                                 V02*R02/\(RL2 + R02\)) N
(<               VCIRC = SQRT\(VCIRC2\)*VSTAR) N
(<               WRITE \(6,62\)  VCIRC, SQRT\(R02\)/1000.0, SQRT\(RL2\)/1000.0) N
(<    62         FORMAT \(/,12X,'CIRCULAR VELOCITY:    VC RG RL',F7.1,2F7.2\)) N
(<           ELSE) N
(<               V02 = 0.0) N
(<           END IF) N
(< *) N
(< *       Initialize F & FDOT of reference frame \(point-mass galaxy is OK\).) N
(<           CALL GCINIT) N
(< *) N
(<           WRITE \(6,65\)  \(RG\(K\),K=1,3\), \(VG\(K\),K=1,3\), SQRT\(V02\)) N
(<    65     FORMAT \(/,12X,'SCALED ORBIT:    RG =',1P,3E10.2,) N
(<      &                                '  VG = ',3E10.2,'  V0 =',0P,F6.1\)) N
(<       END IF) N
(< *) N
(< *       Include Plummer potential for 2D and 3D \(set MP = 0 if not needed\).) N
(<       IF \(KZ\(14\).EQ.3.OR.KZ\(14\).EQ.4\) THEN) N
(< *       Check input for Plummer potential.) N
(<           READ \(5,*\)  MP, AP2, MPDOT, TDELAY) N
(<           WRITE \(6,70\)  MP, AP2, MPDOT, TDELAY) N
(<    70     FORMAT \(/,12X,'PLUMMER POTENTIAL:    MP =',F7.1,'  AP =',F6.2,) N
(<      &                  '  MPDOT =',F7.3,'  TDELAY =',F6.1\)) N
(<           MP0 = MP) N
(<           AP2 = AP2**2) N
(< *       Rescale velocities by including the Plummer virial energy.) N
(<           CALL ENERGY) N
(<           IF \(ZKIN.GT.0.0D0\) THEN) N
(< *       Note that QVIR = Q is saved in routine SCALE and VIR < 0.) N
(<               VIR = POT - VIR) N
(<               QV = SQRT\(QVIR*VIR/ZKIN\)) N
(<               DO 74 I = 1,N) N
(<                   DO 72 K = 1,3) N
(<                       XDOT\(K,I\) = XDOT\(K,I\)*QV) N
(<    72             CONTINUE) N
(<    74         CONTINUE) N
(<           END IF) N
(<       ELSE) N
(<           MP = 0.0) N
(<       END IF) N
(<       RTIDE0 = RTIDE) N
(< *) N
(< *       Define tidal radius in scaled units for linearized field.) N
(<       IF \(KZ\(14\).LE.2\) THEN) N
(<           RTIDE = \(ZMASS/TIDAL\(1\)\)**0.3333) N
(<           WRITE \(6,75\)  \(TIDAL\(K\),K=1,4\), TSCALE, RTIDE) N
(<    75     FORMAT \(/,12X,'TIDAL PARAMETERS:  ',1P,4E10.2,) N
(<      &                  '  TSCALE =',E9.2,'  RTIDE =',0P,F6.2,/\)) N
(<       END IF) N
(---) N
(> *       Define tidal radius in scaled units.) N
(>       RTIDE = \(ZMASS/TIDAL\(1\)\)**0.3333) N
(> *) N
(>       if\(rank.eq.0\) WRITE \(6,15\)  \(TIDAL\(K\),K=1,4\), TSCALE, RTIDE) N
(>    15 FORMAT \(/,12X,'TIDAL PARAMETERS:  ',1P4E10.2,'  TSCALE =',E9.2,) N
(>      &                               ' \(10**6 YRS\)','  RTIDE =',) N
(>      &                                  0PF6.2,/\)) N
(231c63) N
(<       RETURN) N
(---) N
(>    20 RETURN) N
(1,2c1,2) N
(OUT) (Page 212/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (106/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (213-214) 107
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 2233 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/xtrnld.f) p n
(< nbody6compare/xtrnld.f) N
(---) N
(> 1478 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/xtrnld.f) N
(> nbody6++compare/xtrnld.f) N
(8d7) N
(<       REAL*8  XI\(3\),XIDOT\(3\),FIRR\(3\),FREG\(3\),FD\(3\),FDR\(3\)) N
(11,12c10,11) N
(< *       See whether to include the standard or point-mass tidal force.) N
(<       IF \(KZ\(14\).LE.2.AND.KCASE.EQ.1\) THEN) N
(---) N
(> *       See whether to include the galactic tidal force.) N
(>       IF \(TIDAL\(1\).GT.0.0.AND.KCASE.EQ.1\) THEN) N
(26c25) N
(<       IF \(KZ\(14\).LE.2.AND.KCASE.EQ.2\) THEN) N
(---) N
(>       IF \(TIDAL\(1\).GT.0.0.AND.KCASE.EQ.2\) THEN) N
(40,60d38) N
(< *       Check options for galactic potential \(called from FPOLY1\).) N
(<       IF \(KZ\(14\).GE.3.AND.KCASE.EQ.1\) THEN) N
(< *       Obtain regular force components for 3D galaxy or Plummer model.) N
(<           DO 30 I = I1,I2) N
(<               DO 25 K = 1,3) N
(<                   XI\(K\) = X\(K,I\)) N
(<                   XIDOT\(K\) = XDOT\(K,I\)) N
(<                   FIRR\(K\) = 0.0) N
(<                   FD\(K\) = 0.0) N
(<                   FREG\(K\) = 0.0) N
(<                   FDR\(K\) = 0.0) N
(<    25         CONTINUE) N
(<               CALL XTRNLF\(XI,XIDOT,FIRR,FREG,FD,FDR,1\)) N
(<               DO 28 K = 1,3) N
(<                   FR\(K,I\) = FR\(K,I\) + FREG\(K\)) N
(<                   D1R\(K,I\) = D1R\(K,I\) + FDR\(K\)) N
(<    28         CONTINUE) N
(<    30     CONTINUE) N
(< *) N
(<       END IF) N
(< *) N
(1,2c1,2) N
(< 2876 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/xtrnlf.f) N
(< nbody6compare/xtrnlf.f) N
(---) N
(> 893 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/xtrnlf.f) N
(> nbody6++compare/xtrnlf.f) N
(1c1) N
(<       SUBROUTINE XTRNLF\(XI,XIDOT,FIRR,FREG,FD,FDR,KCASE\)) N
(---) N
(>       SUBROUTINE XTRNLF\(I,XI,XIDOT,FIRR,FREG,FD,FDR,KCASE\)) N
(8,11c8) N
(<       COMMON/GALAXY/ GMG,RG\(3\),VG\(3\),FG\(3\),FGD\(3\),TG,) N
(<      &               OMEGA,DISK,A,B,V02,RL2) N
(<       REAL*8  XI\(3\),XIDOT\(3\),FIRR\(3\),FREG\(3\),FD\(3\),FDR\(3\),) N
(<      &        XG\(3\),XGDOT\(3\),FM\(3\),FMD\(3\),FS\(3\),FSD\(3\)) N
(---) N
(>       REAL*8  XI\(3\),XIDOT\(3\),FIRR\(3\),FREG\(3\),FD\(3\),FDR\(3\)) N
(14,15c11,12) N
(< *       See whether to include a linearized galactic tidal force \(two cases\).) N
(<       IF \(KZ\(14\).LE.2\) THEN) N
(---) N
(> *       See whether to include the galactic tidal force.) N
(>       IF \(TIDAL\(1\).GT.0.0\) THEN) N
(29,80d25) N
(< *       Consider point-mass, disk and/or logarithmic halo model.) N
(<       IF \(KZ\(14\).EQ.3.AND.KCASE.GT.0\) THEN) N
(<           DO 5 K = 1,3) N
(<               XG\(K\) = RG\(K\) + XI\(K\)) N
(<               XGDOT\(K\) = VG\(K\) + XIDOT\(K\)) N
(<     5     CONTINUE) N
(OUT) (Page 213/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *       Employ differential instead of linearized forms for better accuracy.) p n
(<           IF \(GMG.GT.0.0D0\) THEN) N
(<               CALL FNUC\(RG,VG,FS,FSD\)) N
(<               CALL FNUC\(XG,XGDOT,FM,FMD\)) N
(<               DO 10 K = 1,3) N
(<                   FREG\(K\) = FREG\(K\) + \(FM\(K\) - FS\(K\)\)) N
(<                   FDR\(K\) = FDR\(K\) + \(FMD\(K\) - FSD\(K\)\)) N
(<    10         CONTINUE) N
(<           END IF) N
(< *) N
(< *       Include Miyamoto disk for positive disk mass.) N
(<           IF \(DISK.GT.0.0D0\) THEN) N
(<               CALL FDISK\(RG,VG,FS,FSD\)) N
(<               CALL FDISK\(XG,XGDOT,FM,FMD\)) N
(<               DO 20 K = 1,3) N
(<                   FREG\(K\) = FREG\(K\) + \(FM\(K\) - FS\(K\)\)) N
(<                   FDR\(K\) = FDR\(K\) + \(FMD\(K\) - FSD\(K\)\)) N
(<    20         CONTINUE) N
(<           END IF) N
(< *) N
(< *       Check addition of logarithmic halo potential to regular force.) N
(<           IF \(V02.GT.0.0D0\) THEN) N
(<               CALL FHALO\(RG,VG,FS,FSD\)) N
(<               CALL FHALO\(XG,XGDOT,FM,FMD\)) N
(<               DO 30 K = 1,3) N
(<                   FREG\(K\) = FREG\(K\) + \(FM\(K\) - FS\(K\)\)) N
(<                   FDR\(K\) = FDR\(K\) + \(FMD\(K\) - FSD\(K\)\)) N
(<    30         CONTINUE) N
(<           END IF) N
(<       END IF) N
(< *) N
(< *       Include optional Plummer potential in the regular force.) N
(<       IF \(\(KZ\(14\).EQ.4.OR.MP.GT.0.0D0\).AND.KCASE.GT.0\) THEN) N
(<           RI2 = AP2) N
(<           RRDOT = 0.0) N
(<           DO 40 K = 1,3) N
(<               RI2 = RI2 + XI\(K\)**2) N
(<               RRDOT = RRDOT + XI\(K\)*XIDOT\(K\)) N
(<    40     CONTINUE) N
(<           FMP = MP/\(RI2*SQRT\(RI2\)\)) N
(<           DO 50 K = 1,3) N
(<               FREG\(K\) = FREG\(K\) - XI\(K\)*FMP) N
(<               FDR\(K\) = FDR\(K\) - \(XIDOT\(K\) - 3.0*RRDOT*XI\(K\)/RI2\)*FMP) N
(<    50     CONTINUE) N
(<       END IF) N
(< *) N
(1,2c1,2) N
(< 501 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/xtrnlp.f) N
(< nbody6compare/xtrnlp.f) N
(---) N
(> 501 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/xtrnlp.f) N
(> nbody6++compare/xtrnlp.f) N
(file /work/Umi2/spurzem/5/nbody6++compare/xtrnlt.f does not exist) N
(1,2c1,2) N
(< 314 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/xtrnlu.f) N
(< nbody6compare/xtrnlu.f) N
(---) N
(> 314 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/xtrnlu.f) N
(> nbody6++compare/xtrnlu.f) N
(1,2c1,2) N
(< 2163 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/xtrnlv.f) N
(< nbody6compare/xtrnlv.f) N
(---) N
(> 590 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/xtrnlv.f) N
(> nbody6++compare/xtrnlv.f) N
(4,5c4,5) N
(< *       External potential energy.) N
(< *       --------------------------) N
(---) N
(OUT) (Page 214/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (107/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (215-216) 108
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(> *       External potential.) p n
(> *       -------------------) N
(8,13d7) N
(<       COMMON/GALAXY/ GMG,RG\(3\),VG\(3\),FG\(3\),FGD\(3\),TG,) N
(<      &               OMEGA,DISK,A,B,V02,RL2) N
(<       REAL*8 XI\(3\)) N
(<       SAVE FIRST) N
(<       LOGICAL FIRST) N
(<       DATA FIRST /.TRUE./) N
(15a10) N
(> *       See whether to include the galactic tidal force.) N
(17,27c12) N
(< *       Skip external potential during scaling \(parameters not defined\).) N
(<       IF \(FIRST.AND.TIME.EQ.0.0D0\) THEN) N
(<           FIRST = .FALSE.) N
(<           GO TO 30) N
(<       ELSE IF \(KZ\(14\).GT.2\) THEN) N
(< *       Ignore the general case for now.) N
(<           GO TO 30) N
(<       END IF) N
(< *) N
(< *       See whether to include a linearized galactic tidal force.) N
(<       IF \(KZ\(14\).LE.2\) THEN) N
(---) N
(>       IF \(TIDAL\(1\).GT.0.0\) THEN) N
(32,63d16) N
(<       ELSE IF \(KZ\(14\).EQ.3\) THEN) N
(<           I = I1) N
(<           RG2 = 0.0) N
(<           RI2 = 0.0) N
(<           DO 20 K = 1,3) N
(<               XI\(K\) = X\(K,I\)) N
(<               RG2 = RG2 + RG\(K\)**2) N
(<               RI2 = RI2 + \(RG\(K\) + XI\(K\)\)**2) N
(<    20     CONTINUE) N
(< *) N
(< *       Include galaxy point mass term for body #I in differential form.) N
(<           IF \(GMG.GT.0.0D0\) THEN) N
(<               ET = ET + GMG*\(1.0/SQRT\(RI2\) - 1.0/SQRT\(RG2\)\)) N
(<           END IF) N
(< *) N
(< *       Add optional Miyamoto disk potential.) N
(<           IF \(DISK.GT.0.0D0\) THEN) N
(<               R2 = \(RG\(1\) + XI\(1\)\)**2 + \(RG\(2\) + XI\(2\)\)**2) N
(<               BZ = SQRT\(B**2 + \(RG\(3\) + XI\(3\)\)**2\)) N
(<               AZ = SQRT\(R2 + \(A + BZ\)**2\)) N
(<               R20 = RG\(1\)**2 + RG\(2\)**2) N
(<               BZ0 = SQRT\(B**2 + RG\(3\)**2\)) N
(<               AZ0 = SQRT\(R20 + \(A + BZ0\)**2\)) N
(<               ET = ET + DISK*\(1.0/AZ - 1.0/AZ0\)) N
(<           END IF) N
(< *) N
(< *       Check addition of differential logarithmic potential.) N
(<           IF \(V02.GT.0.0D0\) THEN) N
(<               ET = ET + 0.5*V02*\(LOG\(RI2\) - LOG\(RG2\)\)) N
(<           END IF) N
(< *       Form the differential potential energy due to tides.) N
(<           ET = BODY\(I\)*ET) N
(67c20) N
(<    30 IF \(I2.GT.I1\) THEN) N
(---) N
(>       IF \(I2.GT.I1\) THEN) N
(1,2c1,2) N
(< 3364 2006-09-02 16:54 /work/Umi2/spurzem/5/nbody6compare/xvpred.f) N
(< nbody6compare/xvpred.f) N
(---) N
(> 3375 2000-04-14 16:35 /work/Umi2/spurzem/5/nbody6++compare/xvpred.f) N
(> nbody6++compare/xvpred.f) N
(9d8) N
(OUT) (Page 215/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< *) p n
(63c62) N
(<       IF \(\(DT.EQ.0.0D0.AND.IPHASE.LT.4\).OR.BODY\(I\).EQ.0.0D0\) GO TO 35) N
(---) N
(>       IF \(DT.EQ.0.0D0.OR.BODY\(I\).EQ.0.0D0\) GO TO 35) N
(77c76) N
(<      &                   X0\(K,I\)) N
(---) N
(>      &                                                  X0\(K,I\)) N
(1,2c1,2) N
(< 519 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/ycopy.f) N
(< nbody6compare/ycopy.f) N
(---) N
(> 519 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/ycopy.f) N
(> nbody6++compare/ycopy.f) N
(1,2c1,2) N
(< 515 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6compare/ysave.f) N
(< nbody6compare/ysave.f) N
(---) N
(> 515 1995-11-14 11:13 /work/Umi2/spurzem/5/nbody6++compare/ysave.f) N
(> nbody6++compare/ysave.f) N
(1,2c1,2) N
(< 3427 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/zare.f) N
(< nbody6compare/zare.f) N
(---) N
(> 3317 1999-12-15 16:43 /work/Umi2/spurzem/5/nbody6++compare/zare.f) N
(> nbody6++compare/zare.f) N
(27a28,33) N
(> *       Predict unperturbed KS to avoid identical coordinates \(cf. NBINT\).) N
(> *     IF \(LIST\(1,I1\).EQ.0\) THEN) N
(> *         IPAIR = KVEC\(I1\)) N
(> *         CALL KSRES\(IPAIR,J1,J2,0.0D0\)) N
(> *     END IF) N
(> *) N
(76,78c82) N
(< *     A\(4\) = - A\(3\)) N
(< *       Note bug fix by Douglas Heggie 1/11/2000.) N
(<       A\(4\) = - \(3.0D0*M2 + M1\)) N
(---) N
(>       A\(4\) = - A\(3\)) N
(85,94c89,94) N
(< *  50 F1 = A\(1\)) N
(< *     FP1 = F1*5.0D0) N
(< *     DO 60 I = 2,5) N
(< *         F1 = F1*S + A\(I\)) N
(< *         FP1 = FP1*S + \(6-I\)*A\(I\)) N
(< *  60 CONTINUE) N
(< *) N
(< *       Replace by iteration of f\(s\)/s**2 = 0 for faster convergence \(DCH\).) N
(<    50 F1 = \(\(A\(1\)*S + A\(2\)\)*S + A\(3\)\)*S + A\(4\) + A\(5\)/S + A\(6\)/S**2) N
(<       FP1 = \(3.0*A\(1\)*S + 2.0*A\(2\)\)*S + A\(3\) - \(2.0*A\(6\)/S + A\(5\)\)/S**2) N
(---) N
(>    50 F1 = A\(1\)) N
(>       FP1 = F1*5.0D0) N
(>       DO 60 I = 2,5) N
(>           F1 = F1*S + A\(I\)) N
(>           FP1 = FP1*S + \(6-I\)*A\(I\)) N
(>    60 CONTINUE) N
(96c96) N
(< *     F1 = F1*S + A\(6\)) N
(---) N
(>       F1 = F1*S + A\(6\)) N
(1,2c1,2) N
(< 16217 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/zcnsts.f) N
(< nbody6compare/zcnsts.f) N
(---) N
(> 16217 2006-06-20 02:34 /work/Umi2/spurzem/5/nbody6++compare/zcnsts.f) N
(> nbody6++compare/zcnsts.f) N
(1,2c1,2) N
(OUT) (Page 216/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (108/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (217-218) 109
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(< 10298 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/zdata.f) p n
(< nbody6compare/zdata.f) N
(---) N
(> 10298 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/zdata.f) N
(> nbody6++compare/zdata.f) N
(1,2c1,2) N
(< 2138 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/zero.f) N
(< nbody6compare/zero.f) N
(---) N
(> 2222 2003-06-25 21:20 /work/Umi2/spurzem/5/nbody6++compare/zero.f) N
(> nbody6++compare/zero.f) N
(46d45) N
(<       ETIDE = 0.0D0) N
(51,52d49) N
(<       NBPREV = 0) N
(<       NNTB = 0) N
(58a56,57) N
(>       NBPREV = 0) N
(>       NNTB = 0) N
(75,76c74,75) N
(<       NTAIL = 0) N
(< *) N
(---) N
(> *         small value should be smaller than 1/\(4*KMAX\), plus security \(RS\)) N
(>       TINY = MIN\(1.D-4,0.01D0/FLOAT\(KMAX\)\)) N
(79c78) N
(<           KVEC\(J\) = 0.50001*FLOAT\(J + 1\)) N
(---) N
(>           KVEC\(J\) = \(0.5+TINY\)*FLOAT\(J + 1\)) N
(1,2c1,2) N
(< 23212 2006-02-08 15:49 /work/Umi2/spurzem/5/nbody6compare/zfuncs.f) N
(< nbody6compare/zfuncs.f) N
(---) N
(> 21334 2000-04-11 15:30 /work/Umi2/spurzem/5/nbody6++compare/zfuncs.f) N
(> nbody6++compare/zfuncs.f) N
(1d0) N
(< ) N
(5c4) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(20c19) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(36c35) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(51c50) N
(<       real*8 m,f,df,g,dg,a\(200\)) N
(---) N
(>       real*8 m,f,df,g,dg,a\(100\)) N
(54,55c53,54) N
(< * A function to evaluate the derivative of the lifetime to the BGB) N
(< * \(or to Helium ignition if no FGB exists\) wrt mass.) N
(---) N
(> * A function to evaluate the derivitive lifetime to the BGB) N
(> * or to Helium ignition if no FGB exists.) N
(67,84d65) N
(<       real*8 FUNCTION tbgdzf\(m\)) N
(<       implicit none) N
(<       real*8 m,f,df,g,dg,a\(200\)) N
(<       common /MSCFF/ a) N
(< *) N
(< * A function to evaluate the derivative of the lifetime to the BGB) N
(< * \(or to Helium ignition if no FGB exists\) wrt Z.) N
(< * \(JH 14/12/98\)) N
(< *) N
(OUT) (Page 217/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       f = a\(17\) + a\(18\)*m**4 + a\(19\)*m**5.5 + m**7) p n
(<       df = a\(117\) + a\(118\)*m**4 + a\(119\)*m**5.5) N
(<       g = a\(20\)*m**2 + a\(21\)*m**7) N
(<       dg = a\(120\)*m**2) N
(<       tbgdzf = \(df*g - f*dg\)/\(g*g\)) N
(< *) N
(<       return) N
(<       end) N
(< ***) N
(87c68) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(104c85) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(118c99) N
(<       real*8 m,mcut,a\(200\)) N
(---) N
(>       real*8 m,mcut,a\(100\)) N
(146c127) N
(<       real*8 m,a1,a\(200\)) N
(---) N
(>       real*8 m,a1,a\(100\)) N
(165c146) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(185c166) N
(<       real*8 m,mhook,a2,a\(200\)) N
(---) N
(>       real*8 m,mhook,a2,a\(100\)) N
(207c188) N
(<       real*8 m,m2,rchk,a\(200\)) N
(---) N
(>       real*8 m,m2,a\(100\)) N
(209,210d189) N
(<       real*8 rzamsf) N
(<       external rzamsf) N
(213,214d191) N
(< * Note that a safety check is added to ensure Rtms > Rzams) N
(< * when extrapolating the function to low masses. ) N
(219,220c196) N
(<          rchk = 1.5d0*rzamsf\(m\)) N
(<          rtmsf = MAX\(rchk,\(a\(52\) + a\(53\)*m**a\(55\)\)/\(a\(54\) + m**a\(56\)\)\)) N
(---) N
(>          rtmsf = \(a\(52\) + a\(53\)*m**a\(55\)\)/\(a\(54\) + m**a\(56\)\)) N
(233c209) N
(<       real*8 m,a5,a\(200\)) N
(---) N
(>       real*8 m,a5,xx,a\(100\)) N
(251c227,228) N
(<          ralphf = a5 + a\(69\)*\(m - a\(72\)\)) N
(---) N
(>          xx = a5 - a\(69\)*a\(72\)) N
(>          ralphf = xx + a\(69\)*m) N
(259c236) N
(<       real*8 m,m2,m3,b2,b3,a\(200\)) N
(---) N
(>       real*8 m,m2,m3,b2,b3,xx,a\(100\)) N
(278c255,256) N
(<          rbetaf = b3 + a\(80\)*\(m - m3\)) N
(---) N
(>          xx = b3 - a\(80\)*m3) N
(>          rbetaf = xx + a\(80\)*m) N
(287c265) N
(<       real*8 m,m1,b1,a\(200\)) N
(---) N
(OUT) (Page 218/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (109/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage
%%Page: (219-220) 110
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(>       real*8 m,m1,b1,a\(100\)) p n
(314c292) N
(<       real*8 m,mhook,m2,b2,a\(200\)) N
(---) N
(>       real*8 m,mhook,m2,b2,a\(100\)) N
(338c316) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(353c331) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(357c335) N
(< * A function to evaluate the derivative of the Lbgb function.) N
(---) N
(> * A function to evaluate the derivitive of the Lbgb function.) N
(373c351) N
(<       real*8 m,mhefl,a4,a\(200\)) N
(---) N
(>       real*8 m,mhefl,a4,a\(100\)) N
(393c371) N
(<       real*8 m,lum,a1,a\(200\)) N
(---) N
(>       real*8 m,lum,a1,a\(100\)) N
(405,419d382) N
(<       real*8 FUNCTION rgbdf\(m,lum\)) N
(<       implicit none) N
(<       real*8 m,lum,a1,a\(200\)) N
(<       common /GBCFF/ a) N
(< *) N
(< * A function to evaluate radius derivative on the GB \(as f\(L\)\).) N
(< * \(JH 24/11/97\)) N
(< *) N
(<       a1 = MIN\(a\(20\)/m**a\(21\),a\(22\)/m**a\(23\)\)) N
(<       rgbdf = a1*\(a\(18\)*lum**\(a\(18\)-1.d0\) + ) N
(<      &            a\(17\)*a\(19\)*lum**\(a\(19\)-1.d0\)\)) N
(< *) N
(<       return) N
(<       end) N
(< ***) N
(422c385) N
(<       real*8 m,lum,mhelf,m1,a1,a4,xx,a\(200\)) N
(---) N
(>       real*8 m,lum,mhelf,m1,a1,a4,xx,a\(100\)) N
(450,480d412) N
(<       real*8 FUNCTION ragbdf\(m,lum,mhelf\)) N
(<       implicit none) N
(<       real*8 m,lum,mhelf,m1,a1,a4,xx,a\(200\)) N
(<       common /GBCFF/ a) N
(< *) N
(< * A function to evaluate radius derivative on the AGB \(as f\(L\)\).) N
(< * \(JH 24/11/97\)) N
(< *) N
(<       m1 = mhelf - 0.2d0) N
(<       if\(m.ge.mhelf\)then) N
(<          xx = a\(24\)) N
(<       elseif\(m.ge.m1\)then) N
(<          xx = 1.d0 + 5.d0*\(a\(24\)-1.d0\)*\(m-m1\)) N
(<       else) N
(<          xx = 1.d0) N
(<       endif) N
(<       a4 = xx*a\(19\)) N
(<       if\(m.le.m1\)then) N
(<          a1 = a\(29\) + a\(30\)*m) N
(<       elseif\(m.ge.mhelf\)then) N
(<          a1 = MIN\(a\(25\)/m**a\(26\),a\(27\)/m**a\(28\)\)) N
(<       else) N
(<          a1 = a\(31\) + 5.d0*\(a\(32\)-a\(31\)\)*\(m-m1\)) N
(OUT) (Page 219/220) (Oct 03, 06 16:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(<       endif) p n
(< *) N
(<       ragbdf = a1*\(a\(18\)*lum**\(a\(18\)-1.d0\) + ) N
(<      &             a\(17\)*a4*lum**\(a4-1.d0\)\)) N
(< *) N
(<       return) N
(<       end) N
(< ***) N
(483c415) N
(<       real*8 m,mhefl,mchefl,mcbagb,a3,a\(200\)) N
(---) N
(>       real*8 m,mhefl,mchefl,mcbagb,a3,a\(100\)) N
(500c432) N
(<       real*8 mc,mhefl,mchefl,m1,m2,a3,a\(200\)) N
(---) N
(>       real*8 mc,mhefl,mchefl,m1,m2,a3,a\(100\)) N
(519c451) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(531c463) N
(<       real*8 mc,mc4,a\(200\)) N
(---) N
(>       real*8 mc,mc4,a\(100\)) N
(612c544) N
(<       real*8 m,mhefl,a\(200\)) N
(---) N
(>       real*8 m,mhefl,a\(100\)) N
(630c562) N
(<       real*8 m,a\(200\)) N
(---) N
(>       real*8 m,a\(100\)) N
(644c576) N
(<       real*8 m,mx,a\(200\)) N
(---) N
(>       real*8 m,mx,a\(100\)) N
(658c590) N
(<       real*8 m,mc,mhefl,mm,a\(200\)) N
(---) N
(>       real*8 m,mc,mhefl,mm,a\(100\)) N
(682c614) N
(<       real*8 m,mhefl,mfgb,mr,m1,m2,r1,a\(200\)) N
(---) N
(>       real*8 m,mhefl,mfgb,mr,m1,m2,r1,a\(100\)) N
(709c641) N
(<       real*8 m,mc,mhefl,mm,a4,a5,a\(200\)) N
(---) N
(>       real*8 m,mc,mhefl,mm,a4,a5,a\(100\)) N
(730c662) N
(<       real*8 m,mc,mhefl,rx,ry,mm,f,a\(200\)) N
(---) N
(>       real*8 m,mc,mhefl,rx,ry,mm,f,a\(100\)) N
(839c771) N
(<       real*8 mx,rx,rzams,rtms,gamma,tau,xx,a\(200\)) N
(---) N
(>       real*8 mx,rx,rzams,rtms,gamma,tau,xx,a\(100\)) N
(908,918d839) N
(<       real*8 FUNCTION vrotf\(m\)) N
(<       implicit none) N
(<       real*8 m) N
(< *) N
(<       vrotf = 330.d0*m**3.3/\(15.d0 + m**3.45\)) N
(< *) N
(<       return) N
(<       end) N
(< ***) N
(< ) N
(< ) N
(OUT) (Page 220/220) (Oct 03, 06 16:15) title
border
grestore
(Printed by Rainer Spurzem) rhead
(OUT) (110/110) (Tuesday October 03, 2006) footer
end % of iso15dict
pagesave restore
showpage

%%Trailer
end
%%EOF
